# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010 Pallets
# This file is distributed under the same license as the Flask package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Flask 1.1.x\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-08-21 20:07+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

# 9cd8d3337f6c4a718f12b26aa2fa67a5
#: ../../flask/docs/logging.rst:2
msgid "Logging"
msgstr "ログ処理（Logging）"

# 445fb48cfe0a466db5e657e82b655691
#: ../../flask/docs/logging.rst:4
msgid ""
"Flask uses standard Python :mod:`logging`. Messages about your Flask "
"application are logged with :meth:`app.logger <flask.Flask.logger>`, "
"which takes the same name as :attr:`app.name <flask.Flask.name>`. This "
"logger can also be used to log your own messages."
msgstr ""
"Flaskは標準的なPythonの\ :mod:`logging`\ を使用します。Flaskアプリケーション"
"に関するメッセージは、\ :attr:`app.name <flask.Flask.name>`\ と同じ名前を"
"取り入れた\ :meth:`app.logger <flask.Flask.logger>`\ を使ってログされます。"
"このloggerは自分独自のメッセージをログするためにも使用されます（訳注: "
"Flask自体のログだけでなく、Flaskアプリ開発者がアプリのログを出力するため"
"にも使用するという意味合いだと思います）。"

#: ../../flask/docs/logging.rst:23
msgid ""
"If you don't configure logging, Python's default log level is usually "
"'warning'. Nothing below the configured level will be visible."
msgstr ""

# 32060d07e20c4a6582224f8eabbaae2e
#: ../../flask/docs/logging.rst:28
msgid "Basic Configuration"
msgstr "基本設定（Basic Configuration）"

# 96f94e1b8ce646269c6333911c540ce1
#: ../../flask/docs/logging.rst:30
msgid ""
"When you want to configure logging for your project, you should do it as "
"soon as possible when the program starts. If :meth:`app.logger "
"<flask.Flask.logger>` is accessed before logging is configured, it will "
"add a default handler. If possible, configure logging before creating the"
" application object."
msgstr ""
"自分のプロジェクト用にログ処理を設定したいときは、プログラム開始時に出来る"
"だけ早く実施するべきです。もしログ処理を設定する前に\ :meth:`app.logger "
"<flask.Flask.logger>`\ が使われたときは、標準の処理器（handler）が追加"
"されます。可能であれば、アプリケーションのオブジェクトを作成する前にログ"
"処理を設定してください。"

# f916edc1793249c6b081031b6614f976
#: ../../flask/docs/logging.rst:35
msgid ""
"This example uses :func:`~logging.config.dictConfig` to create a logging "
"configuration similar to Flask's default, except for all logs::"
msgstr ""
"以下の例では、全てのログを対象にしていること以外はFlaskの標準設定と似た"
"ログ処理設定を作成するために、\ :func:`~logging.config.dictConfig`\ を使用"
"しています::"

# 972dff3eddab44d5b5d0d2c50c45e691
#: ../../flask/docs/logging.rst:60
msgid "Default Configuration"
msgstr ""

# 15ff50ff2df140299051ebf68b5c4864
#: ../../flask/docs/logging.rst:62
msgid ""
"If you do not configure logging yourself, Flask will add a "
":class:`~logging.StreamHandler` to :meth:`app.logger "
"<flask.Flask.logger>` automatically. During requests, it will write to "
"the stream specified by the WSGI server in ``environ['wsgi.errors']`` "
"(which is usually :data:`sys.stderr`). Outside a request, it will log to "
":data:`sys.stderr`."
msgstr ""
"もし自分でログ処理設定をしない場合、Flaskは\ :meth:`app.logger "
"<flask.Flask.logger>`\ へ\ :class:`~logging.StreamHandler`\ を自動的に"
"追加するでしょう。リクエストの処理中は、WSGIサーバによって\ "
"``environment['wsgi.errors']``\ で指定されたストリーム（普通は\ "
":data:`sys.stderr`\ です）へ書き込みます。リクエストの外側では、\ "
":data:`sys.stderr`\ へログします。"

# 18e58fd131224d9a9ee26fb99951d870
#: ../../flask/docs/logging.rst:70
msgid "Removing the Default Handler"
msgstr "標準の処理器（Handler）の除去"

# 42a9de7a9a484b15bbd26c03f94c84b9
#: ../../flask/docs/logging.rst:72
msgid ""
"If you configured logging after accessing :meth:`app.logger "
"<flask.Flask.logger>`, and need to remove the default handler, you can "
"import and remove it::"
msgstr ""
"もし\ :meth:`app.logger <flask.Flask.logger>`\ へアクセスした後でログ処理"
"設定をし、標準のhandlerを取り除く必要がある場合、それをimportしてremove"
"できます（訳注: 以下のコード例で「import」「remove～」とあるような処理が"
"できます）::"

# f67b1bbcf2e2456eae82866aa7394883
#: ../../flask/docs/logging.rst:82
msgid "Email Errors to Admins"
msgstr "管理者へのエラーのメール送信"

# d81bcfed5c8e44b1a9e74e70990b8319
#: ../../flask/docs/logging.rst:84
msgid ""
"When running the application on a remote server for production, you "
"probably won't be looking at the log messages very often. The WSGI server"
" will probably send log messages to a file, and you'll only check that "
"file if a user tells you something went wrong."
msgstr ""
"本番環境用に遠隔サーバでアプリケーションを走らせているとき、おそらく"
"あなたはそれほど頻繁にログメッセージを調べようとはしないでしょう。WSGI"
"サーバはおそらくログメッセージをファイルへ送り、もしもユーザが何か上手く"
"いってないと伝えたときだけ、ログをチェックするでしょう。"

# a05a56b32aea41488c5094fdbbee2ca9
#: ../../flask/docs/logging.rst:89
msgid ""
"To be proactive about discovering and fixing bugs, you can configure a "
":class:`logging.handlers.SMTPHandler` to send an email when errors and "
"higher are logged. ::"
msgstr ""
"バグの発見と修正に関して先手を取れるよう、エラーもしくはより重大なことが"
"ログされたときにはメールを送信するための\ :class:"
"`logging.handlers.SMTPHandler`\ を設定できます。::"

# 66b51268c8054ee78f3f02aabab6610b
#: ../../flask/docs/logging.rst:110
msgid ""
"This requires that you have an SMTP server set up on the same server. See"
" the Python docs for more information about configuring the handler."
msgstr ""
"これには、同じサーバでSMTPサーバが準備されていることが必要です。この"
"handlerの設定に関するさらなる情報についてはPythonのドキュメントを見て"
"ください。"

# 566e82779eec46d0986d20bafdcf0464
#: ../../flask/docs/logging.rst:115
msgid "Injecting Request Information"
msgstr "リクエストの情報の注入"

# 55f7880c223a40c39c9acb18fc0c7171
#: ../../flask/docs/logging.rst:117
msgid ""
"Seeing more information about the request, such as the IP address, may "
"help debugging some errors. You can subclass :class:`logging.Formatter` "
"to inject your own fields that can be used in messages. You can change "
"the formatter for Flask's default handler, the mail handler defined "
"above, or any other handler. ::"
msgstr ""
"例えばIPアドレス等、リクエストに関する情報をもっと見ることは、いくらかの"
"エラーのデバッグする手助けになることがあります。メッセージ中で使用可能に"
"なる独自のフィールドを注入するために、\ :class:`logging.Formatter`\ の"
"サブクラスを作成できます。Flaskの標準handler、先ほど定義したメールの"
"handler、およびあらゆるその他のhandlerに対してformatterを変更できます。::"

# 9e7f426db8464fceaf0d5f5b298e1575
#: ../../flask/docs/logging.rst:146
msgid "Other Libraries"
msgstr "他のライブラリ"

# 85ec1a4ef8fc48cab04eb2d7e00c810c
#: ../../flask/docs/logging.rst:148
msgid ""
"Other libraries may use logging extensively, and you want to see relevant"
" messages from those logs too. The simplest way to do this is to add "
"handlers to the root logger instead of only the app logger. ::"
msgstr ""
"他のライブラリでloggingを広く使用していて、それらのログからも関連する"
"メッセージを見たくなることがあるかもしれません。これを行う最も単純な"
"やり方は、app.loggerにだけhandlerを追加する代わりに、root（大本）の"
"loggerにhandlerを追加することです。::"

# 294cecfcd0564731ba4704299d3ec30d
#: ../../flask/docs/logging.rst:158
msgid ""
"Depending on your project, it may be more useful to configure each logger"
" you care about separately, instead of configuring only the root logger. "
"::"
msgstr ""
"自分のプロジェクト次第で、rootのloggerだけを設定する代わりに、扱っている"
"loggerをそれぞれ別々に設定する方がより便利かもしれません。"

# 41df0a5c72f34072a0ab9bc5e30d1d37
#: ../../flask/docs/logging.rst:171
msgid "Werkzeug"
msgstr ""

# 68c0d63d702747369bc00512037f1b4c
#: ../../flask/docs/logging.rst:173
msgid ""
"Werkzeug logs basic request/response information to the ``'werkzeug'`` "
"logger. If the root logger has no handlers configured, Werkzeug adds a "
":class:`~logging.StreamHandler` to its logger."
msgstr ""
"Werkzeugは基本的なリクエスト／レスポンスの情報を\ ``'werkzeug'``\ のlogger"
"へログします。もしrootのloggerにhandlerが設定されていない場合、werkzeugは"
"\ :class:`~logging.StreamHandler`\ をwerkzeugのloggerへ追加します。"

# 1748e8b0ca2346679db2c8f09439ccce
#: ../../flask/docs/logging.rst:179
msgid "Flask Extensions"
msgstr "Flask拡張"

# a6e82f52b00040288b0f5ee3d9613a14
#: ../../flask/docs/logging.rst:181
msgid ""
"Depending on the situation, an extension may choose to log to "
":meth:`app.logger <flask.Flask.logger>` or its own named logger. Consult "
"each extension's documentation for details."
msgstr ""
"状況次第で、Flask拡張は\ :meth:`app.logger <flask.Flask.logger>`\ もしくは"
"独自の名前のloggerへログすることを選択するかもしれません。詳細については、"
"それぞれのFlask拡張のドキュメントを調べてください。"

