# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010 Pallets
# This file is distributed under the same license as the Flask package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Flask 2.2.x\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-11-26 22:21+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.3\n"

#: ../../flask/docs/deploying/mod_wsgi.rst:2
msgid "mod_wsgi"
msgstr ""

#: ../../flask/docs/deploying/mod_wsgi.rst:4
msgid ""
"`mod_wsgi`_ is a WSGI server integrated with the `Apache httpd`_ server. "
"The modern `mod_wsgi-express`_ command makes it easy to configure and "
"start the server without needing to write Apache httpd configuration."
msgstr ""
"`mod_wsgi`_ は、`Apache httpd`_ サーバと統合されたWSGIサーバです。"
"最近の `mod_wsgi-express`_ コマンドは、Apache httpdの設定を書く必要なく、"
"サーバの設定と開始を容易にできるようにします。"

#: ../../flask/docs/deploying/mod_wsgi.rst:8
msgid "Tightly integrated with Apache httpd."
msgstr "Apache httpdと密接に統合されています。"

#: ../../flask/docs/deploying/mod_wsgi.rst:9
msgid "Supports Windows directly."
msgstr "Windowsを直接サポートします（訳注: WSLでなくても動きます）。"

#: ../../flask/docs/deploying/mod_wsgi.rst:10
msgid "Requires a compiler and the Apache development headers to install."
msgstr ""
"コンパイラとApacheの開発用ヘッダー（訳注: Apacheのモジュールなどを開発する"
"とき、プログラミング言語の処理などで必要になるファイルであり、HTTPのヘッダー"
"とは異なります）がインストールに必要です。"

#: ../../flask/docs/deploying/mod_wsgi.rst:11
msgid "Does not require a reverse proxy setup."
msgstr "リバースプロキシの用意が不要です。"

#: ../../flask/docs/deploying/mod_wsgi.rst:13
msgid ""
"This page outlines the basics of running mod_wsgi-express, not the more "
"complex installation and configuration with httpd. Be sure to read the "
"`mod_wsgi-express`_, `mod_wsgi`_, and `Apache httpd`_ documentation to "
"understand what features are available."
msgstr ""
"このページはmod_wsgi-expressを実行する基本について説明し、httpdに伴うより"
"複雑なインストールと設定は説明しません。`mod_wsgi-express`_、`mod_wsgi`_、"
"そして `Apache httpd`_ のドキュメントを読み、どの目玉機能（feature）が利用"
"可能か理解しておいてください。"

#: ../../flask/docs/deploying/mod_wsgi.rst:24
msgid "Installing"
msgstr "インストール"

#: ../../flask/docs/deploying/mod_wsgi.rst:26
msgid ""
"Installing mod_wsgi requires a compiler and the Apache server and "
"development headers installed. You will get an error if they are not. How"
" to install them depends on the OS and package manager that you use."
msgstr ""
"mod_wsgiのインストールにはコンパイラとApacheのサーバと開発用ヘッダーがイン"
"ストールされている必要があります。もしそれらがインストールされていない場合、"
"エラーが発生するでしょう。それらをどのようにインストールするかは、使って"
"いるOSとパッケージ管理ツール（package manager）に依存します。"

#: ../../flask/docs/deploying/mod_wsgi.rst:30
msgid "Create a virtualenv, install your application, then install ``mod_wsgi``."
msgstr ""
"virtualenvを作成し、アプリケーションをインストールし、それから "
"``mod_wsgi`` をインストールします。"

#: ../../flask/docs/deploying/mod_wsgi.rst:43
msgid "Running"
msgstr "実行"

#: ../../flask/docs/deploying/mod_wsgi.rst:45
msgid ""
"The only argument to ``mod_wsgi-express`` specifies a script containing "
"your Flask application, which must be called ``application``. You can "
"write a small script to import your app with this name, or to create it "
"if using the app factory pattern."
msgstr ""
"``mod_wsgi-express`` への唯一つの引数は、Flaskアプリケーションを含むスクリ"
"プトを指定し、（スクリプト内では）Flaskアプリケーションは ``application`` "
"と呼ばれる必要があります（訳注: 以下の例のように「application」という変数"
"にFlaskアプリケーションのインスタンスを格納するような意味合いです）。この"
"名前（「application」）で、自分のアプリケーションをimportするか、もし"
"factory patternを使っている場合はFlaskアプリケーションを作成する、小さな"
"スクリプトを書くことができます。"

#: ../../flask/docs/deploying/mod_wsgi.rst:50
#: ../../flask/docs/deploying/mod_wsgi.rst:57
msgid "``wsgi.py``"
msgstr ""

#: ../../flask/docs/deploying/mod_wsgi.rst:64
msgid "Now run the ``mod_wsgi-express start-server`` command."
msgstr "この時点で ``mod_wsgi-express start-server`` コマンドを実行します。"

#: ../../flask/docs/deploying/mod_wsgi.rst:70
msgid ""
"The ``--processes`` option specifies the number of worker processes to "
"run; a starting value could be ``CPU * 2``."
msgstr ""
"``--processes`` オプションは走らせるworkerプロセスの数を指定します; 開始時"
"の値は `` CPU * 2`` にできるでしょう。"

#: ../../flask/docs/deploying/mod_wsgi.rst:73
msgid ""
"Logs for each request aren't show in the terminal. If an error occurs, "
"its information is written to the error log file shown when starting the "
"server."
msgstr ""
"各リクエストのログは端末には表示されません。もしエラーが起きた場合、その"
"情報は、サーバ開始時に表示されるエラーログのファイルに書かれます。"

#: ../../flask/docs/deploying/mod_wsgi.rst:79
msgid "Binding Externally"
msgstr "外部への結び付け（Binding Externally）"

#: ../../flask/docs/deploying/mod_wsgi.rst:81
msgid ""
"Unlike the other WSGI servers in these docs, mod_wsgi can be run as root "
"to bind to privileged ports like 80 and 443. However, it must be "
"configured to drop permissions to a different user and group for the "
"worker processes."
msgstr ""
"このドキュメントの他のWSGIサーバとは違い、mod_wsgiは80番や443番のような結び"
"付け（bind）にroot権限が必要なポートに結びつけるために、rootとして実行でき"
"ます。しかしながら、workerプロセス用にはrootとは異なるユーザとグループに"
"権限を落とすよう設定される必要があります。"

#: ../../flask/docs/deploying/mod_wsgi.rst:86
msgid ""
"For example, if you created a ``hello`` user and group, you should "
"install your virtualenv and application as that user, then tell mod_wsgi "
"to drop to that user after starting."
msgstr ""
"例えば、もし ``hello`` ユーザとグループを作成した場合、virtualenvとアプリ"
"ケーションをそのユーザでインストールし、それからmod_wsgiに開始後はhello"
"ユーザに（権限を）落とすよう伝えるべきです。"

# 6abe8405e25e4d229320e53a42a34405
#~ msgid ""
#~ "For Python 3 add the following "
#~ "lines to the top of your ``.wsgi``"
#~ " file::"
#~ msgstr "Python3では、\\ ``.wsgi``\\ ファイルの最上部に以下の行を追加してください::"

# 5a83eb11c0cb48a38a7d6a13719c5e82
#~ msgid "mod_wsgi (Apache)"
#~ msgstr ""

# 79c514e33b5e4599ab3c809567ff4e92
#~ msgid "If you are using the `Apache`_ webserver, consider using `mod_wsgi`_."
#~ msgstr "もし\\ `Apache`_\\ ウェブサーバを使っているときは、\\ `mod_wsgi`_\\ を使うことを検討してください。"

# e390923b0d33415a9c7336cb9e045c6e
#~ msgid "Watch Out"
#~ msgstr "注意"

# cb8c815da58a4c8db8ea534a934c5f7e
#~ msgid ""
#~ "Please make sure in advance that "
#~ "any ``app.run()`` calls you might have"
#~ " in your application file are inside"
#~ " an ``if __name__ == '__main__':`` "
#~ "block or moved to a separate file."
#~ "  Just make sure it's not called "
#~ "because this will always start a "
#~ "local WSGI server which we do not"
#~ " want if we deploy that application"
#~ " to mod_wsgi."
#~ msgstr ""
#~ "予め自分のアプリケーションのファイル内にあるかもしれない全ての\\ ``app.run()``\\ 呼び出しは、\\"
#~ " ``if __name__ == '__main__':``\\ "
#~ "ブロックの内側にあるか、別のファイルに移動していることを確実にしておいてください。mod_wsgiへアプリケーションをデプロイするときは望まないローカルWSGIサーバを常に開始してしまうために、app.run()が呼び出されないことを、まずは確認してください。"

# 8861f3e7f5a14156bba73ecf020a62d1
#~ msgid "Installing `mod_wsgi`"
#~ msgstr "`mod_wsgi`\\ のインストール"

# ec8f509ea77a45028d25ef104229bf00
#~ msgid ""
#~ "If you don't have `mod_wsgi` installed"
#~ " yet you have to either install "
#~ "it using a package manager or "
#~ "compile it yourself.  The mod_wsgi "
#~ "`installation instructions`_ cover source "
#~ "installations on UNIX systems."
#~ msgstr ""
#~ "もし\\ `mod_wsgi`\\ をまだインストールしていない場合、package "
#~ "managerを使ってインストールするか自分でコンパイルしてください。mod_wsgiの\\ `installation "
#~ "instructions`_\\ はUNIXシステム上でのソースのインストールをカバーします。"

# ff5bb394eff74d989d6a6a0ec2ef86ac
#~ msgid ""
#~ "If you are using Ubuntu/Debian you "
#~ "can apt-get it and activate it "
#~ "as follows:"
#~ msgstr "もしUnbuntu/Debianを使っている場合、apt-getすることが可能で、以下のようにして有効にできます:"

# 72c5f1a6e94446eda7d03e0e705b162c
#~ msgid ""
#~ "If you are using a yum based "
#~ "distribution (Fedora, OpenSUSE, etc..) you "
#~ "can install it as follows:"
#~ msgstr "もしyumベースのディストリビューション（Fedora, OpenSUSEなど）を使っている場合、以下のようにインストール可能です:"

# 335b0f2447cd465e9192cfa6a760e7ea
#~ msgid ""
#~ "On FreeBSD install `mod_wsgi` by "
#~ "compiling the `www/mod_wsgi` port or by"
#~ " using pkg_add:"
#~ msgstr ""
#~ "FreeBSDでは\\ `mod_wsgi`\\ のインストールに\\ `www/mod_wsgi`\\"
#~ " のportをコンパイルするかpkg_addを使います:"

# 596ed9be257449efa6da9d3c6bb3550f
#~ msgid ""
#~ "If you are using pkgsrc you can"
#~ " install `mod_wsgi` by compiling the "
#~ "`www/ap2-wsgi` package."
#~ msgstr ""
#~ "もしpkgsrcを使っている場合、\\ `mod_wsgi`\\ のインストールに\\ "
#~ "`www/ap2-wsgi`\\ パッケージをコンパイルします。"

# 85731f4f9eca4132a466b2dbe12dc954
#~ msgid ""
#~ "If you encounter segfaulting child "
#~ "processes after the first apache reload"
#~ " you can safely ignore them.  Just"
#~ " restart the server."
#~ msgstr "もし最初にapacheを再読み込みしたとき子プロセスのsegfaultingに出くわした場合それらを安全に無視できます。ただサーバを再スタートしてください。"

# 92873f9670f7478fbd7976209f3187f3
#~ msgid "Creating a `.wsgi` file"
#~ msgstr "`.wsgi`\\ ファイルの作成"

# f77f7c8475b24544afed68c5d1135d68
#~ msgid ""
#~ "To run your application you need a"
#~ " :file:`yourapplication.wsgi` file. This file "
#~ "contains the code `mod_wsgi` is "
#~ "executing on startup to get the "
#~ "application object.  The object called "
#~ "`application` in that file is then "
#~ "used as application."
#~ msgstr ""
#~ "アプリケーションを実行するためには\\ :file:`yourapplication.wsgi`\\ "
#~ "ファイルが必要です。このファイルは、\\ `mod_wsgi`\\ "
#~ "が開始時にアプリケーションのオブジェクトを取得するために使うコードを含みます。そのファイルの中で\\ "
#~ "`application`\\ と呼ばれるオブジェクトがアプリケーションとして使用されます。"

# 20881425ddf944819aaeed6df89f7014
#~ msgid "For most applications the following file should be sufficient::"
#~ msgstr "殆どのアプリケーションでは以下のファイルで十分なはずです::"

# a49aa39e78494ec1b76170d0e61d23bb
#~ msgid ""
#~ "If a factory function is used in"
#~ " a :file:`__init__.py` file, then the "
#~ "function should be imported::"
#~ msgstr ":file:`__init__.py`\\ ファイルの中でfactory関数が使用されている場合、関数がimportされるはずです::"

# 8ae20e375f3b4a3abe803e05e5ea4776
#~ msgid ""
#~ "If you don't have a factory "
#~ "function for application creation but a"
#~ " singleton instance you can directly "
#~ "import that one as `application`."
#~ msgstr ""
#~ "アプリケーション作成用のfactory関数を使わずに単一の（singleton）インスタンスを使う場合、そのインスタンスを\\ "
#~ "`application`\\ として直接importできます。"

# e814d2a5388d4422ad80e057dd74feab
#~ msgid ""
#~ "Store that file somewhere that you "
#~ "will find it again (e.g.: "
#~ ":file:`/var/www/yourapplication`) and make sure "
#~ "that `yourapplication` and all the "
#~ "libraries that are in use are on"
#~ " the python load path.  If you "
#~ "don't want to install it system "
#~ "wide consider using a `virtual python`_"
#~ " instance.  Keep in mind that you "
#~ "will have to actually install your "
#~ "application into the virtualenv as well."
#~ "  Alternatively there is the option "
#~ "to just patch the path in the "
#~ "``.wsgi`` file before the import::"
#~ msgstr ""
#~ "もう一度見つけ出せるどこか（例: :file:`/var/www/yourapplication`\\ "
#~ "）へそのファイルを格納し、\\ `yourapplication`\\ "
#~ "と使用するすべてのライブラリがpythonのload pathにあることを確実にしてください。もしシステム全体用（system"
#~ " wide）にインストールしたくない場合、\\ `virtual python`_\\ "
#~ "インスタンスの使用を検討してください。（その場合）実際に自分のアプリケーションをvirtualenvへさらにインストールすることを覚えておいてください。代わりに、importする前に\\"
#~ " ``.wsgi``\\ ファイル中のpathをpatchするだけという選択肢があります::"

# 0cfca342a5cd4206bf21740133f33295
#~ msgid "Configuring Apache"
#~ msgstr "Apacheの設定"

# 1ab510107c3944c3b29a3045ba4688bb
#~ msgid ""
#~ "The last thing you have to do "
#~ "is to create an Apache configuration "
#~ "file for your application.  In this "
#~ "example we are telling `mod_wsgi` to "
#~ "execute the application under a "
#~ "different user for security reasons:"
#~ msgstr ""
#~ "しなければいけない最後のことは、自分のアプリケーション用にApacheの設定ファイルを作成することです。以下の例では\\ "
#~ "`mod_wsgi`\\ にセキュリティ上の理由から違うユーザとしてアプリケーションを実行するよう伝えています:"

# f2597da070f541d69d507f407d83ea68
#~ msgid ""
#~ "Note: WSGIDaemonProcess isn't implemented in"
#~ " Windows and Apache will refuse to"
#~ " run with the above configuration. On"
#~ " a Windows system, eliminate those "
#~ "lines:"
#~ msgstr ""
#~ "注目: WSGIDaemonProcess "
#~ "はWindowsでは未実装であり、Apacheは上記の設定での実行を拒否します。Windowsシステム上では、それらの行を消去してください:"

# 83e2b08d710548c0b3f93c885a23bfeb
#~ msgid ""
#~ "Note: There have been some changes "
#~ "in access control configuration for "
#~ "`Apache 2.4`_."
#~ msgstr "注目: `Apache 2.4`_\\ ではアクセス制御の設定にいくらか変更がありました。"

# 9b7277157cf5420c9e58670253f8f57c
#~ msgid ""
#~ "Most notably, the syntax for directory"
#~ " permissions has changed from httpd "
#~ "2.2"
#~ msgstr "最も目立つのは、ディレクトリのアクセス権の文法の変更です。以下のhttpd 2.2用から"

# eeaa0d4d5a434fb98625ec45ddd4a343
#~ msgid "to httpd 2.4 syntax"
#~ msgstr "こちらのhttpd 2.4文法になりました"

# f501517512f74fb19ce13ea81e4603b7
#~ msgid "For more information consult the `mod_wsgi documentation`_."
#~ msgstr "さらなる情報は\\ `mod_wsgi documentation`_\\ を調べてください。"

# 2ba41d66e15a44e697e9947290aac2aa
#~ msgid "Troubleshooting"
#~ msgstr ""

# feeeacf082664e878c43de9525788570
#~ msgid "If your application does not run, follow this guide to troubleshoot:"
#~ msgstr "もし自分のアプリケーションが走らないとき、トラブル対応のために以下のガイドに従ってください:"

# 92282cdaf8454a28a4c4d2f9b44c3062
#~ msgid ""
#~ "**Problem:** application does not run, "
#~ "errorlog shows SystemExit ignored"
#~ msgstr "**問題:** アプリケーションが走らず、エラーログは無視されたSystemExitを示しています"

# bdad99a152d44b8eae001d65475826a4
#~ msgid ""
#~ "You have an ``app.run()`` call in "
#~ "your application file that is not "
#~ "guarded by an ``if __name__ == "
#~ "'__main__':`` condition.  Either remove that"
#~ " :meth:`~flask.Flask.run` call from the "
#~ "file and move it into a separate"
#~ " :file:`run.py` file or put it into"
#~ " such an if block."
#~ msgstr ""
#~ "``if __name__ == '__main__':``\\ "
#~ "条件でガードされていない\\ ``app.run()``\\ "
#~ "呼び出しがアプリケーションのファイルにあります。その\\ :meth:`~flask.Flask.run`\\ "
#~ "呼び出しをファイルから消去するか、示したようなifブロックの内側に押し入れます。"

# 741cf920dc1d4273b153ad5388c4e057
#~ msgid "**Problem:** application gives permission errors"
#~ msgstr "**問題** アプリケーションがpermission errors（権限エラー）を出します"

# c3532b13c7894b029d434d07ac6fd994
#~ msgid ""
#~ "Probably caused by your application "
#~ "running as the wrong user.  Make "
#~ "sure the folders the application needs"
#~ " access to have the proper privileges"
#~ " set and the application runs as "
#~ "the correct user (``user`` and ``group``"
#~ " parameter to the `WSGIDaemonProcess` "
#~ "directive)"
#~ msgstr ""
#~ "おそらく自分のアプリケーションを正しくないユーザで走らせているのが原因です。アプリケーションがアクセスする必要があるフォルダに適切な権限を設定し、アプリケーションを正しいユーザ（（Apache設定での）\\"
#~ " WSGIDaemonProcess\\ ディレクティブの\\ ``user``\\ と\\"
#~ " ``group``\\ のパラメータ）で走らせることを確実にしてください。"

# 24f934218ae34b9c9a74a845adf37112
#~ msgid "**Problem:** application dies with an error on print"
#~ msgstr "**問題** アプリケーションがエラーを表示して死にます"

# 4d2baf2b51024ea295a706cb6438a3c1
#~ msgid ""
#~ "Keep in mind that mod_wsgi disallows "
#~ "doing anything with :data:`sys.stdout` and "
#~ ":data:`sys.stderr`.  You can disable this "
#~ "protection from the config by setting"
#~ " the `WSGIRestrictStdout` to ``off``:"
#~ msgstr ""
#~ "mod_wsgiは\\ :data:`sys.stdout`\\ と\\ "
#~ ":data:`sys.stderr`\\ へのあらゆる操作を認めないことを忘れないでください。この保護は\\ "
#~ "`WSGIRestrictStdout`\\ を\\ ``off``\\ にすることで無効にできます:"

# 9596c01ff5d04dea8d7f9324ae5a2e84
#~ msgid ""
#~ "Alternatively you can also replace the"
#~ " standard out in the .wsgi file "
#~ "with a different stream::"
#~ msgstr "代わりに.wsgiファイルの中で標準出力を別のストリームへ置き換えることも可能です::"

# d8e0a4ab63a947b59fc7c4e23d6603c7
#~ msgid "**Problem:** accessing resources gives IO errors"
#~ msgstr "**問題** リソースへアクセスするとIOエラーを出します"

# c505e5e2e3f04beea8034f476abb6889
#~ msgid ""
#~ "Your application probably is a single"
#~ " .py file you symlinked into the "
#~ "site-packages folder.  Please be aware"
#~ " that this does not work, instead "
#~ "you either have to put the folder"
#~ " into the pythonpath the file is "
#~ "stored in, or convert your application"
#~ " into a package."
#~ msgstr ""
#~ "おそらくアプリケーションがsite-"
#~ "packageフォルダの中へシンボリックリンクした（symlinked）単一の.pyファイルです。これは機能しないことを意識し、代わりにファイルが格納されているフォルダをpythonpathに押し入れるか、アプリケーションをパッケージへ変換してください。"

# c8e981d7b31c47c19b27cfd594e81228
#~ msgid ""
#~ "The reason for this is that for"
#~ " non-installed packages, the module "
#~ "filename is used to locate the "
#~ "resources and for symlinks the wrong "
#~ "filename is picked up."
#~ msgstr "この理由は、インストールされていないパッケージでは、モジュールのファイル名がリソースの場所に使用され、シンボリックリンクにより誤ったファイル名が拾われてしまうためです。"

# 9b6ecabc2f8847a0b3ca744abc4ad495
#~ msgid "Support for Automatic Reloading"
#~ msgstr "自動リロードのサポート"

# 78dbe9a2175545cbadd88e917766a30f
#~ msgid ""
#~ "To help deployment tools you can "
#~ "activate support for automatic reloading.  "
#~ "Whenever something changes the ``.wsgi`` "
#~ "file, `mod_wsgi` will reload all the "
#~ "daemon processes for us."
#~ msgstr ""
#~ "デプロイのツールを手助けするために自動リロードのサポートを有効にできます。いつでも\\ ``.wsgi``\\ "
#~ "ファイルに何か変更があったときは、\\ `mod_wsgi`\\ "
#~ "はすべてのデーモンプロセスを再読み込み（reload）します。"

# abe4c91d0f384e5bb1edac7071a0f2bc
#~ msgid "For that, just add the following directive to your `Directory` section:"
#~ msgstr "そのためには、ただ以下のディレクティブを自分の\\ `Directory` セクションへ追加します:"

# 6fd4ed7e63134939bad8eaedff2356bd
#~ msgid "Working with Virtual Environments"
#~ msgstr "Virtual Environmentを使った作業"

# 38fde1d5f82d4937a8cf9d2f02dbc7bb
#~ msgid ""
#~ "Virtual environments have the advantage "
#~ "that they never install the required "
#~ "dependencies system wide so you have "
#~ "a better control over what is used"
#~ " where.  If you want to use a"
#~ " virtual environment with mod_wsgi you "
#~ "have to modify your ``.wsgi`` file "
#~ "slightly."
#~ msgstr ""
#~ "virtual "
#~ "environmentは必要な依存対象をシステム全体用にインストールしないので、どこで何が使われるかについてよりよく制御できるという利点があります。もしvirtual"
#~ " environmentをmod_wsgiと一緒に使いたい場合、\\ ``.wsgi``\\ "
#~ "ファイルを少し変更する必要があります。"

# 68cb3e525782496798da304e24972e4f
#~ msgid "Add the following lines to the top of your ``.wsgi`` file::"
#~ msgstr "``.wsgi``\\ ファイルの最上部に以下の行を追加してください::"

# 2e1cc2136af14e7e9d380000a6ca00b2
#~ msgid ""
#~ "This sets up the load paths "
#~ "according to the settings of the "
#~ "virtual environment.  Keep in mind that"
#~ " the path has to be absolute."
#~ msgstr ""
#~ "これはロード用のpathをvirtual "
#~ "environmentの設定に沿って設定します。pathは絶対パスにする必要があることを忘れないでください。"

