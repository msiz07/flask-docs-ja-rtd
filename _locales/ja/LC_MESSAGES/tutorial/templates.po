# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010 Pallets
# This file is distributed under the same license as the Flask package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Flask 1.1.x\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-11-21 13:44+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"

# 5574c6dcd64a4de4b7271aa6203638cc
#: ../../tutorial/templates.rst:4
msgid "Templates"
msgstr "テンプレート"

# f323aa93390f44539cd96f4ad54867e4
#: ../../tutorial/templates.rst:6
msgid ""
"You've written the authentication views for your application, but if "
"you're running the server and try to go to any of the URLs, you'll see a "
"``TemplateNotFound`` error. That's because the views are calling "
":func:`render_template`, but you haven't written the templates yet. The "
"template files will be stored in the ``templates`` directory inside the "
"``flaskr`` package."
msgstr ""
"アプリケーションの認証のviewは書きましたが、もしサーバを実行してどのURLへ"
"行っても、\ ``TemplateNotFound``\ エラーを見ることになるでしょう。それは"
"viewが\ :func:`render_template`\ を呼び出していても、まだテンプレートを"
"書いていないためです。テンプレートファイルは\ ``flaskr``\ パッケージ内の\ "
"``templates``\ ディレクトリに格納されていきます。"

# 17ac92aff43b46668055e0dbfb4b0f51
#: ../../tutorial/templates.rst:13
msgid ""
"Templates are files that contain static data as well as placeholders for "
"dynamic data. A template is rendered with specific data to produce a "
"final document. Flask uses the `Jinja`_ template library to render "
"templates."
msgstr ""
"テンプレートは動的データにおけるプレースホルダと同様に、静的データを含んで"
"いるファイルです。テンプレートは最終ドキュメントを作成するために特定のデータ"
"と一緒に変換（render）されます。Flaskはテンプレートの変換にテンプレート"
"ライブラリの\ `Jinja`_\ を使用します。"

# c149abcf93af4fcf9219a806d9cf7d56
#: ../../tutorial/templates.rst:18
msgid ""
"In your application, you will use templates to render `HTML`_ which will "
"display in the user's browser. In Flask, Jinja is configured to "
"*autoescape* any data that is rendered in HTML templates. This means that"
" it's safe to render user input; any characters they've entered that "
"could mess with the HTML, such as ``<`` and ``>`` will be *escaped* with "
"*safe* values that look the same in the browser but don't cause unwanted "
"effects."
msgstr ""
"この（チュートリアルの）アプリケーションでは、ユーザのブラウザに表示する\ "
"`HTML`_\ へ変換（render）するためにテンプレートを使用していきます。"
"Flaskでは、HTMLテンプレートの中で変換されるあらゆるデータを\ *自動エスケープ*\ "
"するように、Jinjaが設定されています。これは、ユーザが入力したものを安全に"
"表示できるということです; ``<``\ や\ ``>``\ のような、HTMLに干渉しかねない"
"文字が入力されたとしても、望んでいない作用を引き起こさずに、ブラウザの中では"
"同じように見える\ *安全な*\ 値へと\ *エスケープ*\ します。"

# d67b1996b29543fa8c5691d0b884a05e
#: ../../tutorial/templates.rst:26
msgid ""
"Jinja looks and behaves mostly like Python. Special delimiters are used "
"to distinguish Jinja syntax from the static data in the template. "
"Anything between ``{{`` and ``}}`` is an expression that will be output "
"to the final document. ``{%`` and ``%}`` denotes a control flow statement"
" like ``if`` and ``for``. Unlike Python, blocks are denoted by start and "
"end tags rather than indentation since static text within a block could "
"change indentation."
msgstr ""
"Jinjaは大部分でPythonのように見え、振る舞います。特別な区切り文字（delimiter）が"
"テンプレートの中の静的データとJinja文法を区別するために使われます。\ ``{{``\ "
"と\ ``}}``\ の間のすべてのものが、最終ドキュメントとして出力される式（expression）"
"になります。\ ``{%``\ と\ ``%}``\ は、\ ``if``\ や\ ``for``\ のような制御フロー文"
"（control flow statement）を示します。ブロック内の静的テキストがインデントを"
"変えかねないので、Pythonとは異なり、ブロックはインデントではなく開始および終了"
"タグで示されます。"

# cc463701dd47430ca0e8c5e55c14d0cf
#: ../../tutorial/templates.rst:39
msgid "The Base Layout"
msgstr "ベースレイアウト"

# 89eb4b2a763140ada85f21b92a1b2279
#: ../../tutorial/templates.rst:41
msgid ""
"Each page in the application will have the same basic layout around a "
"different body. Instead of writing the entire HTML structure in each "
"template, each template will *extend* a base template and override "
"specific sections."
msgstr ""
"アプリケーションの各ページは、違う本体（body）を取り囲む同じベーシック"
"レイアウトを持ちます。各テンプレートで全てのHTML構造を書く代わりに、"
"各テンプレートはベースのテンプレートを\ *拡張*\ して、特定のセクションを"
"上書きします。"

# cf09f4409f0e49f29509c57e2c17efc2
#: ../../tutorial/templates.rst:46
msgid "``flaskr/templates/base.html``"
msgstr ""

# 0fb6c7ca1f184c78912618289974d704
#: ../../tutorial/templates.rst:74
msgid ""
":data:`g` is automatically available in templates. Based on if ``g.user``"
" is set (from ``load_logged_in_user``), either the username and a log out"
" link are displayed, or links to register and log in are displayed. "
":func:`url_for` is also automatically available, and is used to generate "
"URLs to views instead of writing them out manually."
msgstr ""
":data:`g`\ は自動的にテンプレート中で利用可能になります。\ ``g.user``\ "
"が設定されているか（\ ``load_logged_in_user``\ で設定されます）に基づいて、"
"ユーザ名とログアウトリンクが表示されるか、登録とログインへのリンクが表示"
"されます。\ :func:`url_for`\ も自動的に利用可能になり、URLを手作業でviewの"
"中へ書く代わりに、viewに対応するURLを生成するために使用されます。"

# f6ddc4f6eb934db1a16d3beb07f3fb23
#: ../../tutorial/templates.rst:80
msgid ""
"After the page title, and before the content, the template loops over "
"each message returned by :func:`get_flashed_messages`. You used "
":func:`flash` in the views to show error messages, and this is the code "
"that will display them."
msgstr ""
"ページタイトルの後、そしてcontentの前に、テンプレートは\ :func:"
"`get_flashed_messages`\ から返される各メッセージ上をループします。"
"エラーを表示するためにviewの中で\ :func:`flash`\ を使用しており、"
"それ（viewの中でflashを使ったエラーメッセージ）を表示するコードがこれ"
"（テンプレート中のget_flashed_messages）になります。"

# 1e17e6673e85485ab7c9f91de1f5aa7b
#: ../../tutorial/templates.rst:85
msgid ""
"There are three blocks defined here that will be overridden in the other "
"templates:"
msgstr ""
"ここでは、他のテンプレートで上書きされる予定の3つのブロックが定義されています:"

# 1e920c39bc6f4efb88352947c0e3e7e0
#: ../../tutorial/templates.rst:88
msgid ""
"``{% block title %}`` will change the title displayed in the browser's "
"tab and window title."
msgstr ""
"``{% block title %}``\ は、ブラウザのタブおよびウィンドウのタイトルで表示"
"されるタイトルを変更します。"

# 8515917a309b4ec2a54c3b242a96e8da
#: ../../tutorial/templates.rst:91
msgid ""
"``{% block header %}`` is similar to ``title`` but will change the title "
"displayed on the page."
msgstr ""
"``{% block header %}``\ は\ ``title``\ と似ていますが、ページ上に表示"
"されるタイトルを変更します。"

# b2e481b2b8e4478d91f30a5a01f09c0e
#: ../../tutorial/templates.rst:94
msgid ""
"``{% block content %}`` is where the content of each page goes, such as "
"the login form or a blog post."
msgstr ""
"``{% block content %}``\ は、ログインフォームやブログの投稿記事など、"
"各ページのコンテンツが行くところです。"

# eab634ab4dfb4476abd6ffdc3a05f9f0
#: ../../tutorial/templates.rst:97
msgid ""
"The base template is directly in the ``templates`` directory. To keep the"
" others organized, the templates for a blueprint will be placed in a "
"directory with the same name as the blueprint."
msgstr ""
"ベースのテンプレート（訳注: 上で示したbase.html）は\ ``templates``\ ディレクトリ"
"に直接置かれます。その他を編成された状態に保つため、blueprintのテンプレートは"
"blueprintと同じ名前のディレクトリに置かれます。"

# 51a96aeb3cbb4eb292a61aaa817e4afa
#: ../../tutorial/templates.rst:103
msgid "Register"
msgstr "登録"

# f5edfe79a16e4d2fb36a8418ae773ecb
#: ../../tutorial/templates.rst:105
msgid "``flaskr/templates/auth/register.html``"
msgstr ""

# 191c40f9687e4c7082e0d836bd175eb1
#: ../../tutorial/templates.rst:124
#, python-format
msgid ""
"``{% extends 'base.html' %}`` tells Jinja that this template should "
"replace the blocks from the base template. All the rendered content must "
"appear inside ``{% block %}`` tags that override blocks from the base "
"template."
msgstr ""
"``{% extends 'base.html' %}``\ は、このテンプレートはベースのテンプレート"
"からブロックを置き換えるものだということをJinjaへ伝えます。表示される"
"全てのcontentは、ベースのテンプレートのブロックを上書きする\ ``{% block %}``\ "
"タグの内側で現れる必要があります。"

# 2cb446d687694aa290ea8b6378a15391
#: ../../tutorial/templates.rst:129
msgid ""
"A useful pattern used here is to place ``{% block title %}`` inside ``{% "
"block header %}``. This will set the title block and then output the "
"value of it into the header block, so that both the window and page share"
" the same title without writing it twice."
msgstr ""
"``{% block title %}``\ を\ ``{% block header %}``\ の内側に置くのは、ここで"
"使われている便利なパターンです。これは、ウィンドウとページが同じタイトルを"
"2回書くことなく共有できるように、タイトルのブロックを設定し、それから"
"そのタイトルの値をヘッダのブロックの中に出力します。"

# a80d0c18af844222b993c780d59be402
#: ../../tutorial/templates.rst:134
msgid ""
"The ``input`` tags are using the ``required`` attribute here. This tells "
"the browser not to submit the form until those fields are filled in. If "
"the user is using an older browser that doesn't support that attribute, "
"or if they are using something besides a browser to make requests, you "
"still want to validate the data in the Flask view. It's important to "
"always fully validate the data on the server, even if the client does "
"some validation as well."
msgstr ""
"``input``\ タグは、ここでは\ ``required``\ 属性を使用しています。これは"
"ブラウザに、それらの入力欄が記入されないうちは、formを提出しないように"
"伝えます。もしその属性をサポートしない古いブラウザをユーザが使用している"
"場合は、もしくは、リクエストを作成するためにブラウザ以外の何かをユーザが"
"使用している場合は、まだFlaskのviewでデータを検証したいでしょう。サーバ側"
"で常に網羅的に検証することは、クライアント側で何かしらの検証を同様に行うと"
"しても、とても重要です。"

# 630b73e5bfdf43348bac9727f31cf958
#: ../../tutorial/templates.rst:144
msgid "Log In"
msgstr "ログイン"

# 8ad01ad5ef264211a6fd881461ee20d5
#: ../../tutorial/templates.rst:146
msgid ""
"This is identical to the register template except for the title and "
"submit button."
msgstr ""
"タイトルと提出ボタン以外は、これは登録のテンプレートと同じです。"

# c57da431bcae43ec90a6c8cdca9e879f
#: ../../tutorial/templates.rst:149
msgid "``flaskr/templates/auth/login.html``"
msgstr ""

# 026d120e2bce45a2ad5cca2853bea601
#: ../../tutorial/templates.rst:170
msgid "Register A User"
msgstr "ユーザ登録"

# 5448d491a1484de7bf09ea2c968aaf05
#: ../../tutorial/templates.rst:172
msgid ""
"Now that the authentication templates are written, you can register a "
"user. Make sure the server is still running (``flask run`` if it's not), "
"then go to http://127.0.0.1:5000/auth/register."
msgstr ""
"この時点で認証のテンプレートは書けたので、ユーザを登録可能です。サーバが"
"まだ起動している（していなければ\ ``flask run``\ する）ことを確認してから、"
"\ https://127.0.0.1:5000/auth/register\ へ行ってください。"

# 31a244d0475b44ff878cd1dca220ca3f
#: ../../tutorial/templates.rst:176
msgid ""
"Try clicking the \"Register\" button without filling out the form and see"
" that the browser shows an error message. Try removing the ``required`` "
"attributes from the ``register.html`` template and click \"Register\" "
"again. Instead of the browser showing an error, the page will reload and "
"the error from :func:`flash` in the view will be shown."
msgstr ""
"試しにformを記入せずに「Register」ボタンを押すと、ブラウザがエラーメッセージを"
"表示することが確認できます。試しに\ ``required``\ 属性を\ ``register.html``\ "
"テンプレートから削除してから「Register」をもう一度クリックしてください。"
"ブラウザがエラーを表示する代わりに、ページを再読み込みしてから、viewの中の\ "
":func:`flash`\ から来るエラーが表示されます。"

# 0923244ad7274073b59a4ebf8ffe0f12
#: ../../tutorial/templates.rst:182
msgid ""
"Fill out a username and password and you'll be redirected to the login "
"page. Try entering an incorrect username, or the correct username and "
"incorrect password. If you log in you'll get an error because there's no "
"``index`` view to redirect to yet."
msgstr ""
"ユーザ名とパスワードを記入するとログインページにリダイレクトされます。"
"試しに、不正なユーザ名を入力するか、正しいユーザ名と不正なパスワードを"
"入力してください。もしログインすれば、まだリダイレクト先の\ ``index``\ "
"のviewがないためにエラーになります。"

# 24489e16b3cd4e90b840a81199213715
#: ../../tutorial/templates.rst:187
msgid "Continue to :doc:`static`."
msgstr ":doc:`static`\ へ続きます。"

