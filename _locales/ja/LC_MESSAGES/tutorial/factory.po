# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010 Pallets
# This file is distributed under the same license as the Flask package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Flask 2.2.x\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-11-26 22:21+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.3\n"

#: ../../flask/docs/tutorial/factory.rst:128
msgid ""
"Now you can run your application using the ``flask`` command. From the "
"terminal, tell Flask where to find your application, then run it in debug"
" mode. Remember, you should still be in the top-level ``flask-tutorial`` "
"directory, not the ``flaskr`` package."
msgstr ""

#: ../../flask/docs/tutorial/factory.rst:133
msgid ""
"Debug mode shows an interactive debugger whenever a page raises an "
"exception, and restarts the server whenever you make changes to the code."
" You can leave it running and just reload the browser page as you follow "
"the tutorial."
msgstr ""

# 1dae90216daa4358ab0187edd570d335
#: ../../flask/docs/tutorial/factory.rst:4
msgid "Application Setup"
msgstr "アプリケーションの用意（Application Setup）"

# 8a24ec84dbb84f8e98a450907fa2b254
#: ../../flask/docs/tutorial/factory.rst:6
msgid ""
"A Flask application is an instance of the :class:`Flask` class. "
"Everything about the application, such as configuration and URLs, will be"
" registered with this class."
msgstr ""
"Flaskアプリケーションは\ :class:`Flask`\ クラスのインスタンスです。"
"例えば設定やURLなど、アプリケーションに関してはすべて、このクラスを"
"使って登録します。"

# 34a8cfb415464f9281c140c7374cb352
#: ../../flask/docs/tutorial/factory.rst:10
msgid ""
"The most straightforward way to create a Flask application is to create a"
" global :class:`Flask` instance directly at the top of your code, like "
"how the \"Hello, World!\" example did on the previous page. While this is"
" simple and useful in some cases, it can cause some tricky issues as the "
"project grows."
msgstr ""
"最も直観的なFlaskアプリケーションの作成方法は、コードの最上部にグローバルな"
"（モジュールのトップレベルとほぼ同じ意味合いで、Pythonで変数などのスコープや"
"名前解決でLEGBルール（Local, Enclosing, Global, Built-in）と呼ばれるものの"
"Globalにあたるもの） :class:`Flask`\ インスタンスを直接作成することで、前"
"ページの例「Hello, World!」のようなやり方です。これは場合によってはシンプル"
"で便利ですが、プロジェクトが成長すると何かしら扱いにくい問題を引き起こす"
"可能性があります。"

# 0a76c7e9ba3b46a899c6a4ad0181bce2
#: ../../flask/docs/tutorial/factory.rst:16
msgid ""
"Instead of creating a :class:`Flask` instance globally, you will create "
"it inside a function. This function is known as the *application "
"factory*. Any configuration, registration, and other setup the "
"application needs will happen inside the function, then the application "
"will be returned."
msgstr ""
":class:`Flask`\ インスタンスをグローバルに作成する代わりに、関数の内側で"
"作成するようにします。この関数は\ *アプリケーション製造工場（application "
"factory）*\ として知られています。アプリケーションが必要とするあらゆる"
"設定、登録、用意などは、この関数の内側で起こり、それからアプリケーションが"
"返されます（Flaskクラスのインスタンスがfactory関数から返されます）。"

# 645f1b51129c44bda59a2be9c4300101
#: ../../flask/docs/tutorial/factory.rst:24
msgid "The Application Factory"
msgstr "アプリケーション製造工場（The Application Factory）"

# 5cca4091b1d4498ba8f5973491783da8
#: ../../flask/docs/tutorial/factory.rst:26
msgid ""
"It's time to start coding! Create the ``flaskr`` directory and add the "
"``__init__.py`` file. The ``__init__.py`` serves double duty: it will "
"contain the application factory, and it tells Python that the ``flaskr`` "
"directory should be treated as a package."
msgstr ""
"それではコーディングを開始するときです！\ ``flaskr``\ ディレクトリを作成し、"
"\ ``__init__.py``\ ファイルを追加します。この\ ``__init__.py``\ は2つの"
"務めを担います: それはapplication factoryを含むことと、Pythonへ\ ``flaskr``\ "
"ディレクトリをpackageとして扱うように伝えることです。"

# 647bab244910471eb49833a64c80bef4
#: ../../flask/docs/tutorial/factory.rst:35
msgid "``flaskr/__init__.py``"
msgstr ""

# 5b75d5023dbb4481b41802232ff836a1
#: ../../flask/docs/tutorial/factory.rst:71
msgid ""
"``create_app`` is the application factory function. You'll add to it "
"later in the tutorial, but it already does a lot."
msgstr ""
"``create_app``\ はapplication factoryの関数です。このチュートリアルで"
"後程この関数に追加していきますが、既に多くのことを（create_appは）"
"果しています。"

# 8d73d94c30c54307ac3ec992efd5498f
#: ../../flask/docs/tutorial/factory.rst:74
msgid ""
"``app = Flask(__name__, instance_relative_config=True)`` creates the "
":class:`Flask` instance."
msgstr ""
"``app = Flask(__name__, instance_relative_config=True)``\ は\ :class:`Flask`\ "
"インスタンスを作成します。"

# 873cf3cab36d4edc818ff1ad57e39cce
#: ../../flask/docs/tutorial/factory.rst:77
msgid ""
"``__name__`` is the name of the current Python module. The app needs to "
"know where it's located to set up some paths, and ``__name__`` is a "
"convenient way to tell it that."
msgstr ""
"``__name__``\ は、この時点でのPythonのmodule名です。appは、いくつかpathを"
"用意するために、appがどの場所にあるか知る必要があり、\ ``__name__``\ "
"はそれを伝えるための便利なやり方です。"

# ae57d7591db14cb4b3690303c4d64a37
#: ../../flask/docs/tutorial/factory.rst:81
msgid ""
"``instance_relative_config=True`` tells the app that configuration files "
"are relative to the :ref:`instance folder <instance-folders>`. The "
"instance folder is located outside the ``flaskr`` package and can hold "
"local data that shouldn't be committed to version control, such as "
"configuration secrets and the database file."
msgstr ""
"``instance_relative_config=True``\ は、設定ファイル（の場所）が\ "
":ref:`インスタンスフォルダ <instance-folders>`\ から相対的に示されることを、"
"appへ伝えます。インスタンスフォルダは\ ``flaskr``\ パッケージの外側に"
"位置し、秘密情報の設定やデータベースのファイルなど、バージョン管理へコミット"
"するべきではないローカルのデータを保持することができます。"

# 73c81deabe8448e09a6c69c5601a673d
#: ../../flask/docs/tutorial/factory.rst:88
msgid ""
":meth:`app.config.from_mapping() <Config.from_mapping>` sets some default"
" configuration that the app will use:"
msgstr ""
":meth:`app.config.from_mapping() <Config.from_mapping>`\ は、appが使用する"
"標準設定をいくつか設定します:"

# ba6c5cc75549470da78f42d9dc62ba5e
#: ../../flask/docs/tutorial/factory.rst:91
msgid ""
":data:`SECRET_KEY` is used by Flask and extensions to keep data safe. "
"It's set to ``'dev'`` to provide a convenient value during development, "
"but it should be overridden with a random value when deploying."
msgstr ""
":data:`SECRET_KEY`\ は、データを安全に保つためにFlaskとFlask拡張によって"
"使用されます。開発中には便利な値を提供するために、ここでは\ ``'dev'``\ に"
"設定されていますが、デプロイ（訳注：本番環境などへの移行）をするときには"
"無作為な値（random value）で上書きするべきです。"

# b0c29ca6aaef4879ae08dcd540fb5419
#: ../../flask/docs/tutorial/factory.rst:96
msgid ""
"``DATABASE`` is the path where the SQLite database file will be saved. "
"It's under :attr:`app.instance_path <Flask.instance_path>`, which is the "
"path that Flask has chosen for the instance folder. You'll learn more "
"about the database in the next section."
msgstr ""
"``DATABASE``\ はSQLiteデータベースファイルが保存されるパスです。それは、"
"Flaskがインスタンスフォルダに選んだパスである、\ :attr:`app.instance_path "
"<Flask.instance_path>`\ の下になります。次のセクションでデータベースに"
"ついてさらに学習します。"

# 738d9e16a0f1453b8b3a26a78095314b
#: ../../flask/docs/tutorial/factory.rst:102
msgid ""
":meth:`app.config.from_pyfile() <Config.from_pyfile>` overrides the "
"default configuration with values taken from the ``config.py`` file in "
"the instance folder if it exists. For example, when deploying, this can "
"be used to set a real ``SECRET_KEY``."
msgstr ""
":meth:`app.config.from_pyfile() <Config.from_pyfile>`\ は、もしインスタンス"
"フォルダに\ ``config.py``\ ファイルがあれば、値をそこから取り出して、標準"
"設定を上書きします。例えば、デプロイの時には、本当の\ ``SECRET_KEY``\ を"
"設定するために使用できます。"

# 3c0eb85d97704baaac827853aab86a81
#: ../../flask/docs/tutorial/factory.rst:107
msgid ""
"``test_config`` can also be passed to the factory, and will be used "
"instead of the instance configuration. This is so the tests you'll write "
"later in the tutorial can be configured independently of any development "
"values you have configured."
msgstr ""
"``test_config``\ もfactoryに渡すことが可能で、インスタンス設定の代わりに"
"使用されます。これは、このチュートリアルの後の方で書くテストで、開発時に"
"設定してきたあらゆる値から独立して設定できるようにするためです。"

# 5e41f6754ce64bb684e988362f8aa07f
#: ../../flask/docs/tutorial/factory.rst:112
msgid ""
":func:`os.makedirs` ensures that :attr:`app.instance_path "
"<Flask.instance_path>` exists. Flask doesn't create the instance folder "
"automatically, but it needs to be created because your project will "
"create the SQLite database file there."
msgstr ""
":func:`os.makedirs`\ は\ :attr:`app.instance_path <Flask.instance_path>`\ "
"が確実に存在するようにします。Flaskはインスタンスフォルダを自動的には"
"作成しませんが、このプロジェクトではそこにSQLiteデータベースファイルを"
"作成するためにインスタンスフォルダが作成されている必要があります。"

# 396c0e535cb24dc1af83d701c49c7b0b
#: ../../flask/docs/tutorial/factory.rst:118
msgid ""
":meth:`@app.route() <Flask.route>` creates a simple route so you can see "
"the application working before getting into the rest of the tutorial. It "
"creates a connection between the URL ``/hello`` and a function that "
"returns a response, the string ``'Hello, World!'`` in this case."
msgstr ""
":meth:`@app.route() <Flask.route>`\ はチュートリアルの残りの部分へ進む前に、"
"アプリケーションが機能していることを確かめるための簡易な経路（route）を"
"作成します。その経路は、URLの\ ``/hello``\ と、この場合は文字列\ ``'Hello, "
"World!'``\ というレスポンスを返す関数とを、結び付けます。"

# 470dfecce5fb4dc689aafb0537106df3
#: ../../flask/docs/tutorial/factory.rst:126
msgid "Run The Application"
msgstr "アプリケーションの実行"

# e60642b58ee341cf88d1905251752196
#: ../../flask/docs/tutorial/factory.rst:142
msgid "You'll see output similar to this:"
msgstr "以下と似たような出力が見られるでしょう:"

# 3ffbe1c5b2f14ea995ee1e0c71cd5835
#: ../../flask/docs/tutorial/factory.rst:153
msgid ""
"Visit http://127.0.0.1:5000/hello in a browser and you should see the "
"\"Hello, World!\" message. Congratulations, you're now running your Flask"
" web application!"
msgstr ""
"http://127.0.0.1:5000/hello\ をブラウザで訪れると「Hello, World!」"
"メッセージを見られるはずです。おめでとうございます、この時点で自分の"
"Flask webアプリケーションを実行中です！"

#: ../../flask/docs/tutorial/factory.rst:157
msgid ""
"If another program is already using port 5000, you'll see ``OSError: "
"[Errno 98]`` or ``OSError: [WinError 10013]`` when the server tries to "
"start. See :ref:`address-already-in-use` for how to handle that."
msgstr ""
"もし他のプログラムが既に5000番ポートを使用中であるときは、サーバを開始し"
"ようと試みたときに ``OSError: [Errno 98]`` または ``OSError: [WinError "
"10013]`` を見ることになるでしょう。それらにどのように対処するかについて"
"は、:ref:`address-already-in-use` を見てください。"

# 6c057672de284ae5a719c4f0db3b95f5
#: ../../flask/docs/tutorial/factory.rst:162
msgid "Continue to :doc:`database`."
msgstr ":doc:`database`\ へ続きます。"

# e4998915bf9e474ebf04d0a687838060
#~ msgid "For Linux and Mac:"
#~ msgstr "LinuxおよびMac向け:"

# 2bae71d685ca4b578469c6407e0e9a86
#~ msgid "For Windows cmd, use ``set`` instead of ``export``:"
#~ msgstr "Windowsのcmdでは、\\ ``export``\\ の代わりに\\ ``set``\\ を使用します:"

# e7d1ea5205ac4f898009c1957aa1cd18
#~ msgid "For Windows PowerShell, use ``$env:`` instead of ``export``:"
#~ msgstr "WindowsのPowerShellでは、\\ ``export``\\ の代わりに\\ ``$env:``\\ を使用します:"

# 74f2d923847f48f08514b61f5ced43e0
#~ msgid ""
#~ "Now you can run your application "
#~ "using the ``flask`` command. From the"
#~ " terminal, tell Flask where to find"
#~ " your application, then run it in "
#~ "development mode. Remember, you should "
#~ "still be in the top-level "
#~ "``flask-tutorial`` directory, not the "
#~ "``flaskr`` package."
#~ msgstr ""
#~ "この時点で、\\ ``flask``\\ "
#~ "コマンドを使ってアプリケーションを実行できます。端末から、アプリケーションがどこで見つかるかを伝え、それから開発モードでそれを実行するよう、Flaskへ伝えます。\\"
#~ " ``flaskr``\\ パッケージではなく、トップレベルの\\ ``flask-"
#~ "tutorial``\\ ディレクトリにまだいるべきであることを忘れないでください。"

# 3a23a3beb1fd4515b8a922354f9b259d
#~ msgid ""
#~ "Development mode shows an interactive "
#~ "debugger whenever a page raises an "
#~ "exception, and restarts the server "
#~ "whenever you make changes to the "
#~ "code. You can leave it running and"
#~ " just reload the browser page as "
#~ "you follow the tutorial."
#~ msgstr "開発モードは、ページが例外を起こしたときにはインタラクティブなデバッガを表示し、コードを変更したときにはサーバを再起動します。チュートリアルを続けるとき、Flaskを実行させたままにしながら、ブラウザのページを再読み込みするだけで済むようにします。"

#~ msgid "Bash"
#~ msgstr ""

#~ msgid "Fish"
#~ msgstr ""

#~ msgid "CMD"
#~ msgstr ""

#~ msgid "Powershell"
#~ msgstr ""

