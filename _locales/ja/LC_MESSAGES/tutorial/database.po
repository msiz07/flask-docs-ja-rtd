# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010 Pallets
# This file is distributed under the same license as the Flask package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Flask 1.1.x\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-08-21 20:07+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

# a65bf01707f248b8b7906f0c606c943a
#: ../../flask/docs/tutorial/database.rst:4
msgid "Define and Access the Database"
msgstr "データベースの定義とアクセス"

# b376328407db4e2498c89c9d4ea452b4
#: ../../flask/docs/tutorial/database.rst:6
msgid ""
"The application will use a `SQLite`_ database to store users and posts. "
"Python comes with built-in support for SQLite in the :mod:`sqlite3` "
"module."
msgstr ""
"このアプリケーションではユーザ情報と投稿記事を格納するために\ `SQLite`_\ "
"データベースを使用していきます。Pythonでは、組み込みのSQLiteサポートの"
"\ :mod:`sqlite3`\ モジュールが一緒に提供されています。"

# 5dafff79f3144781815591e582e52e62
#: ../../flask/docs/tutorial/database.rst:10
msgid ""
"SQLite is convenient because it doesn't require setting up a separate "
"database server and is built-in to Python. However, if concurrent "
"requests try to write to the database at the same time, they will slow "
"down as each write happens sequentially. Small applications won't notice "
"this. Once you become big, you may want to switch to a different "
"database."
msgstr ""
"SQLiteは、データベースサーバを別に用意する必要がなく、Pythonに組み込まれて"
"いるために便利です。しかし、もし並列なリクエストが同時にデータベースへの"
"書き込みを試みた場合、それぞれの書き込みが直列で処理されるため、それらの"
"処理は遅くなります。これは、小さなアプリケーションでは気付かないでしょう。"
"もし大きくなってきたら、違うデータベースへ切り替えたくなるかもしれません。"

# 10f95297a6db40d6948a3bafb479ee72
#: ../../flask/docs/tutorial/database.rst:17
msgid ""
"The tutorial doesn't go into detail about SQL. If you are not familiar "
"with it, the SQLite docs describe the `language`_."
msgstr ""
"このチュートリアルではSQLについての詳細には深入りしません。もしSQLに慣れて"
"いない場合は、SQLiteのドキュメントが\ `SQL言語`_\ を説明しています。"
"

# 6e5cb94b977049899e8deea67ffeedac
#: ../../flask/docs/tutorial/database.rst:25
msgid "Connect to the Database"
msgstr "データベースへの接続"

# fd024e254cec4b2a9c1aede4ada8e153
#: ../../flask/docs/tutorial/database.rst:27
msgid ""
"The first thing to do when working with a SQLite database (and most other"
" Python database libraries) is to create a connection to it. Any queries "
"and operations are performed using the connection, which is closed after "
"the work is finished."
msgstr ""
"SQLiteデータベース（および殆どのPythonの他のデータベースライブラリ）を使って"
"作業するとき最初にすることは、データベースへの接続（connection）の作成です。"
"どのような問合せ（queries）や操作（operations）も、connectionを使用しながら"
"実施され、作業が終了した後はconnectionが閉じられ（close）ます。"

# a0666e4c3bba4a6e8409d933e29659cf
#: ../../flask/docs/tutorial/database.rst:32
msgid ""
"In web applications this connection is typically tied to the request. It "
"is created at some point when handling a request, and closed before the "
"response is sent."
msgstr ""
"webアプリケーションでは、このconnectionは典型的にはリクエストと結び付け"
"られます。それはリクエスト処理中のどこかの時点で作成され、レスポンスが"
"送信される前に閉じられます。"

# 1d614eccb21941a285022afd51291625
# 30ccdebaa37247208a96a241960ce216
# 2227d4054eb14868954d39e13387cc86
#: ../../flask/docs/tutorial/database.rst:36
#: ../../flask/docs/tutorial/database.rst:120
#: ../../flask/docs/tutorial/database.rst:157
msgid "``flaskr/db.py``"
msgstr ""

# f16cd7e3eb96458d8e0f8798b3fbdcf3
#: ../../flask/docs/tutorial/database.rst:63
msgid ""
":data:`g` is a special object that is unique for each request. It is used"
" to store data that might be accessed by multiple functions during the "
"request. The connection is stored and reused instead of creating a new "
"connection if ``get_db`` is called a second time in the same request."
msgstr ""
":data:`g`\ は特別なオブジェクトで、リクエストごとに個別なものになります。"
"それは、リクエストの（処理）期間中は複数の関数によってアクセスされるような"
"データを格納するために使われます。connectionは（gオブジェクトに）格納されて、"
"もしも同じリクエストの中で\ ``get_db``\ が2回呼び出された場合、新しい"
"connectionを作成する代わりに、再利用されます。"

# 57c49f37c264451ca62a8b74eef260ea
#: ../../flask/docs/tutorial/database.rst:69
msgid ""
":data:`current_app` is another special object that points to the Flask "
"application handling the request. Since you used an application factory, "
"there is no application object when writing the rest of your code. "
"``get_db`` will be called when the application has been created and is "
"handling a request, so :data:`current_app` can be used."
msgstr ""
":data:`current_app`\ はもうひとつの特別なオブジェクトで、リクエストを"
"処理中のFlaskアプリケーションを指し示します。application factoryを利用して"
"いるため、残りのコードを書いているときは、Flaskアプリケーションのオブジェクトは"
"存在しません（訳注: application factoryを作成・使用する場合、ソースコードでどこ"
"からでもアクセスできる場所・モジュール変数に「app = Flask(__name__)」のような"
"コードを普通は書かなくなるため、factory関数以外の場所からアクセスできるFlask"
"インスタンス（を格納する変数）が基本的には存在しないという意味合いだと思います）。"
"\ ``get_db``\ が呼び出されるのは、アプリケーションが作成されてリクエストを"
"処理しているときであるため、\ :data:`current_app`\ が使用できます。"

# 7b1c53689532430cbe7af3b5005ba8b0
#: ../../flask/docs/tutorial/database.rst:75
msgid ""
":func:`sqlite3.connect` establishes a connection to the file pointed at "
"by the ``DATABASE`` configuration key. This file doesn't have to exist "
"yet, and won't until you initialize the database later."
msgstr ""
":func:`sqlite3.connect`\ は、設定の（訳注: current_app.configの）キー\ "
"``DATABASE``\ で示されるファイルへのconnectionを確立します。このファイルは"
"まだ存在せず、後程データベースを初期化するまで存在しないままです。"

# 1ccdf12af69342b5afe5583956828437
#: ../../flask/docs/tutorial/database.rst:79
msgid ""
":class:`sqlite3.Row` tells the connection to return rows that behave like"
" dicts. This allows accessing the columns by name."
msgstr ""
":class:`sqlite3.Row`\ は、dictのように振る舞う行を返すようにconnectionへ"
"伝えます。これは列名による列へのアクセスを可能にします。"

# 6dbabdd5d4ad496795fe1638a6b519d8
#: ../../flask/docs/tutorial/database.rst:82
msgid ""
"``close_db`` checks if a connection was created by checking if ``g.db`` "
"was set. If the connection exists, it is closed. Further down you will "
"tell your application about the ``close_db`` function in the application "
"factory so that it is called after each request."
msgstr ""
"``close_db``\ は、\ ``g.db``\ が設定されているか調べることでconnectionが"
"作成済みであるかを調べます。もしconnectionが存在した場合は、それを閉じ"
"ます。（この文書の）後の方では、各リクエストの後で\ ``close_db``\ が呼び出される"
"ように、application factoryの中で\ ``close_db``\ 関数についてアプリケーションに"
"伝えます。"

# 4843a3c45dcf4977b32f29c65dc46d3b
#: ../../flask/docs/tutorial/database.rst:89
msgid "Create the Tables"
msgstr "表（table）の作成"

# ff0793b8aaff4516980c27db756a3ebc
#: ../../flask/docs/tutorial/database.rst:91
msgid ""
"In SQLite, data is stored in *tables* and *columns*. These need to be "
"created before you can store and retrieve data. Flaskr will store users "
"in the ``user`` table, and posts in the ``post`` table. Create a file "
"with the SQL commands needed to create empty tables:"
msgstr ""
"SQLiteでは、データは\ *表（tables）*\ と\ *列（columns）*\ に格納され"
"ます。これらはデータを格納および取得できるようになる前に作成されている"
"必要があります。Flaskrではユーザ情報は\ ``user``\ 表に、投稿記事は\ ``post``\ "
"表に格納していきます。空の表を作成するために必要なSQLコマンドのファイル"
"を作成します:"

# 8d7aacca972d4058ac35d7a7e6379d0e
#: ../../flask/docs/tutorial/database.rst:96
msgid "``flaskr/schema.sql``"
msgstr ""

# c7b19d386a4f467c83ef0f71bf255707
#: ../../flask/docs/tutorial/database.rst:117
msgid ""
"Add the Python functions that will run these SQL commands to the "
"``db.py`` file:"
msgstr ""
"これらのSQLコマンドを実行するPython関数を\ ``db.py``\ ファイルに追加"
"します:"

# ff8806806fec4501a2503e28ce08828f
#: ../../flask/docs/tutorial/database.rst:137
msgid ""
":meth:`open_resource() <Flask.open_resource>` opens a file relative to "
"the ``flaskr`` package, which is useful since you won't necessarily know "
"where that location is when deploying the application later. ``get_db`` "
"returns a database connection, which is used to execute the commands read"
" from the file."
msgstr ""
":meth:`open_resource() <Flask.open_resource>`\ は、パッケージ\ ``flaskr``\ "
"から相対的な場所で指定されたファイルを開きます。後でアプリケーションを"
"デプロイしたとき、アプリケーションの場所を知らなくてもファイルが開けるため、"
"それは便利です。\ ``get_db``\ は、ファイルから読み取ったコマンドを実行する"
"ために使用される、データベースのconnectionを返します。"

# a5c54751d2444cc8a7d30aedf21566e9
#: ../../flask/docs/tutorial/database.rst:143
#, fuzzy
msgid ""
":func:`click.command` defines a command line command called ``init-db`` "
"that calls the ``init_db`` function and shows a success message to the "
"user. You can read :doc:`/cli` to learn more about writing commands."
msgstr ""
":func:`click.command`\ は、\ ``init_db``\ 関数を呼び出して成功時の"
"メッセージを表示する、\ ``init-db``\ と呼ばれる、コマンドラインから"
"使用できるコマンドを定義します。\ :ref:`call`\ を読むと、command作成に"
"関してさらに学習できます。"

# 87fbdc1f6a1d4465ab8aeb48871ea63f
#: ../../flask/docs/tutorial/database.rst:149
msgid "Register with the Application"
msgstr "アプリケーションへの登録"

# d38c3d0f85624753bd0074476728e166
#: ../../flask/docs/tutorial/database.rst:151
msgid ""
"The ``close_db`` and ``init_db_command`` functions need to be registered "
"with the application instance; otherwise, they won't be used by the "
"application. However, since you're using a factory function, that "
"instance isn't available when writing the functions. Instead, write a "
"function that takes an application and does the registration."
msgstr ""
"この\ ``close_db``\ と\ ``init_db_command``\ 関数はFlaskアプリケーションの"
"インスタンスに登録される必要があります; さもなければ、アプリケーション"
"によって使用されないでしょう。しかしながら、このアプリケーションではfactory"
"関数を使用しているので、（close_dbとinit_db_command）関数を書いているときは"
"Flaskアプリケーションのインスタンスが利用可能ではありません（訳注: factoryを"
"使わずモジュールの変数に\ ``app = Flask(__name__)``\ とインスタンスを格納"
"したときのように、関数からFlaskアプリケーションのインスタンスに直接アクセス"
"できないというような意味合い）。代わりに、Flaskアプリケーションを受け取って"
"登録を行う関数を作成します。"

# caed598253a048b189ff92c1bb287107
#: ../../flask/docs/tutorial/database.rst:164
msgid ""
":meth:`app.teardown_appcontext() <Flask.teardown_appcontext>` tells Flask"
" to call that function when cleaning up after returning the response."
msgstr ""
":meth:`app.teardown_appcontext() <Flask.teardown_appcontext>`\ は、"
"レスポンスを返した後のクリーンアップを行っているときに、上記の関数"
"（close_db）を呼び出すように、Flaskへ伝えます。"

# 89bd147e9a6f470d8efb73c9c3ccb433
#: ../../flask/docs/tutorial/database.rst:168
msgid ""
":meth:`app.cli.add_command() <click.Group.add_command>` adds a new "
"command that can be called with the ``flask`` command."
msgstr ""
":meth:`app.cli.add_command() <click.Group.add_command>`\ は、\ "
"``flask``\ コマンドを使って呼び出すことができる新しいコマンドを"
"追加します。"

# 0f7ed85064f3486891bea05ca63e41ce
#: ../../flask/docs/tutorial/database.rst:171
msgid ""
"Import and call this function from the factory. Place the new code at the"
" end of the factory function before returning the app."
msgstr ""
"factoryからこの関数をimportして呼び出します。新しいコードをfactory関数の"
"最後でappを返す前に置きます。"

# 7154fede885c4247b0830a1d59ea0549
#: ../../flask/docs/tutorial/database.rst:174
msgid "``flaskr/__init__.py``"
msgstr ""

# f49c496af7b04b13bccc103cdf4d3946
#: ../../flask/docs/tutorial/database.rst:188
msgid "Initialize the Database File"
msgstr "データベースファイルの初期化"

# 00d8526ff1464f078f901671952faf4a
#: ../../flask/docs/tutorial/database.rst:190
msgid ""
"Now that ``init-db`` has been registered with the app, it can be called "
"using the ``flask`` command, similar to the ``run`` command from the "
"previous page."
msgstr ""
"この時点で\ ``init-db``\ はappに登録され、前のページでの\ ``run``\ "
"コマンドと似たように、\ ``flask``\ コマンドを使用して呼び出すことが"
"できます。"

# 155dfb1c52b44a29adbb3d2d733601f4
#: ../../flask/docs/tutorial/database.rst:196
#, fuzzy
msgid ""
"If you're still running the server from the previous page, you can either"
" stop the server, or run this command in a new terminal. If you use a new"
" terminal, remember to change to your project directory and activate the "
"env as described in :doc:`/installation`. You'll also need to set "
"``FLASK_APP`` and ``FLASK_ENV`` as shown on the previous page."
msgstr ""
"もし前のページのサーバをまだ実行中である場合は、サーバを停止することも、"
"このコマンドを新しい端末で実行することもできます。もし新しい端末を使用する"
"場合は、プロジェクトのディレクトリへ移動して、\ :ref:`install-activate-env`\ "
"で説明したように（仮想）環境を有効にする（activate）ことを覚えておいてください。"
"さらに、前のページで示したように、\ ``FLASK_APP``\ と\ ``FLASK_ENV``\ の"
"設定も必要です。"

# 09fe258caa404de785869585c42cec8b
#: ../../flask/docs/tutorial/database.rst:203
msgid "Run the ``init-db`` command:"
msgstr "``init-db``\ コマンドを実行:"

# 13dee5448eda491b9ee8bfa3b14e1d6a
#: ../../flask/docs/tutorial/database.rst:210
msgid ""
"There will now be a ``flaskr.sqlite`` file in the ``instance`` folder in "
"your project."
msgstr ""
"この時点でプロジェクトの\ ``instance``\ フォルダに\ ``flaskr.sqlite``\ "
"ファイルがあるはずです。"

# 13d3965d91434749ba352c05805c671a
#: ../../flask/docs/tutorial/database.rst:213
msgid "Continue to :doc:`views`."
msgstr ":doc:`views`\ へ続きます。"

