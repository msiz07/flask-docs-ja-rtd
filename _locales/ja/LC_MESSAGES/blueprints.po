# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010 Pallets
# This file is distributed under the same license as the Flask package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Flask 1.1.x\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-08-21 20:07+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

# c02d9e638a5143e8a4b1afc0b7669739
#: ../../flask/docs/blueprints.rst:2
msgid "Modular Applications with Blueprints"
msgstr "Blueprintを使ったアプリケーションのモジュール化"

# eecf351890c94c81acf3d6a35d35be1e
#: ../../flask/docs/blueprints.rst:8
msgid ""
"Flask uses a concept of *blueprints* for making application components "
"and supporting common patterns within an application or across "
"applications. Blueprints can greatly simplify how large applications work"
" and provide a central means for Flask extensions to register operations "
"on applications. A :class:`Blueprint` object works similarly to a "
":class:`Flask` application object, but it is not actually an application."
"  Rather it is a *blueprint* of how to construct or extend an "
"application."
msgstr ""
"Flaskはアプリケーションの部品作成、およびアプリケーション内またはアプリ"
"ケーションを横断した共通パターンのサポートに\ *blueprint（青写真）*\ と"
"いう考え方を使用します。blueprintは大きなアプリケーションの動き方を"
"非常にシンプルにし、Flask拡張がアプリケーションへ操作（operation）を登録"
"するための中心手段を提供します。\ :class:`Blueprint`\ オブジェクトは\ "
":class:`Flask`\ と似た働きをしますが、実際にはアプリケーションでは"
"ありません。むしろ、それはアプリケーションをどのように建設もしくは拡張"
"するかの\ *blueprint（青写真）*\ です。"

# bf52b9ba56754ff59c784c051b881571
#: ../../flask/docs/blueprints.rst:17
msgid "Why Blueprints?"
msgstr "なぜBlueprintsか？"

# 3cddc2e513394ce0b0c6189082feefcf
#: ../../flask/docs/blueprints.rst:19
msgid "Blueprints in Flask are intended for these cases:"
msgstr "Flaskのblueprintは以下のような場面を意図しています:"

# fdd7b6dd2d3649eb9b3a5bb52c1e3593
#: ../../flask/docs/blueprints.rst:21
msgid ""
"Factor an application into a set of blueprints.  This is ideal for larger"
" applications; a project could instantiate an application object, "
"initialize several extensions, and register a collection of blueprints."
msgstr ""
"アプリケーションをblueprintのセットに分解。これは大きい"
"アプリケーションにとって理想的です; プロジェクトはアプリケーションの"
"オブジェクトをインスタンス化でき、いくつかのFlask拡張を初期化でき、"
"そしてblueprintの集合を登録できます。"

# 37abeede2d644ccf9838e3051325f931
#: ../../flask/docs/blueprints.rst:24
msgid ""
"Register a blueprint on an application at a URL prefix and/or subdomain. "
"Parameters in the URL prefix/subdomain become common view arguments (with"
" defaults) across all view functions in the blueprint."
msgstr ""
"URLのプレフィックスおよび／またはサブドメインに対してblueprintをアプリケー"
"ションに登録。そのURLのプレフィックス／サブドメインの中でのパラメータは、"
"そのblueprint内のすべてのview関数にわたる、viewへの（既定値を伴った）共通"
"の引数になります（訳注: 後の方にある「最初のBlueprint」の節のサンプルコード"
"や「Blueprintの登録」の節の記載内容に対応した処理のことだと思います）。"

# 051a0cc893024972a1c4b14243c0d0c1
#: ../../flask/docs/blueprints.rst:27
msgid ""
"Register a blueprint multiple times on an application with different URL "
"rules."
msgstr ""
"違うURLルールを使ってアプリケーションへblueprintを複数回登録（訳注: "
"同じblueprintを異なる複数のURLに登録するような意味合い。ここでのURL"
"ルールは、URLとエンドポイントとの対応関係などを定義したもので、通常"
"は\ :class:`~werkzeug.routing.Rule`\ として処理されるものだと思います）。"

# 83bdabb865b341b7afcda1b72c1f3fe5
#: ../../flask/docs/blueprints.rst:29
msgid ""
"Provide template filters, static files, templates, and other utilities "
"through blueprints.  A blueprint does not have to implement applications "
"or view functions."
msgstr ""
"テンプレートのfilter（訳注: Jinjaテンプレートエンジンの機能のひとつ）、"
"静的ファイル、テンプレート、その他のユーティリティを、blueprintを通して"
"提供。blueprintではアプリケーションやview関数の実装は必須ではありません。"

# 3afb107944934a3dbc76ee361c410022
#: ../../flask/docs/blueprints.rst:32
msgid ""
"Register a blueprint on an application for any of these cases when "
"initializing a Flask extension."
msgstr ""
"Flask拡張を初期化するとき、以上のいずれかの理由のために、アプリケーションへ"
"blueprintを登録。"

# 97e0673d5c7c467d84a926ebcec38377
#: ../../flask/docs/blueprints.rst:35
#, fuzzy
msgid ""
"A blueprint in Flask is not a pluggable app because it is not actually an"
" application -- it's a set of operations which can be registered on an "
"application, even multiple times.  Why not have multiple application "
"objects?  You can do that (see :doc:`/patterns/appdispatch`), but your "
"applications will have separate configs and will be managed at the WSGI "
"layer."
msgstr ""
"Flaskのblueprintは実際にはアプリケーションではないので、着脱可能"
"（pluggable）なappではありません -- それは、アプリケーションに登録可能な"
"操作（operation）であり、複数回登録することすら可能です。なぜ（わざわざ"
"blueprintを使わず）複数のアプリケーションのオブジェクトを持たないので"
"しょうか？それをすることも可能です（\ :ref:`app-dispatch`\ を見てくだ"
"さい）が、（そのときは）アプリケーションは分かれた設定を持ち、WSGIの階層"
"で管理されます。"

# 9aef2a46cb7242e884530b59f5291cf9
#: ../../flask/docs/blueprints.rst:42
msgid ""
"Blueprints instead provide separation at the Flask level, share "
"application config, and can change an application object as necessary "
"with being registered. The downside is that you cannot unregister a "
"blueprint once an application was created without having to destroy the "
"whole application object."
msgstr ""
"blueprintは、代わりに（WSGIアプリケーションである）Flaskのレベルでの"
"分離を提供し、（blueprintが）アプリケーションの設定は共有し、そして必要"
"に応じて（blueprintが）登録されることでアプリケーションのオブジェクトを"
"変更できます。マイナス面は、一度アプリケーションが作成されると、アプリ"
"ケーションのオブジェクト全体を破壊しない限りblueprintの登録を外せないこと"
"です。"

# 563b209c89c742c08d4aa004952a94ac
#: ../../flask/docs/blueprints.rst:49
msgid "The Concept of Blueprints"
msgstr "Blueprintのコンセプト"

# 9b1f6e7b5f2c4689ab7e626a410fe84c
#: ../../flask/docs/blueprints.rst:51
msgid ""
"The basic concept of blueprints is that they record operations to execute"
" when registered on an application.  Flask associates view functions with"
" blueprints when dispatching requests and generating URLs from one "
"endpoint to another."
msgstr ""
"blueprintの基本コンセプトは、（blueprintが）アプリケーションに登録された"
"場合には実行する操作（operation）を記録しておくことです。Flaskは、リクエ"
"ストを振り分ける（dispatching）ときや、あるエンドポイントから別のエンド"
"ポイントへのURLを生成するときに、view関数をblueprintと関連付けます（訳注: "
"URLの生成については、このドキュメントの後半にある、URLの構築（Building "
"URLs）に関する処理を指していると思います）。"

# 0399b7b317454e7cb3dff793f577c4c4
#: ../../flask/docs/blueprints.rst:57
msgid "My First Blueprint"
msgstr "最初のBlueprint"

# 9a28a87831f04425acf0bd949e1e89e7
#: ../../flask/docs/blueprints.rst:59
msgid ""
"This is what a very basic blueprint looks like.  In this case we want to "
"implement a blueprint that does simple rendering of static templates::"
msgstr ""
"以下は、とても基本的なblueprintがどのようになるかを示しています。以下の"
"ケースでは、静的なテンプレートを表示（rendering）するblueprintを実装しよう"
"としています::"

# 61eb5afcfc9b4c3d94d3ae687e06a80c
#: ../../flask/docs/blueprints.rst:76
msgid ""
"When you bind a function with the help of the ``@simple_page.route`` "
"decorator, the blueprint will record the intention of registering the "
"function ``show`` on the application when it's later registered. "
"Additionally it will prefix the endpoint of the function with the name of"
" the blueprint which was given to the :class:`Blueprint` constructor (in "
"this case also ``simple_page``). The blueprint's name does not modify the"
" URL, only the endpoint."
msgstr ""
"``@simple_page.route``\ デコレータを利用して関数を結び付け（bind）する"
"とき、blueprintは、後で（blueprintがアプリケーションに）登録されるときには"
"\ ``show``\ 関数をアプリケーションへ登録するという意図を記録しておきます。"
"さらに、blueprintは関数のエンドポイントの先頭へ、\ :class:`Blueprint`\ "
"クラスのコンストラクタで与えられたblueprintの名前（この例では\ "
"``simple_page``\ ）を付加します。blueprintの名前は、URLは変更せず、エンド"
"ポイントだけを変更します（訳注: ここでは、\ ``simple_page.show``\ "
"のように、エンドポイントの最初にはblueprint名を付け、対応するURLパスの"
"「'/'」や「'/<paga>'」の最初にはblueprint名を付けないでURLルールでの対応"
"付けが作成される、という意味合い）。"

# ffc1e55678bd4814bd121548ffc00441
#: ../../flask/docs/blueprints.rst:85
msgid "Registering Blueprints"
msgstr "Blueprintの登録"

# 2ef94b5d3632478b9e798c6bafc5a97c
#: ../../flask/docs/blueprints.rst:87
msgid "So how do you register that blueprint?  Like this::"
msgstr "ではどうやってblueprintを登録するのでしょうか？以下のようにします::"

# ce5a51efa2f2431aaf4054a5f8bbb98f
#: ../../flask/docs/blueprints.rst:95
msgid ""
"If you check the rules registered on the application, you will find "
"these::"
msgstr ""
"もしアプリケーションに登録されたルール（訳注: URLとエンドポイントとの対応"
"関係などを定義したもの、通常はWerkzeugの\ :class:`~werkzeug.routing.Rule`\ "
"クラスのオブジェクト）をチェックすれば、以下の内容を見つけ出せるでしょう::"

# f8378ba5bb8c44f193f321a962fbc387
#: ../../flask/docs/blueprints.rst:103
msgid ""
"The first one is obviously from the application itself for the static "
"files.  The other two are for the `show` function of the ``simple_page`` "
"blueprint.  As you can see, they are also prefixed with the name of the "
"blueprint and separated by a dot (``.``)."
msgstr ""
"最初のひとつは明らかにアプリケーション自身が静的ファイルに対してしたもの"
"です。他の2つは、\ ``simple_page``\ のblueprintの\ `show`\ 関数に対する"
"ものです。見て分かるように、それら（show関数のエンドポイント）はblueprint"
"名も最初に付けられていて（prefix）、ドット（\ ``.``\ ）で（blueprint名と"
"show関数名とが）分けられています。"

# 34b77ebad2f442b58da5e74fc810a5ff
#: ../../flask/docs/blueprints.rst:108
msgid "Blueprints however can also be mounted at different locations::"
msgstr "しかしながら、blueprintは違う場所にも設置（mount）できます::"

# 8a28d9c0f740424e9defd943eb9f7a7a
#: ../../flask/docs/blueprints.rst:112
msgid "And sure enough, these are the generated rules::"
msgstr "そして思ったとおりに、生成されたルールは以下のようになります::"

# addf4ebe2cc14bada4181edceb4a7e38
#: ../../flask/docs/blueprints.rst:119
msgid ""
"On top of that you can register blueprints multiple times though not "
"every blueprint might respond properly to that.  In fact it depends on "
"how the blueprint is implemented if it can be mounted more than once."
msgstr ""
"この上にblueprintを複数回登録できますが、blueprintの中には適切に対応しない"
"ものがあるかもしれません。事実、blueprintが2回以上設置（mount）できるかは、"
"blueprintがどのように実装されているかに依存します。"

# ffc1e55678bd4814bd121548ffc00441
#: ../../flask/docs/blueprints.rst:124
#, fuzzy
msgid "Nesting Blueprints"
msgstr "Blueprintの登録"

#: ../../flask/docs/blueprints.rst:126
msgid "It is possible to register a blueprint on another blueprint."
msgstr ""

#: ../../flask/docs/blueprints.rst:135
msgid ""
"The child blueprint will gain the parent's name as a prefix to its name, "
"and child URLs will be prefixed with the parent's URL prefix."
msgstr ""

#: ../../flask/docs/blueprints.rst:143
msgid ""
"Blueprint-specific before request functions, etc. registered with the "
"parent will trigger for the child. If a child does not have an error "
"handler that can handle a given exception, the parent's will be tried."
msgstr ""

# 68dee2b6f73048e8a9356b1815cbd067
#: ../../flask/docs/blueprints.rst:149
msgid "Blueprint Resources"
msgstr "Blueprintのリソース"

# 7f88eb3d57df4e39a80d49a815ff7103
#: ../../flask/docs/blueprints.rst:151
msgid ""
"Blueprints can provide resources as well.  Sometimes you might want to "
"introduce a blueprint only for the resources it provides."
msgstr ""
"blueprintはリソースの提供もできます。ときには、ただblueprintが提供する"
"リソースのためだけに、blueprintを導入したいときがあるかもしれません。"

# 0ac1391c888240b4a63de573a6291712
#: ../../flask/docs/blueprints.rst:155
msgid "Blueprint Resource Folder"
msgstr "Blueprintのリソースフォルダ"

# 34a2fa6db3fa4618bd4c3c9df4f8deef
#: ../../flask/docs/blueprints.rst:157
msgid ""
"Like for regular applications, blueprints are considered to be contained "
"in a folder.  While multiple blueprints can originate from the same "
"folder, it does not have to be the case and it's usually not recommended."
msgstr ""
"通常のアプリケーションのように、blueprintはフォルダの中に含まれていると"
"想定されています。複数のblueprintを同じフォルダから由来させることも可能"
"ですが、そうする必要はなく、そしてそれは普通は推奨されません。"

# 55d8c6d496f941b5a71d174a4a730353
#: ../../flask/docs/blueprints.rst:161
msgid ""
"The folder is inferred from the second argument to :class:`Blueprint` "
"which is usually `__name__`.  This argument specifies what logical Python"
" module or package corresponds to the blueprint.  If it points to an "
"actual Python package that package (which is a folder on the filesystem) "
"is the resource folder.  If it's a module, the package the module is "
"contained in will be the resource folder.  You can access the "
":attr:`Blueprint.root_path` property to see what the resource folder is::"
msgstr ""
"そのフォルダは\ :class:`Blueprint`\ クラスへの2番目の引数から推測され、"
"普通は\ `__name__`\ になります。この引数は、どの論理Pythonモジュール"
"または論理Pythonパッケージがblueprintに対応するかを指定します（訳注: "
"Pythonでは大まかには、モジュールは単一の.pyファイル、パッケージはモジュール"
"などを格納するフォルダのことを言います）。もしそれがPythonパッケージを"
"指していれば、そのパッケージ（それはファイルシステム上はフォルダになります）"
"がリソースフォルダになります。もしそれがモジュールであれば、そのモジュールを"
"含んでいるパッケージがリソースフォルダになります。リソースフォルダが何か"
"確認するためには、\ :attr:`Blueprint.root_path`\ プロパティにアクセスでき"
"ます::"

# cccaa78f5a3f4514af34c3618f8cd307
#: ../../flask/docs/blueprints.rst:172
msgid ""
"To quickly open sources from this folder you can use the "
":meth:`~Blueprint.open_resource` function::"
msgstr ""
"このフォルダから手早くリソース（訳注: 原文は「sources」ですが、おそらく"
"誤記）を開くには、\ :meth:`~Blueprint.open_resource`\ 関数を使えます::"

# 15f0996f353649d29b53b2bdc0fe8135
#: ../../flask/docs/blueprints.rst:179
msgid "Static Files"
msgstr "静的ファイル"

# 7ba935a7cfb846d19a0a3e7fbd4bc811
#: ../../flask/docs/blueprints.rst:181
msgid ""
"A blueprint can expose a folder with static files by providing the path "
"to the folder on the filesystem with the ``static_folder`` argument. It "
"is either an absolute path or relative to the blueprint's location::"
msgstr ""
"blueprintは、\ ``static_folder``\ 引数を使いファイルシステム上のフォルダ"
"へのパスを提供することで、静的ファイルのフォルダを公開することができます。"
"それは絶対パスか、blueprintの場所からの相対パスのどちらかです::"

# b6896bcf7287455abe6b10bf0ad8390a
#: ../../flask/docs/blueprints.rst:187
msgid ""
"By default the rightmost part of the path is where it is exposed on the "
"web. This can be changed with the ``static_url_path`` argument. Because "
"the folder is called ``static`` here it will be available at the "
"``url_prefix`` of the blueprint + ``/static``. If the blueprint has the "
"prefix ``/admin``, the static URL will be ``/admin/static``."
msgstr ""
"標準設定では、パスの最も右側の部分が、web上で公開される場所になります。"
"これは\ ``static_url_path``\ 引数で変えることができます。上の例では"
"そのフォルダが\ ``static``\ で呼び出されている（訳注: ``static_folder``\ "
"引数に\ 「static」が指定されている）ため、これはblueprintの\ "
"``url_prefix``\ +\ ``/static``\ でアクセスできます。もしもblueprintの"
"プレフィックスが\ ``/admin``\ であれば、staticのURLは\ ``/admin/static``\ "
"になります。"

# d0284cb25b7f479d9bece1233a629189
#: ../../flask/docs/blueprints.rst:193
msgid ""
"The endpoint is named ``blueprint_name.static``. You can generate URLs to"
" it with :func:`url_for` like you would with the static folder of the "
"application::"
msgstr ""
"このエンドポイントは\ ``blueprint_name.static``\ になります。そのURLは"
"アプリケーションのstaticのフォルダと同様に、\ :func:`url_for`\ を使って"
"生成可能です::"

# 863cfc7ce48e4af68f6ad0ca9a1e4b66
#: ../../flask/docs/blueprints.rst:199
msgid ""
"However, if the blueprint does not have a ``url_prefix``, it is not "
"possible to access the blueprint's static folder. This is because the URL"
" would be ``/static`` in this case, and the application's ``/static`` "
"route takes precedence. Unlike template folders, blueprint static folders"
" are not searched if the file does not exist in the application static "
"folder."
msgstr ""
"しかしながら、もしこのblueprintが\ ``url_prefix``\ を持たない場合は、この"
"blueprintのstaticのフォルダはアクセス不可能になります。これは、この場合"
"には（blueprintの静的ファイルのフォルダの）URLを\ ``/static``\ にしようと"
"して、それに対してはアプリケーションの\ ``/static``\ の経路（route）が"
"優先されるためです。テンプレートのフォルダと異なり、blueprintのstaticの"
"フォルダは、もしアプリケーションのstaticのフォルダが存在しない場合でも"
"使用されません。"

# 1f36255873f9436d89129fb88da370a3
#: ../../flask/docs/blueprints.rst:207
msgid "Templates"
msgstr "テンプレート"

# c224ffb038204d9991ece0591bfbbd62
#: ../../flask/docs/blueprints.rst:209
msgid ""
"If you want the blueprint to expose templates you can do that by "
"providing the `template_folder` parameter to the :class:`Blueprint` "
"constructor::"
msgstr ""
"もしblueprintでテンプレートを公開したい場合は、\ :class:`Blueprint`\ の"
"コンストラクタに\ `template_folder`\ 引数を提供すれば可能です::"

# 48722da5f541493ca3e0caa8e0ee8b29
#: ../../flask/docs/blueprints.rst:214
msgid ""
"For static files, the path can be absolute or relative to the blueprint "
"resource folder."
msgstr ""
"テンプレートに対しては（訳注: 原文は「For static files」ですが、おそらく"
"誤記）、パスは絶対パスか、blueprintのリソースフォルダからの相対パスが可能"
"です。"

# d1549439b9194376871fd5f5e46f4d2b
#: ../../flask/docs/blueprints.rst:217
msgid ""
"The template folder is added to the search path of templates but with a "
"lower priority than the actual application's template folder. That way "
"you can easily override templates that a blueprint provides in the actual"
" application. This also means that if you don't want a blueprint template"
" to be accidentally overridden, make sure that no other blueprint or "
"actual application template has the same relative path. When multiple "
"blueprints provide the same relative template path the first blueprint "
"registered takes precedence over the others."
msgstr ""
"（blueprintの）テンプレートのフォルダは、テンプレートを探すパスに追加され"
"ますが、実際のアプリケーションのテンプレートのフォルダよりは優先度が低く"
"なります。このやり方により、blueprintが提供したテンプレートは、実際のアプリ"
"ケーションの中で容易に上書きが可能になります。これは、もしblueprintのテンプ"
"レートが事故で上書きされることを望まない場合には、他のblueprintや実際のアプ"
"リケーションは、同じ相対パスを持たないようにしなければならないことを意味し"
"ます。複数のblueprintが同じ相対パスのテンプレートを提供するときは、最初に登録"
"されたblueprintが他よりも優先されます。"

# b279110735b14c9ebef69137af25758d
#: ../../flask/docs/blueprints.rst:226
msgid ""
"So if you have a blueprint in the folder ``yourapplication/admin`` and "
"you want to render the template ``'admin/index.html'`` and you have "
"provided ``templates`` as a `template_folder` you will have to create a "
"file like this: :file:`yourapplication/admin/templates/admin/index.html`."
" The reason for the extra ``admin`` folder is to avoid getting our "
"template overridden by a template named ``index.html`` in the actual "
"application template folder."
msgstr ""
"従って、もし\ ``yourapplication/admin``\ フォルダにblueprintがあり、\ "
"``'admin/index.html'``\ テンプレートを表示しようとしており、\ "
"``templates``\ を\ `template_folder`\ として提供していたときには、\ :file:"
"`yourapplication/admin/templates/admin/index.html`\ のようなファイルを"
"作成する必要があります。ここで追加の\ ``admin``\ フォルダがある理由は、"
"このテンプレートが、実際のアプリケーションのテンプレートのフォルダにある\ "
"``index.html``\ テンプレートによって上書きされることを防ぐためです。"

# 81b51836a99e4abe8d9d1bf3ce10dba9
#: ../../flask/docs/blueprints.rst:234
msgid ""
"To further reiterate this: if you have a blueprint named ``admin`` and "
"you want to render a template called :file:`index.html` which is specific"
" to this blueprint, the best idea is to lay out your templates like "
"this::"
msgstr ""
"さらに繰り返します: もしも\ ``admin``\ というblueprintがあり、そのblueprint"
"に固有の\ :file:`index.html`\ というテンプレートを表示したい場合は、最も"
"良いアイデアは以下のようにテンプレートをレイアウトすることです::"

# e248d5d0ef5d4e3d836a90955d6c18a6
#: ../../flask/docs/blueprints.rst:246
msgid ""
"And then when you want to render the template, use "
":file:`admin/index.html` as the name to look up the template by.  If you "
"encounter problems loading the correct templates enable the "
"``EXPLAIN_TEMPLATE_LOADING`` config variable which will instruct Flask to"
" print out the steps it goes through to locate templates on every "
"``render_template`` call."
msgstr ""
"そして、テンプレートを表示したいときに、テンプレートを探すときの"
"テンプレート名に\ :file:`admin/index.html`\ を使用します。もしも正しい"
"テンプレートの読み込みに問題が生じたときは、設定値\ "
"``EXPLAIN_TEMPLATE_LOADING``\ を有効にして、\ ``render_template``\ を"
"呼び出すたびにテンプレートを見つけるために実行しているステップを表示"
"するよう、Flaskに指示してください。"

# 7ee65d63e5ef4d54b0675ab31cdbb857
#: ../../flask/docs/blueprints.rst:253
msgid "Building URLs"
msgstr "URLの構築"

# 0f0627d4bc104d2aad8865c8d81d7b66
#: ../../flask/docs/blueprints.rst:255
msgid ""
"If you want to link from one page to another you can use the "
":func:`url_for` function just like you normally would do just that you "
"prefix the URL endpoint with the name of the blueprint and a dot "
"(``.``)::"
msgstr ""
"もしあるページから別のページへリンクしたいときは、通常時にするように\ "
":func:`url_for`\ 関数を使うことができ、blueprintの名前とドット（\ ``.``\ ）"
"をURLのエンドポイントの前に付けるだけです::"

# 82c26e4cf64f47198ba2aacad0fe1695
#: ../../flask/docs/blueprints.rst:261
msgid ""
"Additionally if you are in a view function of a blueprint or a rendered "
"template and you want to link to another endpoint of the same blueprint, "
"you can use relative redirects by prefixing the endpoint with a dot "
"only::"
msgstr ""
"さらに、もしblueprintのview関数もしくは変換（render）されたテンプレートの"
"中で、同じblueprintの別のエンドポイントへリンクしたいときは、ドットだけを"
"エンドポイントの前につける相対リダイレクトを使えます::"

# 8475c82c75a34d9bbf0a84e0f5432c96
#: ../../flask/docs/blueprints.rst:267
msgid ""
"This will link to ``admin.index`` for instance in case the current "
"request was dispatched to any other admin blueprint endpoint."
msgstr ""
"上の例は、そのときのリクエストがadminのblueprintにある別のエンドポイントへ"
"振り分けられていたとき、\ ``admin.index``\ へリンクします。"

# e4351a9cb35948c39997bc4758521911
#: ../../flask/docs/blueprints.rst:272
#, fuzzy
msgid "Blueprint Error Handlers"
msgstr "エラー処理（Error Handlers）"

# b033f1c827c84a59a99a0f2a4adb40af
#: ../../flask/docs/blueprints.rst:274
msgid ""
"Blueprints support the ``errorhandler`` decorator just like the "
":class:`Flask` application object, so it is easy to make Blueprint-"
"specific custom error pages."
msgstr ""
":class:`Flask`\ アプリケーションのオブジェクトと同様に、blueprintは\ "
"``errorhandler``\ デコレータをサポートしており、従ってblueprint固有の"
"エラーページを作成するのは簡単です。"

# fd9c137a7757475aa5f49e1786be6ea2
#: ../../flask/docs/blueprints.rst:278
msgid "Here is an example for a \"404 Page Not Found\" exception::"
msgstr "「404 Page Not Found」例外に対する例がこちらです::"

# 32b09396d3d540a69a057ce091982b4d
#: ../../flask/docs/blueprints.rst:284
msgid ""
"Most errorhandlers will simply work as expected; however, there is a "
"caveat concerning handlers for 404 and 405 exceptions.  These "
"errorhandlers are only invoked from an appropriate ``raise`` statement or"
" a call to ``abort`` in another of the blueprint's view functions; they "
"are not invoked by, e.g., an invalid URL access.  This is because the "
"blueprint does not \"own\" a certain URL space, so the application "
"instance has no way of knowing which blueprint error handler it should "
"run if given an invalid URL.  If you would like to execute different "
"handling strategies for these errors based on URL prefixes, they may be "
"defined at the application level using the ``request`` proxy object::"
msgstr ""
"殆どのerrorhandlerは、予想したとおりに動きます; しかし、404と405の例外の"
"処理に関して注意点があります（訳注: HTTPレスポンスのステータスコードを指し"
"ていて、404は「\ `Not Found "
"<https://developer.mozilla.org/ja/docs/Web/HTTP/Status/404>`_\ 」、405は"
"「\ `Method Not Allowed "
"<https://developer.mozilla.org/ja/docs/Web/HTTP/Status/405>`_\ 」になり"
"ます）。これらのerrorhandlerが起動されるのは、適切な\ ``raise``\ 文または"
"そのblueprint内の他のview関数の中で\ ``abort``\ を呼んだ"
"ときだけです; それらは、例えば不正なURLへのアクセスからは起動されません。"
"これは、blueprintはあるURL空間を「所有」しておらず、従ってアプリケーションの"
"インスタンスは不正なURLを渡されたとしても、どのblueprintのerrorhandlerを"
"実行すればよいかを知るすべがないためです。もしURLプレフィックスに基づいて、"
"これらのエラーに対して異なる処理戦略を実行したいときは、それらは"
"アプリケーションのレベルで\ ``request``\ の代理（proxy）のオブジェクトで"
"定義させることができます::"

#: ../../flask/docs/blueprints.rst:302
msgid "See :doc:`/errorhandling`."
msgstr ""

# 7aa4a2886efb4e18a5de6d8d4a8be5e4
#~ msgid "More information on error handling see :ref:`errorpages`."
#~ msgstr ""
#~ "エラー処理に関するさらなる情報は\ :ref:`errorpages`\ を確認してください。"

