# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010 Pallets
# This file is distributed under the same license as the Flask package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Flask 2.0.x\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-11-20 18:38+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

# d29f4d0ccb9347f488719169fe4f2e78
#: ../../flask/docs/server.rst:4
msgid "Development Server"
msgstr "開発サーバ"

#: ../../flask/docs/server.rst:6
msgid ""
"Flask provides a ``run`` command to run the application with a "
"development server. In development mode, this server provides an "
"interactive debugger and will reload when code is changed."
msgstr ""
"Flaskはアプリケーションを開発サーバを使って走らせる ``run`` コマンドを提供"
"します。developmentモードでは、このサーバはインタラクティブなデバッガを提供"
"し、コードが変更されたときは再読み込み（reload）します。"

#: ../../flask/docs/server.rst:12
msgid ""
"Do not use the development server when deploying to production. It is "
"intended for use only during local development. It is not designed to be "
"particularly efficient, stable, or secure."
msgstr ""
"本番環境へ展開（deploy）するときは、開発サーバは使わないでください。それは"
"ローカルでの開発の間だけ使うために意図されたものです。それは効率性、安定性、"
"セキュリティを特別意識して設計されてはいません。"

#: ../../flask/docs/server.rst:16
msgid "See :doc:`/deploying/index` for deployment options."
msgstr ""
"展開（deploy）のオプションについては :doc:`/deploying/index` を見てください。"

# dbf0ffda21af45388668505442d91cb1
#: ../../flask/docs/server.rst:19
msgid "Command Line"
msgstr "コマンドライン"

#: ../../flask/docs/server.rst:21
msgid ""
"The ``flask run`` command line script is the recommended way to run the "
"development server. It requires setting the ``FLASK_APP`` environment "
"variable to point to your application, and ``FLASK_ENV=development`` to "
"fully enable development mode."
msgstr ""
"コマンドラインのスクリプトである ``flask run`` は、開発サーバを走らせる推奨"
"される方法です。flask runが全ての開発モードを有効にするには、``FLASK_APP`` "
"環境変数は自分のアプリケーションを指し、``FLASK_ENV=development`` と環境変数"
"が設定されることが必要です。"

#: ../../flask/docs/server.rst:28
msgid "Bash"
msgstr ""

#: ../../flask/docs/server.rst:36
msgid "Fish"
msgstr ""

#: ../../flask/docs/server.rst:44
msgid "CMD"
msgstr ""

#: ../../flask/docs/server.rst:52
msgid "Powershell"
msgstr ""

# a6a4003694b3454db1e0c02fb2e76d45
#: ../../flask/docs/server.rst:60
msgid ""
"This enables the development environment, including the interactive "
"debugger and reloader, and then starts the server on "
"http://localhost:5000/. Use ``flask run --help`` to see the available "
"options, and  :doc:`/cli` for detailed instructions about configuring and"
" using the CLI."
msgstr ""
"この例ではインタラクティブなデバッガと再読み込み機能（reloader）を含む、"
"開発環境を有効にし、それから *http://localhost:5000* でサーバを開始"
"します。利用可能なオプションを見るには ``flask run --help`` を使用し、"
"CLIの使用や設定についての指示（instructions）の詳細は :doc:`/cli` を"
"見てください。"

# 6e247eb51ccf41dc8cd7a0284db05f65
#: ../../flask/docs/server.rst:68
msgid ""
"Prior to Flask 1.0 the ``FLASK_ENV`` environment variable was not "
"supported and you needed to enable debug mode by exporting "
"``FLASK_DEBUG=1``. This can still be used to control debug mode, but you "
"should prefer setting the development environment as shown above."
msgstr ""
"Flask 1.0より前は、``FLASK_ENV`` 環境変数はサポートされておらず、デバッグ"
"モードを有効にするには ``FLASK_DEBUG=1`` をexportする必要がありました。"
"これは今でもデバッグモードの制御に使用可能ですが、上述した開発環境の"
"設定の方が好ましいものです。"

#: ../../flask/docs/server.rst:78
msgid "Address already in use"
msgstr ""

#: ../../flask/docs/server.rst:80
msgid ""
"If another program is already using port 5000, you'll see an ``OSError`` "
"when the server tries to start. It may have one of the following "
"messages:"
msgstr ""
"もし他のプログラムが既に5000番ポートを使用中であるときは、サーバを開始し"
"ようと試みたときに ``OSError`` を見ることになるでしょう。それは以下の"
"メッセージの中の1つでしょう。"

#: ../../flask/docs/server.rst:84
msgid "``OSError: [Errno 98] Address already in use``"
msgstr ""

#: ../../flask/docs/server.rst:85
msgid ""
"``OSError: [WinError 10013] An attempt was made to access a socket in a "
"way forbidden by its access permissions``"
msgstr ""

#: ../../flask/docs/server.rst:88
msgid ""
"Either identify and stop the other program, or use ``flask run --port "
"5001`` to pick a different port."
msgstr ""
"他のプログラムを特定して停止するか、``flask run --port 5001`` を使って"
"違うポートを選んでください。"

#: ../../flask/docs/server.rst:91
msgid ""
"You can use ``netstat`` or ``lsof`` to identify what process id is using "
"a port, then use other operating system tools stop that process. The "
"following example shows that process id 6847 is using port 5000."
msgstr ""
"ポートを使っているのがどのプロセスIDなのか特定するために ``netstat`` "
"または ``lsof`` を使うことができ、それからOSの他のツールを使ってその"
"プロセスを止めてください。以下の例は、プロセスIDが6847のプロセスが5000番"
"ポートを使っていることを示しています。"

#: ../../flask/docs/server.rst:97
msgid "``netstat`` (Linux)"
msgstr ""

#: ../../flask/docs/server.rst:104
msgid "``lsof`` (macOS / Linux)"
msgstr ""

#: ../../flask/docs/server.rst:111
msgid "``netstat`` (Windows)"
msgstr ""

#: ../../flask/docs/server.rst:118
msgid ""
"macOS Monterey and later automatically starts a service that uses port "
"5000. To disable the service, go to System Preferences, Sharing, and "
"disable \"AirPlay Receiver\"."
msgstr ""
"macOS Monterey以降は、自動的に5000番ポートを使うサービスを開始します。"
"そのサービスを無効にするには、System Preferences、Sharingへ行き、"
"「AirPlay Receiver」を無効にします。"

#: ../../flask/docs/server.rst:124
msgid "Lazy or Eager Loading"
msgstr "遅延または先読みローディング（Lazy or Eager Loading）"

#: ../../flask/docs/server.rst:126
msgid ""
"When using the ``flask run`` command with the reloader, the server will "
"continue to run even if you introduce syntax errors or other "
"initialization errors into the code. Accessing the site will show the "
"interactive debugger for the error, rather than crashing the server. This"
" feature is called \"lazy loading\"."
msgstr ""
"再読み込み機能（reloader）と一緒に ``flask run`` コマンドを使うとき、もし"
"文法エラーまたはその他の初期化エラーをコードに導入してしまった場合でも、"
"そのサーバーは走り続けようとします。サイトへアクセスすると、サーバが"
"クラッシュするのではなく、エラーに対するインタラクティブなデバッガを見ら"
"れるでしょう。この機能は「遅延読み込み（lazy loading）」と呼ばれています。"

#: ../../flask/docs/server.rst:132
msgid ""
"If a syntax error is already present when calling ``flask run``, it will "
"fail immediately and show the traceback rather than waiting until the "
"site is accessed. This is intended to make errors more visible initially "
"while still allowing the server to handle errors on reload."
msgstr ""
"もし ``flask run`` を呼んだとき文法エラーが既に存在している場合、サイトに"
"アクセスされるまで待つのではなく、flask runコマンドは即座に失敗してトレース"
"バックを表示します。サーバーがreload時はエラーを処理できるようにしながら、"
"最初はエラーをより可視化させるために、これは意図されたものです。"

#: ../../flask/docs/server.rst:137
msgid ""
"To override this behavior and always fail immediately, even on reload, "
"pass the ``--eager-loading`` option. To always keep the server running, "
"even on the initial call, pass ``--lazy-loading``."
msgstr ""
"この振る舞いを上書きして、reload時であっても、（エラーがあったときは）常に"
"即座に失敗させるには、``--eager-loading`` オプションを渡します。最初に呼ば"
"れたときであっても、常にサーバが走り続けるようにするには、``--lazy-loading`` "
"を渡します。"

# ffae13bdd6ac455981d2d89f6ba76bd3
#: ../../flask/docs/server.rst:143
msgid "In Code"
msgstr "コードの中"

#: ../../flask/docs/server.rst:145
msgid ""
"As an alternative to the ``flask run`` command, the development server "
"can also be started from Python with the :meth:`Flask.run` method. This "
"method takes arguments similar to the CLI options to control the server. "
"The main difference from the CLI command is that the server will crash if"
" there are errors when reloading."
msgstr ""
"``flask run`` コマンドの代替手段として、開発サーバはPythonから :meth:"
"`Flask.run` を使っても開始できます。このメソッドはサーバーを制御するために"
"CLIのオプションと似た引数を取ります。CLIコマンドからの主な違いは、reload時"
"にエラーがあればクラッシュすることです。"

#: ../../flask/docs/server.rst:151
msgid ""
"``debug=True`` can be passed to enable the debugger and reloader, but the"
" ``FLASK_ENV=development`` environment variable is still required to "
"fully enable development mode."
msgstr ""
"デバッガとreloaderを有効にするために（Flask.runに） ``debug=True`` を渡す"
"ことができますが、まだ ``FLASK_ENV=development`` 環境変数は全ての開発モード"
"を有効にするために必要です。"

#: ../../flask/docs/server.rst:155
msgid ""
"Place the call in a main block, otherwise it will interfere when trying "
"to import and run the application with a production server later."
msgstr ""
"mainのブロック内にFlask.runの呼び出しを置いてください。そうしないと、後で"
"本番環境のサーバー内でアプリケーションをimportして走らせようとするときに、"
"その呼び出しが邪魔をするでしょう。"

# 5daf83a5c4a04d47aa5c853419bccb46
#~ msgid ""
#~ "Starting with Flask 0.11 there are "
#~ "multiple built-in ways to run a"
#~ " development server.  The best one is"
#~ " the :command:`flask` command line utility"
#~ " but you can also continue using "
#~ "the :meth:`Flask.run` method."
#~ msgstr ""
#~ "Flask "
#~ "0.11から、開発サーバを実行する複数の組み込まれた（最初からFlaskで用意している）やり方があります。最も良いやり方のひとつは\\"
#~ " :command:`flask`\\ コマンドラインユーティリティですが、\\ "
#~ ":meth:`Flask.run`\\ メソッドを使い続けることもできます。"

# 7897f9c6c6be489cb1502189dcfc0e08
#~ msgid ""
#~ "The :command:`flask` command line script "
#~ "(:ref:`cli`) is strongly recommended for "
#~ "development because it provides a "
#~ "superior reload experience due to how"
#~ " it loads the application.  The basic"
#~ " usage is like this::"
#~ msgstr ""
#~ ":command:`flask`\\ コマンドラインスクリプト（\\ :ref:`cli`\\ "
#~ "）は、アプリケーションの読み込み（load）のやり方によって、読み込みに関してより優れた経験を提供してくれるため、強く推奨されています。基本的な使い方は以下のようになります::"

# a7cff2c9bac1485fa49e4d91e452f8b7
#~ msgid ""
#~ "The individual features of the server"
#~ " can be controlled by passing more"
#~ " arguments to the ``run`` option. For"
#~ " instance the reloader can be "
#~ "disabled::"
#~ msgstr ""
#~ "サーバの個々の目玉機能（feature）は、\\ ``run``\\ "
#~ "のオプションをより多く与えることで制御可能です。例えば、（以下のようにして）再読み込み機能を無効にできます::"

# 0a513a4182f6481fb600a6a8b8e353c1
#~ msgid ""
#~ "The alternative way to start the "
#~ "application is through the :meth:`Flask.run`"
#~ " method.  This will immediately launch "
#~ "a local server exactly the same "
#~ "way the :command:`flask` script does."
#~ msgstr ""
#~ "アプリケーションを開始する別のやり方は、\\ :meth:`Flask.run`\\ "
#~ "メソッドをとおすものです。これは\\ :command:`flask`\\ "
#~ "スクリプトが行うのと全く同じようにローカルサーバを即座に起動します。"

# ab1195ecd7114358b8d5aaee6013e788
#~ msgid "Example::"
#~ msgstr "例::"

# 1afb4705557d4b2d86938ce4335e3324
#~ msgid ""
#~ "This works well for the common "
#~ "case but it does not work well "
#~ "for development which is why from "
#~ "Flask 0.11 onwards the :command:`flask` "
#~ "method is recommended.  The reason for"
#~ " this is that due to how the"
#~ " reload mechanism works there are "
#~ "some bizarre side-effects (like "
#~ "executing certain code twice, sometimes "
#~ "crashing without message or dying when"
#~ " a syntax or import error happens)."
#~ msgstr ""
#~ "これは普通のケースでは上手く機能しますが、開発向けには上手く機能せず、それがFlask 0.11以後は\\ "
#~ ":command:`flask`\\ "
#~ "が推奨される理由になっています。この理由は、再読み込みの機構を機能させるための仕組みによって、奇怪な副作用が生じるためです（あるコードを2回実行したり、ときにはメッセージなしでクラッシュしたり、またはsyntax"
#~ " errorおよびimport errorが発生したとき死んでしまったりするようなことがあります）。"

# 2e46731dc2d546bb953536cdfcb2f849
#~ msgid ""
#~ "It is however still a perfectly "
#~ "valid method for invoking a non "
#~ "automatic reloading application."
#~ msgstr "しかしながら、それでも自動再読み込みをしないアプリケーションを起動するときには、（Flask.run()で）コードの中で起動することは完全に適切な手法です。"

