# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010 Pallets
# This file is distributed under the same license as the Flask package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Flask 1.1.x\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-07-22 21:10+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../flask/docs/changelog.rst:2
msgid "Changelog"
msgstr ""

#: ../../flask/CHANGES.rst:4
msgid "Version 1.1.2"
msgstr ""

#: ../../flask/CHANGES.rst:6
msgid "Released 2020-04-03"
msgstr ""

#: ../../flask/CHANGES.rst:8
msgid "Work around an issue when running the ``flask`` command with an external debugger on Windows. :issue:`3297`"
msgstr ""

#: ../../flask/CHANGES.rst:10
msgid "The static route will not catch all URLs if the ``Flask`` ``static_folder`` argument ends with a slash. :issue:`3452`"
msgstr ""

#: ../../flask/CHANGES.rst:15
msgid "Version 1.1.1"
msgstr ""

#: ../../flask/CHANGES.rst:17
msgid "Released 2019-07-08"
msgstr ""

#: ../../flask/CHANGES.rst:19
msgid "The ``flask.json_available`` flag was added back for compatibility with some extensions. It will raise a deprecation warning when used, and will be removed in version 2.0.0. :issue:`3288`"
msgstr ""

#: ../../flask/CHANGES.rst:25
msgid "Version 1.1.0"
msgstr ""

#: ../../flask/CHANGES.rst:27
#: ../../flask/CHANGES.rst:117
msgid "Released 2019-07-04"
msgstr ""

#: ../../flask/CHANGES.rst:29
msgid "Bump minimum Werkzeug version to >= 0.15."
msgstr ""

#: ../../flask/CHANGES.rst:30
msgid "Drop support for Python 3.4."
msgstr ""

#: ../../flask/CHANGES.rst:31
msgid "Error handlers for ``InternalServerError`` or ``500`` will always be passed an instance of ``InternalServerError``. If they are invoked due to an unhandled exception, that original exception is now available as ``e.original_exception`` rather than being passed directly to the handler. The same is true if the handler is for the base ``HTTPException``. This makes error handler behavior more consistent. :pr:`3266`"
msgstr ""

#: ../../flask/CHANGES.rst:39
msgid ":meth:`Flask.finalize_request` is called for all unhandled exceptions even if there is no ``500`` error handler."
msgstr ""

#: ../../flask/CHANGES.rst:42
msgid ":attr:`Flask.logger` takes the same name as :attr:`Flask.name` (the value passed as ``Flask(import_name)``. This reverts 1.0's behavior of always logging to ``\"flask.app\"``, in order to support multiple apps in the same process. A warning will be shown if old configuration is detected that needs to be moved. :issue:`2866`"
msgstr ""

#: ../../flask/CHANGES.rst:48
msgid ":meth:`flask.RequestContext.copy` includes the current session object in the request context copy. This prevents ``session`` pointing to an out-of-date object. :issue:`2935`"
msgstr ""

#: ../../flask/CHANGES.rst:51
msgid "Using built-in RequestContext, unprintable Unicode characters in Host header will result in a HTTP 400 response and not HTTP 500 as previously. :pr:`2994`"
msgstr ""

#: ../../flask/CHANGES.rst:54
msgid ":func:`send_file` supports :class:`~os.PathLike` objects as described in PEP 0519, to support :mod:`pathlib` in Python 3. :pr:`3059`"
msgstr ""

#: ../../flask/CHANGES.rst:57
msgid ":func:`send_file` supports :class:`~io.BytesIO` partial content. :issue:`2957`"
msgstr ""

#: ../../flask/CHANGES.rst:59
msgid ":func:`open_resource` accepts the \"rt\" file mode. This still does the same thing as \"r\". :issue:`3163`"
msgstr ""

#: ../../flask/CHANGES.rst:61
msgid "The :attr:`MethodView.methods` attribute set in a base class is used by subclasses. :issue:`3138`"
msgstr ""

#: ../../flask/CHANGES.rst:63
msgid ":attr:`Flask.jinja_options` is a ``dict`` instead of an ``ImmutableDict`` to allow easier configuration. Changes must still be made before creating the environment. :pr:`3190`"
msgstr ""

#: ../../flask/CHANGES.rst:66
msgid "Flask's ``JSONMixin`` for the request and response wrappers was moved into Werkzeug. Use Werkzeug's version with Flask-specific support. This bumps the Werkzeug dependency to >= 0.15. :issue:`3125`"
msgstr ""

#: ../../flask/CHANGES.rst:70
msgid "The ``flask`` command entry point is simplified to take advantage of Werkzeug 0.15's better reloader support. This bumps the Werkzeug dependency to >= 0.15. :issue:`3022`"
msgstr ""

#: ../../flask/CHANGES.rst:73
msgid "Support ``static_url_path`` that ends with a forward slash. :issue:`3134`"
msgstr ""

#: ../../flask/CHANGES.rst:75
msgid "Support empty ``static_folder`` without requiring setting an empty ``static_url_path`` as well. :pr:`3124`"
msgstr ""

#: ../../flask/CHANGES.rst:77
msgid ":meth:`jsonify` supports :class:`dataclasses.dataclass` objects. :pr:`3195`"
msgstr ""

#: ../../flask/CHANGES.rst:79
msgid "Allow customizing the :attr:`Flask.url_map_class` used for routing. :pr:`3069`"
msgstr ""

#: ../../flask/CHANGES.rst:81
msgid "The development server port can be set to 0, which tells the OS to pick an available port. :issue:`2926`"
msgstr ""

#: ../../flask/CHANGES.rst:83
msgid "The return value from :meth:`cli.load_dotenv` is more consistent with the documentation. It will return ``False`` if python-dotenv is not installed, or if the given path isn't a file. :issue:`2937`"
msgstr ""

#: ../../flask/CHANGES.rst:86
msgid "Signaling support has a stub for the ``connect_via`` method when the Blinker library is not installed. :pr:`3208`"
msgstr ""

#: ../../flask/CHANGES.rst:88
msgid "Add an ``--extra-files`` option to the ``flask run`` CLI command to specify extra files that will trigger the reloader on change. :issue:`2897`"
msgstr ""

#: ../../flask/CHANGES.rst:91
msgid "Allow returning a dictionary from a view function. Similar to how returning a string will produce a ``text/html`` response, returning a dict will call ``jsonify`` to produce a ``application/json`` response. :pr:`3111`"
msgstr ""

#: ../../flask/CHANGES.rst:95
msgid "Blueprints have a ``cli`` Click group like ``app.cli``. CLI commands registered with a blueprint will be available as a group under the ``flask`` command. :issue:`1357`."
msgstr ""

#: ../../flask/CHANGES.rst:98
msgid "When using the test client as a context manager (``with client:``), all preserved request contexts are popped when the block exits, ensuring nested contexts are cleaned up correctly. :pr:`3157`"
msgstr ""

#: ../../flask/CHANGES.rst:101
msgid "Show a better error message when the view return type is not supported. :issue:`3214`"
msgstr ""

#: ../../flask/CHANGES.rst:103
msgid "``flask.testing.make_test_environ_builder()`` has been deprecated in favour of a new class ``flask.testing.EnvironBuilder``. :pr:`3232`"
msgstr ""

#: ../../flask/CHANGES.rst:105
msgid "The ``flask run`` command no longer fails if Python is not built with SSL support. Using the ``--cert`` option will show an appropriate error message. :issue:`3211`"
msgstr ""

#: ../../flask/CHANGES.rst:108
msgid "URL matching now occurs after the request context is pushed, rather than when it's created. This allows custom URL converters to access the app and request contexts, such as to query a database for an id. :issue:`3088`"
msgstr ""

#: ../../flask/CHANGES.rst:115
msgid "Version 1.0.4"
msgstr ""

#: ../../flask/CHANGES.rst:119
msgid "The key information for ``BadRequestKeyError`` is no longer cleared outside debug mode, so error handlers can still access it. This requires upgrading to Werkzeug 0.15.5. :issue:`3249`"
msgstr ""

#: ../../flask/CHANGES.rst:122
msgid "``send_file`` url quotes the \":\" and \"/\" characters for more compatible UTF-8 filename support in some browsers. :issue:`3074`"
msgstr ""

#: ../../flask/CHANGES.rst:124
msgid "Fixes for PEP451 import loaders and pytest 5.x. :issue:`3275`"
msgstr ""

#: ../../flask/CHANGES.rst:125
msgid "Show message about dotenv on stderr instead of stdout. :issue:`3285`"
msgstr ""

#: ../../flask/CHANGES.rst:129
msgid "Version 1.0.3"
msgstr ""

#: ../../flask/CHANGES.rst:131
msgid "Released 2019-05-17"
msgstr ""

#: ../../flask/CHANGES.rst:133
msgid ":func:`send_file` encodes filenames as ASCII instead of Latin-1 (ISO-8859-1). This fixes compatibility with Gunicorn, which is stricter about header encodings than PEP 3333. :issue:`2766`"
msgstr ""

#: ../../flask/CHANGES.rst:136
msgid "Allow custom CLIs using ``FlaskGroup`` to set the debug flag without it always being overwritten based on environment variables. :pr:`2765`"
msgstr ""

#: ../../flask/CHANGES.rst:139
msgid "``flask --version`` outputs Werkzeug's version and simplifies the Python version. :pr:`2825`"
msgstr ""

#: ../../flask/CHANGES.rst:141
msgid ":func:`send_file` handles an ``attachment_filename`` that is a native Python 2 string (bytes) with UTF-8 coded bytes. :issue:`2933`"
msgstr ""

#: ../../flask/CHANGES.rst:143
msgid "A catch-all error handler registered for ``HTTPException`` will not handle ``RoutingException``, which is used internally during routing. This fixes the unexpected behavior that had been introduced in 1.0. :pr:`2986`"
msgstr ""

#: ../../flask/CHANGES.rst:147
msgid "Passing the ``json`` argument to ``app.test_client`` does not push/pop an extra app context. :issue:`2900`"
msgstr ""

#: ../../flask/CHANGES.rst:152
msgid "Version 1.0.2"
msgstr ""

#: ../../flask/CHANGES.rst:154
msgid "Released 2018-05-02"
msgstr ""

#: ../../flask/CHANGES.rst:156
msgid "Fix more backwards compatibility issues with merging slashes between a blueprint prefix and route. :pr:`2748`"
msgstr ""

#: ../../flask/CHANGES.rst:158
msgid "Fix error with ``flask routes`` command when there are no routes. :issue:`2751`"
msgstr ""

#: ../../flask/CHANGES.rst:163
msgid "Version 1.0.1"
msgstr ""

#: ../../flask/CHANGES.rst:165
#: ../../flask/CHANGES.rst:353
msgid "Released 2018-04-29"
msgstr ""

#: ../../flask/CHANGES.rst:167
msgid "Fix registering partials (with no ``__name__``) as view functions. :pr:`2730`"
msgstr ""

#: ../../flask/CHANGES.rst:169
msgid "Don't treat lists returned from view functions the same as tuples. Only tuples are interpreted as response data. :issue:`2736`"
msgstr ""

#: ../../flask/CHANGES.rst:171
msgid "Extra slashes between a blueprint's ``url_prefix`` and a route URL are merged. This fixes some backwards compatibility issues with the change in 1.0. :issue:`2731`, :issue:`2742`"
msgstr ""

#: ../../flask/CHANGES.rst:174
msgid "Only trap ``BadRequestKeyError`` errors in debug mode, not all ``BadRequest`` errors. This allows ``abort(400)`` to continue working as expected. :issue:`2735`"
msgstr ""

#: ../../flask/CHANGES.rst:177
msgid "The ``FLASK_SKIP_DOTENV`` environment variable can be set to ``1`` to skip automatically loading dotenv files. :issue:`2722`"
msgstr ""

#: ../../flask/CHANGES.rst:182
msgid "Version 1.0"
msgstr ""

#: ../../flask/CHANGES.rst:184
#: ../../flask/CHANGES.rst:361
msgid "Released 2018-04-26"
msgstr ""

#: ../../flask/CHANGES.rst:186
msgid "Python 2.6 and 3.3 are no longer supported."
msgstr ""

#: ../../flask/CHANGES.rst:187
msgid "Bump minimum dependency versions to the latest stable versions: Werkzeug >= 0.14, Jinja >= 2.10, itsdangerous >= 0.24, Click >= 5.1. :issue:`2586`"
msgstr ""

#: ../../flask/CHANGES.rst:190
msgid "Skip :meth:`app.run <Flask.run>` when a Flask application is run from the command line. This avoids some behavior that was confusing to debug."
msgstr ""

#: ../../flask/CHANGES.rst:193
msgid "Change the default for :data:`JSONIFY_PRETTYPRINT_REGULAR` to ``False``. :func:`~json.jsonify` returns a compact format by default, and an indented format in debug mode. :pr:`2193`"
msgstr ""

#: ../../flask/CHANGES.rst:196
msgid ":meth:`Flask.__init__ <Flask>` accepts the ``host_matching`` argument and sets it on :attr:`~Flask.url_map`. :issue:`1559`"
msgstr ""

#: ../../flask/CHANGES.rst:198
msgid ":meth:`Flask.__init__ <Flask>` accepts the ``static_host`` argument and passes it as the ``host`` argument when defining the static route. :issue:`1559`"
msgstr ""

#: ../../flask/CHANGES.rst:201
msgid ":func:`send_file` supports Unicode in ``attachment_filename``. :pr:`2223`"
msgstr ""

#: ../../flask/CHANGES.rst:203
msgid "Pass ``_scheme`` argument from :func:`url_for` to :meth:`~Flask.handle_url_build_error`. :pr:`2017`"
msgstr ""

#: ../../flask/CHANGES.rst:205
msgid ":meth:`~Flask.add_url_rule` accepts the ``provide_automatic_options`` argument to disable adding the ``OPTIONS`` method. :pr:`1489`"
msgstr ""

#: ../../flask/CHANGES.rst:208
msgid ":class:`~views.MethodView` subclasses inherit method handlers from base classes. :pr:`1936`"
msgstr ""

#: ../../flask/CHANGES.rst:210
msgid "Errors caused while opening the session at the beginning of the request are handled by the app's error handlers. :pr:`2254`"
msgstr ""

#: ../../flask/CHANGES.rst:212
msgid "Blueprints gained :attr:`~Blueprint.json_encoder` and :attr:`~Blueprint.json_decoder` attributes to override the app's encoder and decoder. :pr:`1898`"
msgstr ""

#: ../../flask/CHANGES.rst:215
msgid ":meth:`Flask.make_response` raises ``TypeError`` instead of ``ValueError`` for bad response types. The error messages have been improved to describe why the type is invalid. :pr:`2256`"
msgstr ""

#: ../../flask/CHANGES.rst:218
msgid "Add ``routes`` CLI command to output routes registered on the application. :pr:`2259`"
msgstr ""

#: ../../flask/CHANGES.rst:220
msgid "Show warning when session cookie domain is a bare hostname or an IP address, as these may not behave properly in some browsers, such as Chrome. :pr:`2282`"
msgstr ""

#: ../../flask/CHANGES.rst:223
msgid "Allow IP address as exact session cookie domain. :pr:`2282`"
msgstr ""

#: ../../flask/CHANGES.rst:224
msgid "``SESSION_COOKIE_DOMAIN`` is set if it is detected through ``SERVER_NAME``. :pr:`2282`"
msgstr ""

#: ../../flask/CHANGES.rst:226
msgid "Auto-detect zero-argument app factory called ``create_app`` or ``make_app`` from ``FLASK_APP``. :pr:`2297`"
msgstr ""

#: ../../flask/CHANGES.rst:228
msgid "Factory functions are not required to take a ``script_info`` parameter to work with the ``flask`` command. If they take a single parameter or a parameter named ``script_info``, the :class:`~cli.ScriptInfo` object will be passed. :pr:`2319`"
msgstr ""

#: ../../flask/CHANGES.rst:232
msgid "``FLASK_APP`` can be set to an app factory, with arguments if needed, for example ``FLASK_APP=myproject.app:create_app('dev')``. :pr:`2326`"
msgstr ""

#: ../../flask/CHANGES.rst:235
msgid "``FLASK_APP`` can point to local packages that are not installed in editable mode, although ``pip install -e`` is still preferred. :pr:`2414`"
msgstr ""

#: ../../flask/CHANGES.rst:238
msgid "The :class:`~views.View` class attribute :attr:`~views.View.provide_automatic_options` is set in :meth:`~views.View.as_view`, to be detected by :meth:`~Flask.add_url_rule`. :pr:`2316`"
msgstr ""

#: ../../flask/CHANGES.rst:242
msgid "Error handling will try handlers registered for ``blueprint, code``, ``app, code``, ``blueprint, exception``, ``app, exception``. :pr:`2314`"
msgstr ""

#: ../../flask/CHANGES.rst:245
msgid "``Cookie`` is added to the response's ``Vary`` header if the session is accessed at all during the request (and not deleted). :pr:`2288`"
msgstr ""

#: ../../flask/CHANGES.rst:247
msgid ":meth:`~Flask.test_request_context` accepts ``subdomain`` and ``url_scheme`` arguments for use when building the base URL. :pr:`1621`"
msgstr ""

#: ../../flask/CHANGES.rst:250
msgid "Set :data:`APPLICATION_ROOT` to ``'/'`` by default. This was already the implicit default when it was set to ``None``."
msgstr ""

#: ../../flask/CHANGES.rst:252
msgid ":data:`TRAP_BAD_REQUEST_ERRORS` is enabled by default in debug mode. ``BadRequestKeyError`` has a message with the bad key in debug mode instead of the generic bad request message. :pr:`2348`"
msgstr ""

#: ../../flask/CHANGES.rst:255
msgid "Allow registering new tags with :class:`~json.tag.TaggedJSONSerializer` to support storing other types in the session cookie. :pr:`2352`"
msgstr ""

#: ../../flask/CHANGES.rst:258
msgid "Only open the session if the request has not been pushed onto the context stack yet. This allows :func:`~stream_with_context` generators to access the same session that the containing view uses. :pr:`2354`"
msgstr ""

#: ../../flask/CHANGES.rst:262
msgid "Add ``json`` keyword argument for the test client request methods. This will dump the given object as JSON and set the appropriate content type. :pr:`2358`"
msgstr ""

#: ../../flask/CHANGES.rst:265
msgid "Extract JSON handling to a mixin applied to both the :class:`Request` and :class:`Response` classes. This adds the :meth:`~Response.is_json` and :meth:`~Response.get_json` methods to the response to make testing JSON response much easier. :pr:`2358`"
msgstr ""

#: ../../flask/CHANGES.rst:269
msgid "Removed error handler caching because it caused unexpected results for some exception inheritance hierarchies. Register handlers explicitly for each exception if you want to avoid traversing the MRO. :pr:`2362`"
msgstr ""

#: ../../flask/CHANGES.rst:273
msgid "Fix incorrect JSON encoding of aware, non-UTC datetimes. :pr:`2374`"
msgstr ""

#: ../../flask/CHANGES.rst:274
msgid "Template auto reloading will honor debug mode even even if :attr:`~Flask.jinja_env` was already accessed. :pr:`2373`"
msgstr ""

#: ../../flask/CHANGES.rst:276
msgid "The following old deprecated code was removed. :issue:`2385`"
msgstr ""

#: ../../flask/CHANGES.rst:278
msgid "``flask.ext`` - import extensions directly by their name instead of through the ``flask.ext`` namespace. For example, ``import flask.ext.sqlalchemy`` becomes ``import flask_sqlalchemy``."
msgstr ""

#: ../../flask/CHANGES.rst:282
msgid "``Flask.init_jinja_globals`` - extend :meth:`Flask.create_jinja_environment` instead."
msgstr ""

#: ../../flask/CHANGES.rst:284
msgid "``Flask.error_handlers`` - tracked by :attr:`Flask.error_handler_spec`, use :meth:`Flask.errorhandler` to register handlers."
msgstr ""

#: ../../flask/CHANGES.rst:287
msgid "``Flask.request_globals_class`` - use :attr:`Flask.app_ctx_globals_class` instead."
msgstr ""

#: ../../flask/CHANGES.rst:289
msgid "``Flask.static_path`` - use :attr:`Flask.static_url_path` instead."
msgstr ""

#: ../../flask/CHANGES.rst:291
msgid "``Request.module`` - use :attr:`Request.blueprint` instead."
msgstr ""

#: ../../flask/CHANGES.rst:293
msgid "The :attr:`Request.json` property is no longer deprecated. :issue:`1421`"
msgstr ""

#: ../../flask/CHANGES.rst:295
msgid "Support passing a :class:`~werkzeug.test.EnvironBuilder` or ``dict`` to :meth:`test_client.open <werkzeug.test.Client.open>`. :pr:`2412`"
msgstr ""

#: ../../flask/CHANGES.rst:297
msgid "The ``flask`` command and :meth:`Flask.run` will load environment variables from ``.env`` and ``.flaskenv`` files if python-dotenv is installed. :pr:`2416`"
msgstr ""

#: ../../flask/CHANGES.rst:300
msgid "When passing a full URL to the test client, the scheme in the URL is used instead of :data:`PREFERRED_URL_SCHEME`. :pr:`2430`"
msgstr ""

#: ../../flask/CHANGES.rst:302
msgid ":attr:`Flask.logger` has been simplified. ``LOGGER_NAME`` and ``LOGGER_HANDLER_POLICY`` config was removed. The logger is always named ``flask.app``. The level is only set on first access, it doesn't check :attr:`Flask.debug` each time. Only one format is used, not different ones depending on :attr:`Flask.debug`. No handlers are removed, and a handler is only added if no handlers are already configured. :pr:`2436`"
msgstr ""

#: ../../flask/CHANGES.rst:309
msgid "Blueprint view function names may not contain dots. :pr:`2450`"
msgstr ""

#: ../../flask/CHANGES.rst:310
msgid "Fix a ``ValueError`` caused by invalid ``Range`` requests in some cases. :issue:`2526`"
msgstr ""

#: ../../flask/CHANGES.rst:312
msgid "The development server uses threads by default. :pr:`2529`"
msgstr ""

#: ../../flask/CHANGES.rst:313
msgid "Loading config files with ``silent=True`` will ignore :data:`~errno.ENOTDIR` errors. :pr:`2581`"
msgstr ""

#: ../../flask/CHANGES.rst:315
msgid "Pass ``--cert`` and ``--key`` options to ``flask run`` to run the development server over HTTPS. :pr:`2606`"
msgstr ""

#: ../../flask/CHANGES.rst:317
msgid "Added :data:`SESSION_COOKIE_SAMESITE` to control the ``SameSite`` attribute on the session cookie. :pr:`2607`"
msgstr ""

#: ../../flask/CHANGES.rst:319
msgid "Added :meth:`~flask.Flask.test_cli_runner` to create a Click runner that can invoke Flask CLI commands for testing. :pr:`2636`"
msgstr ""

#: ../../flask/CHANGES.rst:321
msgid "Subdomain matching is disabled by default and setting :data:`SERVER_NAME` does not implicitly enable it. It can be enabled by passing ``subdomain_matching=True`` to the ``Flask`` constructor. :pr:`2635`"
msgstr ""

#: ../../flask/CHANGES.rst:325
msgid "A single trailing slash is stripped from the blueprint ``url_prefix`` when it is registered with the app. :pr:`2629`"
msgstr ""

#: ../../flask/CHANGES.rst:327
msgid ":meth:`Request.get_json` doesn't cache the result if parsing fails when ``silent`` is true. :issue:`2651`"
msgstr ""

#: ../../flask/CHANGES.rst:329
msgid ":func:`Request.get_json` no longer accepts arbitrary encodings. Incoming JSON should be encoded using UTF-8 per :rfc:`8259`, but Flask will autodetect UTF-8, -16, or -32. :pr:`2691`"
msgstr ""

#: ../../flask/CHANGES.rst:332
msgid "Added :data:`MAX_COOKIE_SIZE` and :attr:`Response.max_cookie_size` to control when Werkzeug warns about large cookies that browsers may ignore. :pr:`2693`"
msgstr ""

#: ../../flask/CHANGES.rst:335
msgid "Updated documentation theme to make docs look better in small windows. :pr:`2709`"
msgstr ""

#: ../../flask/CHANGES.rst:337
msgid "Rewrote the tutorial docs and example project to take a more structured approach to help new users avoid common pitfalls. :pr:`2676`"
msgstr ""

#: ../../flask/CHANGES.rst:343
msgid "Version 0.12.5"
msgstr ""

#: ../../flask/CHANGES.rst:345
msgid "Released 2020-02-10"
msgstr ""

#: ../../flask/CHANGES.rst:347
msgid "Pin Werkzeug to < 1.0.0. :issue:`3497`"
msgstr ""

#: ../../flask/CHANGES.rst:351
msgid "Version 0.12.4"
msgstr ""

#: ../../flask/CHANGES.rst:355
msgid "Repackage 0.12.3 to fix package layout issue. :issue:`2728`"
msgstr ""

#: ../../flask/CHANGES.rst:359
msgid "Version 0.12.3"
msgstr ""

#: ../../flask/CHANGES.rst:363
msgid ":func:`Request.get_json` no longer accepts arbitrary encodings. Incoming JSON should be encoded using UTF-8 per :rfc:`8259`, but Flask will autodetect UTF-8, -16, or -32. :issue:`2692`"
msgstr ""

#: ../../flask/CHANGES.rst:366
msgid "Fix a Python warning about imports when using ``python -m flask``. :issue:`2666`"
msgstr ""

#: ../../flask/CHANGES.rst:368
msgid "Fix a ``ValueError`` caused by invalid ``Range`` requests in some cases."
msgstr ""

#: ../../flask/CHANGES.rst:373
msgid "Version 0.12.2"
msgstr ""

#: ../../flask/CHANGES.rst:375
msgid "Released 2017-05-16"
msgstr ""

#: ../../flask/CHANGES.rst:377
msgid "Fix a bug in ``safe_join`` on Windows."
msgstr ""

#: ../../flask/CHANGES.rst:381
msgid "Version 0.12.1"
msgstr ""

#: ../../flask/CHANGES.rst:383
msgid "Released 2017-03-31"
msgstr ""

#: ../../flask/CHANGES.rst:385
msgid "Prevent ``flask run`` from showing a ``NoAppException`` when an ``ImportError`` occurs within the imported application module."
msgstr ""

#: ../../flask/CHANGES.rst:387
msgid "Fix encoding behavior of ``app.config.from_pyfile`` for Python 3. :issue:`2118`"
msgstr ""

#: ../../flask/CHANGES.rst:389
msgid "Use the ``SERVER_NAME`` config if it is present as default values for ``app.run``. :issue:`2109`, :pr:`2152`"
msgstr ""

#: ../../flask/CHANGES.rst:391
msgid "Call ``ctx.auto_pop`` with the exception object instead of ``None``, in the event that a ``BaseException`` such as ``KeyboardInterrupt`` is raised in a request handler."
msgstr ""

#: ../../flask/CHANGES.rst:397
msgid "Version 0.12"
msgstr ""

#: ../../flask/CHANGES.rst:399
msgid "Released 2016-12-21, codename Punsch"
msgstr ""

#: ../../flask/CHANGES.rst:401
msgid "The cli command now responds to ``--version``."
msgstr ""

#: ../../flask/CHANGES.rst:402
msgid "Mimetype guessing and ETag generation for file-like objects in ``send_file`` has been removed. :issue:`104`, :pr`1849`"
msgstr ""

#: ../../flask/CHANGES.rst:404
msgid "Mimetype guessing in ``send_file`` now fails loudly and doesn't fall back to ``application/octet-stream``. :pr:`1988`"
msgstr ""

#: ../../flask/CHANGES.rst:406
msgid "Make ``flask.safe_join`` able to join multiple paths like ``os.path.join`` :pr:`1730`"
msgstr ""

#: ../../flask/CHANGES.rst:408
msgid "Revert a behavior change that made the dev server crash instead of returning an Internal Server Error. :pr:`2006`"
msgstr ""

#: ../../flask/CHANGES.rst:410
msgid "Correctly invoke response handlers for both regular request dispatching as well as error handlers."
msgstr ""

#: ../../flask/CHANGES.rst:412
msgid "Disable logger propagation by default for the app logger."
msgstr ""

#: ../../flask/CHANGES.rst:413
msgid "Add support for range requests in ``send_file``."
msgstr ""

#: ../../flask/CHANGES.rst:414
msgid "``app.test_client`` includes preset default environment, which can now be directly set, instead of per ``client.get``."
msgstr ""

#: ../../flask/CHANGES.rst:416
msgid "Fix crash when running under PyPy3. :pr:`1814`"
msgstr ""

#: ../../flask/CHANGES.rst:420
msgid "Version 0.11.1"
msgstr ""

#: ../../flask/CHANGES.rst:422
msgid "Released 2016-06-07"
msgstr ""

#: ../../flask/CHANGES.rst:424
msgid "Fixed a bug that prevented ``FLASK_APP=foobar/__init__.py`` from working. :pr:`1872`"
msgstr ""

#: ../../flask/CHANGES.rst:429
msgid "Version 0.11"
msgstr ""

#: ../../flask/CHANGES.rst:431
msgid "Released 2016-05-29, codename Absinthe"
msgstr ""

#: ../../flask/CHANGES.rst:433
msgid "Added support to serializing top-level arrays to :func:`flask.jsonify`. This introduces a security risk in ancient browsers. See :ref:`json-security` for details."
msgstr ""

#: ../../flask/CHANGES.rst:436
msgid "Added before_render_template signal."
msgstr ""

#: ../../flask/CHANGES.rst:437
msgid "Added ``**kwargs`` to :meth:`flask.Test.test_client` to support passing additional keyword arguments to the constructor of :attr:`flask.Flask.test_client_class`."
msgstr ""

#: ../../flask/CHANGES.rst:440
msgid "Added ``SESSION_REFRESH_EACH_REQUEST`` config key that controls the set-cookie behavior. If set to ``True`` a permanent session will be refreshed each request and get their lifetime extended, if set to ``False`` it will only be modified if the session actually modifies. Non permanent sessions are not affected by this and will always expire if the browser window closes."
msgstr ""

#: ../../flask/CHANGES.rst:446
msgid "Made Flask support custom JSON mimetypes for incoming data."
msgstr ""

#: ../../flask/CHANGES.rst:447
msgid "Added support for returning tuples in the form ``(response, headers)`` from a view function."
msgstr ""

#: ../../flask/CHANGES.rst:449
msgid "Added :meth:`flask.Config.from_json`."
msgstr ""

#: ../../flask/CHANGES.rst:450
msgid "Added :attr:`flask.Flask.config_class`."
msgstr ""

#: ../../flask/CHANGES.rst:451
msgid "Added :meth:`flask.Config.get_namespace`."
msgstr ""

#: ../../flask/CHANGES.rst:452
msgid "Templates are no longer automatically reloaded outside of debug mode. This can be configured with the new ``TEMPLATES_AUTO_RELOAD`` config key."
msgstr ""

#: ../../flask/CHANGES.rst:455
msgid "Added a workaround for a limitation in Python 3.3's namespace loader."
msgstr ""

#: ../../flask/CHANGES.rst:457
msgid "Added support for explicit root paths when using Python 3.3's namespace packages."
msgstr ""

#: ../../flask/CHANGES.rst:459
msgid "Added :command:`flask` and the ``flask.cli`` module to start the local debug server through the click CLI system. This is recommended over the old ``flask.run()`` method as it works faster and more reliable due to a different design and also replaces ``Flask-Script``."
msgstr ""

#: ../../flask/CHANGES.rst:464
msgid "Error handlers that match specific classes are now checked first, thereby allowing catching exceptions that are subclasses of HTTP exceptions (in ``werkzeug.exceptions``). This makes it possible for an extension author to create exceptions that will by default result in the HTTP error of their choosing, but may be caught with a custom error handler if desired."
msgstr ""

#: ../../flask/CHANGES.rst:470
msgid "Added :meth:`flask.Config.from_mapping`."
msgstr ""

#: ../../flask/CHANGES.rst:471
msgid "Flask will now log by default even if debug is disabled. The log format is now hardcoded but the default log handling can be disabled through the ``LOGGER_HANDLER_POLICY`` configuration key."
msgstr ""

#: ../../flask/CHANGES.rst:474
msgid "Removed deprecated module functionality."
msgstr ""

#: ../../flask/CHANGES.rst:475
msgid "Added the ``EXPLAIN_TEMPLATE_LOADING`` config flag which when enabled will instruct Flask to explain how it locates templates. This should help users debug when the wrong templates are loaded."
msgstr ""

#: ../../flask/CHANGES.rst:478
msgid "Enforce blueprint handling in the order they were registered for template loading."
msgstr ""

#: ../../flask/CHANGES.rst:480
msgid "Ported test suite to py.test."
msgstr ""

#: ../../flask/CHANGES.rst:481
msgid "Deprecated ``request.json`` in favour of ``request.get_json()``."
msgstr ""

#: ../../flask/CHANGES.rst:482
msgid "Add \"pretty\" and \"compressed\" separators definitions in jsonify() method. Reduces JSON response size when ``JSONIFY_PRETTYPRINT_REGULAR=False`` by removing unnecessary white space included by default after separators."
msgstr ""

#: ../../flask/CHANGES.rst:486
msgid "JSON responses are now terminated with a newline character, because it is a convention that UNIX text files end with a newline and some clients don't deal well when this newline is missing. This came up originally as a part of https://github.com/postmanlabs/httpbin/issues/168. :pr:`1262`"
msgstr ""

#: ../../flask/CHANGES.rst:491
msgid "The automatically provided ``OPTIONS`` method is now correctly disabled if the user registered an overriding rule with the lowercase-version ``options``. :issue:`1288`"
msgstr ""

#: ../../flask/CHANGES.rst:494
msgid "``flask.json.jsonify`` now supports the ``datetime.date`` type. :pr:`1326`"
msgstr ""

#: ../../flask/CHANGES.rst:496
msgid "Don't leak exception info of already caught exceptions to context teardown handlers. :pr:`1393`"
msgstr ""

#: ../../flask/CHANGES.rst:498
msgid "Allow custom Jinja environment subclasses. :pr:`1422`"
msgstr ""

#: ../../flask/CHANGES.rst:499
msgid "Updated extension dev guidelines."
msgstr ""

#: ../../flask/CHANGES.rst:500
msgid "``flask.g`` now has ``pop()`` and ``setdefault`` methods."
msgstr ""

#: ../../flask/CHANGES.rst:501
msgid "Turn on autoescape for ``flask.templating.render_template_string`` by default. :pr:`1515`"
msgstr ""

#: ../../flask/CHANGES.rst:503
msgid "``flask.ext`` is now deprecated. :pr:`1484`"
msgstr ""

#: ../../flask/CHANGES.rst:504
msgid "``send_from_directory`` now raises BadRequest if the filename is invalid on the server OS. :pr:`1763`"
msgstr ""

#: ../../flask/CHANGES.rst:506
msgid "Added the ``JSONIFY_MIMETYPE`` configuration variable. :pr:`1728`"
msgstr ""

#: ../../flask/CHANGES.rst:507
msgid "Exceptions during teardown handling will no longer leave bad application contexts lingering around."
msgstr ""

#: ../../flask/CHANGES.rst:509
msgid "Fixed broken ``test_appcontext_signals()`` test case."
msgstr ""

#: ../../flask/CHANGES.rst:510
msgid "Raise an :exc:`AttributeError` in :func:`flask.helpers.find_package` with a useful message explaining why it is raised when a PEP 302 import hook is used without an ``is_package()`` method."
msgstr ""

#: ../../flask/CHANGES.rst:513
msgid "Fixed an issue causing exceptions raised before entering a request or app context to be passed to teardown handlers."
msgstr ""

#: ../../flask/CHANGES.rst:515
msgid "Fixed an issue with query parameters getting removed from requests in the test client when absolute URLs were requested."
msgstr ""

#: ../../flask/CHANGES.rst:517
msgid "Made ``@before_first_request`` into a decorator as intended."
msgstr ""

#: ../../flask/CHANGES.rst:518
msgid "Fixed an etags bug when sending a file streams with a name."
msgstr ""

#: ../../flask/CHANGES.rst:519
msgid "Fixed ``send_from_directory`` not expanding to the application root path correctly."
msgstr ""

#: ../../flask/CHANGES.rst:521
msgid "Changed logic of before first request handlers to flip the flag after invoking. This will allow some uses that are potentially dangerous but should probably be permitted."
msgstr ""

#: ../../flask/CHANGES.rst:524
msgid "Fixed Python 3 bug when a handler from ``app.url_build_error_handlers`` reraises the ``BuildError``."
msgstr ""

#: ../../flask/CHANGES.rst:529
msgid "Version 0.10.1"
msgstr ""

#: ../../flask/CHANGES.rst:531
msgid "Released 2013-06-14"
msgstr ""

#: ../../flask/CHANGES.rst:533
msgid "Fixed an issue where ``|tojson`` was not quoting single quotes which made the filter not work properly in HTML attributes. Now it's possible to use that filter in single quoted attributes. This should make using that filter with angular.js easier."
msgstr ""

#: ../../flask/CHANGES.rst:537
msgid "Added support for byte strings back to the session system. This broke compatibility with the common case of people putting binary data for token verification into the session."
msgstr ""

#: ../../flask/CHANGES.rst:540
msgid "Fixed an issue where registering the same method twice for the same endpoint would trigger an exception incorrectly."
msgstr ""

#: ../../flask/CHANGES.rst:545
msgid "Version 0.10"
msgstr ""

#: ../../flask/CHANGES.rst:547
msgid "Released 2013-06-13, codename Limoncello"
msgstr ""

#: ../../flask/CHANGES.rst:549
msgid "Changed default cookie serialization format from pickle to JSON to limit the impact an attacker can do if the secret key leaks. See :ref:`upgrading-to-010` for more information."
msgstr ""

#: ../../flask/CHANGES.rst:552
msgid "Added ``template_test`` methods in addition to the already existing ``template_filter`` method family."
msgstr ""

#: ../../flask/CHANGES.rst:554
msgid "Added ``template_global`` methods in addition to the already existing ``template_filter`` method family."
msgstr ""

#: ../../flask/CHANGES.rst:556
msgid "Set the content-length header for x-sendfile."
msgstr ""

#: ../../flask/CHANGES.rst:557
msgid "``tojson`` filter now does not escape script blocks in HTML5 parsers."
msgstr ""

#: ../../flask/CHANGES.rst:559
msgid "``tojson`` used in templates is now safe by default due. This was allowed due to the different escaping behavior."
msgstr ""

#: ../../flask/CHANGES.rst:561
msgid "Flask will now raise an error if you attempt to register a new function on an already used endpoint."
msgstr ""

#: ../../flask/CHANGES.rst:563
msgid "Added wrapper module around simplejson and added default serialization of datetime objects. This allows much easier customization of how JSON is handled by Flask or any Flask extension."
msgstr ""

#: ../../flask/CHANGES.rst:567
msgid "Removed deprecated internal ``flask.session`` module alias. Use ``flask.sessions`` instead to get the session module. This is not to be confused with ``flask.session`` the session proxy."
msgstr ""

#: ../../flask/CHANGES.rst:570
msgid "Templates can now be rendered without request context. The behavior is slightly different as the ``request``, ``session`` and ``g`` objects will not be available and blueprint's context processors are not called."
msgstr ""

#: ../../flask/CHANGES.rst:574
msgid "The config object is now available to the template as a real global and not through a context processor which makes it available even in imported templates by default."
msgstr ""

#: ../../flask/CHANGES.rst:577
msgid "Added an option to generate non-ascii encoded JSON which should result in less bytes being transmitted over the network. It's disabled by default to not cause confusion with existing libraries that might expect ``flask.json.dumps`` to return bytestrings by default."
msgstr ""

#: ../../flask/CHANGES.rst:582
msgid "``flask.g`` is now stored on the app context instead of the request context."
msgstr ""

#: ../../flask/CHANGES.rst:584
msgid "``flask.g`` now gained a ``get()`` method for not erroring out on non existing items."
msgstr ""

#: ../../flask/CHANGES.rst:586
msgid "``flask.g`` now can be used with the ``in`` operator to see what's defined and it now is iterable and will yield all attributes stored."
msgstr ""

#: ../../flask/CHANGES.rst:588
msgid "``flask.Flask.request_globals_class`` got renamed to ``flask.Flask.app_ctx_globals_class`` which is a better name to what it does since 0.10."
msgstr ""

#: ../../flask/CHANGES.rst:591
msgid "``request``, ``session`` and ``g`` are now also added as proxies to the template context which makes them available in imported templates. One has to be very careful with those though because usage outside of macros might cause caching."
msgstr ""

#: ../../flask/CHANGES.rst:595
msgid "Flask will no longer invoke the wrong error handlers if a proxy exception is passed through."
msgstr ""

#: ../../flask/CHANGES.rst:597
msgid "Added a workaround for chrome's cookies in localhost not working as intended with domain names."
msgstr ""

#: ../../flask/CHANGES.rst:599
msgid "Changed logic for picking defaults for cookie values from sessions to work better with Google Chrome."
msgstr ""

#: ../../flask/CHANGES.rst:601
msgid "Added ``message_flashed`` signal that simplifies flashing testing."
msgstr ""

#: ../../flask/CHANGES.rst:602
msgid "Added support for copying of request contexts for better working with greenlets."
msgstr ""

#: ../../flask/CHANGES.rst:604
msgid "Removed custom JSON HTTP exception subclasses. If you were relying on them you can reintroduce them again yourself trivially. Using them however is strongly discouraged as the interface was flawed."
msgstr ""

#: ../../flask/CHANGES.rst:607
msgid "Python requirements changed: requiring Python 2.6 or 2.7 now to prepare for Python 3.3 port."
msgstr ""

#: ../../flask/CHANGES.rst:609
msgid "Changed how the teardown system is informed about exceptions. This is now more reliable in case something handles an exception halfway through the error handling process."
msgstr ""

#: ../../flask/CHANGES.rst:612
msgid "Request context preservation in debug mode now keeps the exception information around which means that teardown handlers are able to distinguish error from success cases."
msgstr ""

#: ../../flask/CHANGES.rst:615
msgid "Added the ``JSONIFY_PRETTYPRINT_REGULAR`` configuration variable."
msgstr ""

#: ../../flask/CHANGES.rst:616
msgid "Flask now orders JSON keys by default to not trash HTTP caches due to different hash seeds between different workers."
msgstr ""

#: ../../flask/CHANGES.rst:618
msgid "Added ``appcontext_pushed`` and ``appcontext_popped`` signals."
msgstr ""

#: ../../flask/CHANGES.rst:619
msgid "The builtin run method now takes the ``SERVER_NAME`` into account when picking the default port to run on."
msgstr ""

#: ../../flask/CHANGES.rst:621
msgid "Added ``flask.request.get_json()`` as a replacement for the old ``flask.request.json`` property."
msgstr ""

#: ../../flask/CHANGES.rst:626
msgid "Version 0.9"
msgstr ""

#: ../../flask/CHANGES.rst:628
msgid "Released 2012-07-01, codename Campari"
msgstr ""

#: ../../flask/CHANGES.rst:630
msgid "The :func:`flask.Request.on_json_loading_failed` now returns a JSON formatted response by default."
msgstr ""

#: ../../flask/CHANGES.rst:632
msgid "The :func:`flask.url_for` function now can generate anchors to the generated links."
msgstr ""

#: ../../flask/CHANGES.rst:634
msgid "The :func:`flask.url_for` function now can also explicitly generate URL rules specific to a given HTTP method."
msgstr ""

#: ../../flask/CHANGES.rst:636
msgid "Logger now only returns the debug log setting if it was not set explicitly."
msgstr ""

#: ../../flask/CHANGES.rst:638
msgid "Unregister a circular dependency between the WSGI environment and the request object when shutting down the request. This means that environ ``werkzeug.request`` will be ``None`` after the response was returned to the WSGI server but has the advantage that the garbage collector is not needed on CPython to tear down the request unless the user created circular dependencies themselves."
msgstr ""

#: ../../flask/CHANGES.rst:644
msgid "Session is now stored after callbacks so that if the session payload is stored in the session you can still modify it in an after request callback."
msgstr ""

#: ../../flask/CHANGES.rst:647
msgid "The :class:`flask.Flask` class will avoid importing the provided import name if it can (the required first parameter), to benefit tools which build Flask instances programmatically. The Flask class will fall back to using import on systems with custom module hooks, e.g. Google App Engine, or when the import name is inside a zip archive (usually a .egg) prior to Python 2.7."
msgstr ""

#: ../../flask/CHANGES.rst:653
msgid "Blueprints now have a decorator to add custom template filters application wide, :meth:`flask.Blueprint.app_template_filter`."
msgstr ""

#: ../../flask/CHANGES.rst:655
msgid "The Flask and Blueprint classes now have a non-decorator method for adding custom template filters application wide, :meth:`flask.Flask.add_template_filter` and :meth:`flask.Blueprint.add_app_template_filter`."
msgstr ""

#: ../../flask/CHANGES.rst:659
msgid "The :func:`flask.get_flashed_messages` function now allows rendering flashed message categories in separate blocks, through a ``category_filter`` argument."
msgstr ""

#: ../../flask/CHANGES.rst:662
msgid "The :meth:`flask.Flask.run` method now accepts ``None`` for ``host`` and ``port`` arguments, using default values when ``None``. This allows for calling run using configuration values, e.g. ``app.run(app.config.get('MYHOST'), app.config.get('MYPORT'))``, with proper behavior whether or not a config file is provided."
msgstr ""

#: ../../flask/CHANGES.rst:667
msgid "The :meth:`flask.render_template` method now accepts a either an iterable of template names or a single template name. Previously, it only accepted a single template name. On an iterable, the first template found is rendered."
msgstr ""

#: ../../flask/CHANGES.rst:671
msgid "Added :meth:`flask.Flask.app_context` which works very similar to the request context but only provides access to the current application. This also adds support for URL generation without an active request context."
msgstr ""

#: ../../flask/CHANGES.rst:675
msgid "View functions can now return a tuple with the first instance being an instance of :class:`flask.Response`. This allows for returning ``jsonify(error=\"error msg\"), 400`` from a view function."
msgstr ""

#: ../../flask/CHANGES.rst:678
msgid ":class:`~flask.Flask` and :class:`~flask.Blueprint` now provide a :meth:`~flask.Flask.get_send_file_max_age` hook for subclasses to override behavior of serving static files from Flask when using :meth:`flask.Flask.send_static_file` (used for the default static file handler) and :func:`~flask.helpers.send_file`. This hook is provided a filename, which for example allows changing cache controls by file extension. The default max-age for ``send_file`` and static files can be configured through a new ``SEND_FILE_MAX_AGE_DEFAULT`` configuration variable, which is used in the default ``get_send_file_max_age`` implementation."
msgstr ""

#: ../../flask/CHANGES.rst:688
msgid "Fixed an assumption in sessions implementation which could break message flashing on sessions implementations which use external storage."
msgstr ""

#: ../../flask/CHANGES.rst:691
msgid "Changed the behavior of tuple return values from functions. They are no longer arguments to the response object, they now have a defined meaning."
msgstr ""

#: ../../flask/CHANGES.rst:694
msgid "Added :attr:`flask.Flask.request_globals_class` to allow a specific class to be used on creation of the :data:`~flask.g` instance of each request."
msgstr ""

#: ../../flask/CHANGES.rst:697
msgid "Added ``required_methods`` attribute to view functions to force-add methods on registration."
msgstr ""

#: ../../flask/CHANGES.rst:699
msgid "Added :func:`flask.after_this_request`."
msgstr ""

#: ../../flask/CHANGES.rst:700
msgid "Added :func:`flask.stream_with_context` and the ability to push contexts multiple times without producing unexpected behavior."
msgstr ""

#: ../../flask/CHANGES.rst:705
msgid "Version 0.8.1"
msgstr ""

#: ../../flask/CHANGES.rst:707
msgid "Released 2012-07-01"
msgstr ""

#: ../../flask/CHANGES.rst:709
msgid "Fixed an issue with the undocumented ``flask.session`` module to not work properly on Python 2.5. It should not be used but did cause some problems for package managers."
msgstr ""

#: ../../flask/CHANGES.rst:715
msgid "Version 0.8"
msgstr ""

#: ../../flask/CHANGES.rst:717
msgid "Released 2011-09-29, codename Rakija"
msgstr ""

#: ../../flask/CHANGES.rst:719
msgid "Refactored session support into a session interface so that the implementation of the sessions can be changed without having to override the Flask class."
msgstr ""

#: ../../flask/CHANGES.rst:722
msgid "Empty session cookies are now deleted properly automatically."
msgstr ""

#: ../../flask/CHANGES.rst:723
msgid "View functions can now opt out of getting the automatic OPTIONS implementation."
msgstr ""

#: ../../flask/CHANGES.rst:725
msgid "HTTP exceptions and Bad Request errors can now be trapped so that they show up normally in the traceback."
msgstr ""

#: ../../flask/CHANGES.rst:727
msgid "Flask in debug mode is now detecting some common problems and tries to warn you about them."
msgstr ""

#: ../../flask/CHANGES.rst:729
msgid "Flask in debug mode will now complain with an assertion error if a view was attached after the first request was handled. This gives earlier feedback when users forget to import view code ahead of time."
msgstr ""

#: ../../flask/CHANGES.rst:733
msgid "Added the ability to register callbacks that are only triggered once at the beginning of the first request. (:meth:`Flask.before_first_request`)"
msgstr ""

#: ../../flask/CHANGES.rst:736
msgid "Malformed JSON data will now trigger a bad request HTTP exception instead of a value error which usually would result in a 500 internal server error if not handled. This is a backwards incompatible change."
msgstr ""

#: ../../flask/CHANGES.rst:740
msgid "Applications now not only have a root path where the resources and modules are located but also an instance path which is the designated place to drop files that are modified at runtime (uploads etc.). Also this is conceptually only instance depending and outside version control so it's the perfect place to put configuration files etc. For more information see :ref:`instance-folders`."
msgstr ""

#: ../../flask/CHANGES.rst:746
msgid "Added the ``APPLICATION_ROOT`` configuration variable."
msgstr ""

#: ../../flask/CHANGES.rst:747
msgid "Implemented :meth:`~flask.testing.TestClient.session_transaction` to easily modify sessions from the test environment."
msgstr ""

#: ../../flask/CHANGES.rst:749
msgid "Refactored test client internally. The ``APPLICATION_ROOT`` configuration variable as well as ``SERVER_NAME`` are now properly used by the test client as defaults."
msgstr ""

#: ../../flask/CHANGES.rst:752
msgid "Added :attr:`flask.views.View.decorators` to support simpler decorating of pluggable (class-based) views."
msgstr ""

#: ../../flask/CHANGES.rst:754
msgid "Fixed an issue where the test client if used with the \"with\" statement did not trigger the execution of the teardown handlers."
msgstr ""

#: ../../flask/CHANGES.rst:756
msgid "Added finer control over the session cookie parameters."
msgstr ""

#: ../../flask/CHANGES.rst:757
msgid "HEAD requests to a method view now automatically dispatch to the ``get`` method if no handler was implemented."
msgstr ""

#: ../../flask/CHANGES.rst:759
msgid "Implemented the virtual :mod:`flask.ext` package to import extensions from."
msgstr ""

#: ../../flask/CHANGES.rst:761
msgid "The context preservation on exceptions is now an integral component of Flask itself and no longer of the test client. This cleaned up some internal logic and lowers the odds of runaway request contexts in unittests."
msgstr ""

#: ../../flask/CHANGES.rst:765
msgid "Fixed the Jinja2 environment's ``list_templates`` method not returning the correct names when blueprints or modules were involved."
msgstr ""

#: ../../flask/CHANGES.rst:771
msgid "Version 0.7.2"
msgstr ""

#: ../../flask/CHANGES.rst:773
msgid "Released 2011-07-06"
msgstr ""

#: ../../flask/CHANGES.rst:775
msgid "Fixed an issue with URL processors not properly working on blueprints."
msgstr ""

#: ../../flask/CHANGES.rst:780
msgid "Version 0.7.1"
msgstr ""

#: ../../flask/CHANGES.rst:782
msgid "Released 2011-06-29"
msgstr ""

#: ../../flask/CHANGES.rst:784
msgid "Added missing future import that broke 2.5 compatibility."
msgstr ""

#: ../../flask/CHANGES.rst:785
msgid "Fixed an infinite redirect issue with blueprints."
msgstr ""

#: ../../flask/CHANGES.rst:789
msgid "Version 0.7"
msgstr ""

#: ../../flask/CHANGES.rst:791
msgid "Released 2011-06-28, codename Grappa"
msgstr ""

#: ../../flask/CHANGES.rst:793
msgid "Added :meth:`~flask.Flask.make_default_options_response` which can be used by subclasses to alter the default behavior for ``OPTIONS`` responses."
msgstr ""

#: ../../flask/CHANGES.rst:796
msgid "Unbound locals now raise a proper :exc:`RuntimeError` instead of an :exc:`AttributeError`."
msgstr ""

#: ../../flask/CHANGES.rst:798
msgid "Mimetype guessing and etag support based on file objects is now deprecated for :func:`flask.send_file` because it was unreliable. Pass filenames instead or attach your own etags and provide a proper mimetype by hand."
msgstr ""

#: ../../flask/CHANGES.rst:802
msgid "Static file handling for modules now requires the name of the static folder to be supplied explicitly. The previous autodetection was not reliable and caused issues on Google's App Engine. Until 1.0 the old behavior will continue to work but issue dependency warnings."
msgstr ""

#: ../../flask/CHANGES.rst:806
msgid "Fixed a problem for Flask to run on jython."
msgstr ""

#: ../../flask/CHANGES.rst:807
msgid "Added a ``PROPAGATE_EXCEPTIONS`` configuration variable that can be used to flip the setting of exception propagation which previously was linked to ``DEBUG`` alone and is now linked to either ``DEBUG`` or ``TESTING``."
msgstr ""

#: ../../flask/CHANGES.rst:811
msgid "Flask no longer internally depends on rules being added through the ``add_url_rule`` function and can now also accept regular werkzeug rules added to the url map."
msgstr ""

#: ../../flask/CHANGES.rst:814
msgid "Added an ``endpoint`` method to the flask application object which allows one to register a callback to an arbitrary endpoint with a decorator."
msgstr ""

#: ../../flask/CHANGES.rst:817
msgid "Use Last-Modified for static file sending instead of Date which was incorrectly introduced in 0.6."
msgstr ""

#: ../../flask/CHANGES.rst:819
msgid "Added ``create_jinja_loader`` to override the loader creation process."
msgstr ""

#: ../../flask/CHANGES.rst:821
msgid "Implemented a silent flag for ``config.from_pyfile``."
msgstr ""

#: ../../flask/CHANGES.rst:822
msgid "Added ``teardown_request`` decorator, for functions that should run at the end of a request regardless of whether an exception occurred. Also the behavior for ``after_request`` was changed. It's now no longer executed when an exception is raised. See :ref:`upgrading-to-new-teardown-handling`"
msgstr ""

#: ../../flask/CHANGES.rst:827
msgid "Implemented :func:`flask.has_request_context`"
msgstr ""

#: ../../flask/CHANGES.rst:828
msgid "Deprecated ``init_jinja_globals``. Override the :meth:`~flask.Flask.create_jinja_environment` method instead to achieve the same functionality."
msgstr ""

#: ../../flask/CHANGES.rst:831
msgid "Added :func:`flask.safe_join`"
msgstr ""

#: ../../flask/CHANGES.rst:832
msgid "The automatic JSON request data unpacking now looks at the charset mimetype parameter."
msgstr ""

#: ../../flask/CHANGES.rst:834
msgid "Don't modify the session on :func:`flask.get_flashed_messages` if there are no messages in the session."
msgstr ""

#: ../../flask/CHANGES.rst:836
msgid "``before_request`` handlers are now able to abort requests with errors."
msgstr ""

#: ../../flask/CHANGES.rst:838
msgid "It is not possible to define user exception handlers. That way you can provide custom error messages from a central hub for certain errors that might occur during request processing (for instance database connection errors, timeouts from remote resources etc.)."
msgstr ""

#: ../../flask/CHANGES.rst:842
msgid "Blueprints can provide blueprint specific error handlers."
msgstr ""

#: ../../flask/CHANGES.rst:843
msgid "Implemented generic :ref:`views` (class-based views)."
msgstr ""

#: ../../flask/CHANGES.rst:847
msgid "Version 0.6.1"
msgstr ""

#: ../../flask/CHANGES.rst:849
msgid "Released 2010-12-31"
msgstr ""

#: ../../flask/CHANGES.rst:851
msgid "Fixed an issue where the default ``OPTIONS`` response was not exposing all valid methods in the ``Allow`` header."
msgstr ""

#: ../../flask/CHANGES.rst:853
msgid "Jinja2 template loading syntax now allows \"./\" in front of a template load path. Previously this caused issues with module setups."
msgstr ""

#: ../../flask/CHANGES.rst:856
msgid "Fixed an issue where the subdomain setting for modules was ignored for the static folder."
msgstr ""

#: ../../flask/CHANGES.rst:858
msgid "Fixed a security problem that allowed clients to download arbitrary files if the host server was a windows based operating system and the client uses backslashes to escape the directory the files where exposed from."
msgstr ""

#: ../../flask/CHANGES.rst:865
msgid "Version 0.6"
msgstr ""

#: ../../flask/CHANGES.rst:867
msgid "Released 2010-07-27, codename Whisky"
msgstr ""

#: ../../flask/CHANGES.rst:869
msgid "After request functions are now called in reverse order of registration."
msgstr ""

#: ../../flask/CHANGES.rst:871
msgid "OPTIONS is now automatically implemented by Flask unless the application explicitly adds 'OPTIONS' as method to the URL rule. In this case no automatic OPTIONS handling kicks in."
msgstr ""

#: ../../flask/CHANGES.rst:874
msgid "Static rules are now even in place if there is no static folder for the module. This was implemented to aid GAE which will remove the static folder if it's part of a mapping in the .yml file."
msgstr ""

#: ../../flask/CHANGES.rst:877
msgid "The :attr:`~flask.Flask.config` is now available in the templates as ``config``."
msgstr ""

#: ../../flask/CHANGES.rst:879
msgid "Context processors will no longer override values passed directly to the render function."
msgstr ""

#: ../../flask/CHANGES.rst:881
msgid "Added the ability to limit the incoming request data with the new ``MAX_CONTENT_LENGTH`` configuration value."
msgstr ""

#: ../../flask/CHANGES.rst:883
msgid "The endpoint for the :meth:`flask.Module.add_url_rule` method is now optional to be consistent with the function of the same name on the application object."
msgstr ""

#: ../../flask/CHANGES.rst:886
msgid "Added a :func:`flask.make_response` function that simplifies creating response object instances in views."
msgstr ""

#: ../../flask/CHANGES.rst:888
msgid "Added signalling support based on blinker. This feature is currently optional and supposed to be used by extensions and applications. If you want to use it, make sure to have `blinker`_ installed."
msgstr ""

#: ../../flask/CHANGES.rst:891
msgid "Refactored the way URL adapters are created. This process is now fully customizable with the :meth:`~flask.Flask.create_url_adapter` method."
msgstr ""

#: ../../flask/CHANGES.rst:894
msgid "Modules can now register for a subdomain instead of just an URL prefix. This makes it possible to bind a whole module to a configurable subdomain."
msgstr ""

#: ../../flask/CHANGES.rst:902
msgid "Version 0.5.2"
msgstr ""

#: ../../flask/CHANGES.rst:904
msgid "Released 2010-07-15"
msgstr ""

#: ../../flask/CHANGES.rst:906
msgid "Fixed another issue with loading templates from directories when modules were used."
msgstr ""

#: ../../flask/CHANGES.rst:911
msgid "Version 0.5.1"
msgstr ""

#: ../../flask/CHANGES.rst:913
msgid "Released 2010-07-06"
msgstr ""

#: ../../flask/CHANGES.rst:915
msgid "Fixes an issue with template loading from directories when modules where used."
msgstr ""

#: ../../flask/CHANGES.rst:920
msgid "Version 0.5"
msgstr ""

#: ../../flask/CHANGES.rst:922
msgid "Released 2010-07-06, codename Calvados"
msgstr ""

#: ../../flask/CHANGES.rst:924
msgid "Fixed a bug with subdomains that was caused by the inability to specify the server name. The server name can now be set with the ``SERVER_NAME`` config key. This key is now also used to set the session cookie cross-subdomain wide."
msgstr ""

#: ../../flask/CHANGES.rst:928
msgid "Autoescaping is no longer active for all templates. Instead it is only active for ``.html``, ``.htm``, ``.xml`` and ``.xhtml``. Inside templates this behavior can be changed with the ``autoescape`` tag."
msgstr ""

#: ../../flask/CHANGES.rst:931
msgid "Refactored Flask internally. It now consists of more than a single file."
msgstr ""

#: ../../flask/CHANGES.rst:933
msgid ":func:`flask.send_file` now emits etags and has the ability to do conditional responses builtin."
msgstr ""

#: ../../flask/CHANGES.rst:935
msgid "(temporarily) dropped support for zipped applications. This was a rarely used feature and led to some confusing behavior."
msgstr ""

#: ../../flask/CHANGES.rst:937
msgid "Added support for per-package template and static-file directories."
msgstr ""

#: ../../flask/CHANGES.rst:938
msgid "Removed support for ``create_jinja_loader`` which is no longer used in 0.5 due to the improved module support."
msgstr ""

#: ../../flask/CHANGES.rst:940
msgid "Added a helper function to expose files from any directory."
msgstr ""

#: ../../flask/CHANGES.rst:944
msgid "Version 0.4"
msgstr ""

#: ../../flask/CHANGES.rst:946
msgid "Released 2010-06-18, codename Rakia"
msgstr ""

#: ../../flask/CHANGES.rst:948
msgid "Added the ability to register application wide error handlers from modules."
msgstr ""

#: ../../flask/CHANGES.rst:950
msgid ":meth:`~flask.Flask.after_request` handlers are now also invoked if the request dies with an exception and an error handling page kicks in."
msgstr ""

#: ../../flask/CHANGES.rst:953
msgid "Test client has not the ability to preserve the request context for a little longer. This can also be used to trigger custom requests that do not pop the request stack for testing."
msgstr ""

#: ../../flask/CHANGES.rst:956
msgid "Because the Python standard library caches loggers, the name of the logger is configurable now to better support unittests."
msgstr ""

#: ../../flask/CHANGES.rst:958
msgid "Added ``TESTING`` switch that can activate unittesting helpers."
msgstr ""

#: ../../flask/CHANGES.rst:959
msgid "The logger switches to ``DEBUG`` mode now if debug is enabled."
msgstr ""

#: ../../flask/CHANGES.rst:963
msgid "Version 0.3.1"
msgstr ""

#: ../../flask/CHANGES.rst:965
msgid "Released 2010-05-28"
msgstr ""

#: ../../flask/CHANGES.rst:967
msgid "Fixed a error reporting bug with :meth:`flask.Config.from_envvar`"
msgstr ""

#: ../../flask/CHANGES.rst:968
msgid "Removed some unused code from flask"
msgstr ""

#: ../../flask/CHANGES.rst:969
msgid "Release does no longer include development leftover files (.git folder for themes, built documentation in zip and pdf file and some .pyc files)"
msgstr ""

#: ../../flask/CHANGES.rst:975
msgid "Version 0.3"
msgstr ""

#: ../../flask/CHANGES.rst:977
msgid "Released 2010-05-28, codename Schnaps"
msgstr ""

#: ../../flask/CHANGES.rst:979
msgid "Added support for categories for flashed messages."
msgstr ""

#: ../../flask/CHANGES.rst:980
msgid "The application now configures a :class:`logging.Handler` and will log request handling exceptions to that logger when not in debug mode. This makes it possible to receive mails on server errors for example."
msgstr ""

#: ../../flask/CHANGES.rst:984
msgid "Added support for context binding that does not require the use of the with statement for playing in the console."
msgstr ""

#: ../../flask/CHANGES.rst:986
msgid "The request context is now available within the with statement making it possible to further push the request context or pop it."
msgstr ""

#: ../../flask/CHANGES.rst:988
msgid "Added support for configurations."
msgstr ""

#: ../../flask/CHANGES.rst:992
msgid "Version 0.2"
msgstr ""

#: ../../flask/CHANGES.rst:994
msgid "Released 2010-05-12, codename J?germeister"
msgstr ""

#: ../../flask/CHANGES.rst:996
msgid "Various bugfixes"
msgstr ""

#: ../../flask/CHANGES.rst:997
msgid "Integrated JSON support"
msgstr ""

#: ../../flask/CHANGES.rst:998
msgid "Added :func:`~flask.get_template_attribute` helper function."
msgstr ""

#: ../../flask/CHANGES.rst:999
msgid ":meth:`~flask.Flask.add_url_rule` can now also register a view function."
msgstr ""

#: ../../flask/CHANGES.rst:1001
msgid "Refactored internal request dispatching."
msgstr ""

#: ../../flask/CHANGES.rst:1002
msgid "Server listens on 127.0.0.1 by default now to fix issues with chrome."
msgstr ""

#: ../../flask/CHANGES.rst:1004
msgid "Added external URL support."
msgstr ""

#: ../../flask/CHANGES.rst:1005
msgid "Added support for :func:`~flask.send_file`"
msgstr ""

#: ../../flask/CHANGES.rst:1006
msgid "Module support and internal request handling refactoring to better support pluggable applications."
msgstr ""

#: ../../flask/CHANGES.rst:1008
msgid "Sessions can be set to be permanent now on a per-session basis."
msgstr ""

#: ../../flask/CHANGES.rst:1009
msgid "Better error reporting on missing secret keys."
msgstr ""

#: ../../flask/CHANGES.rst:1010
msgid "Added support for Google Appengine."
msgstr ""

#: ../../flask/CHANGES.rst:1014
msgid "Version 0.1"
msgstr ""

#: ../../flask/CHANGES.rst:1016
msgid "Released 2010-04-16"
msgstr ""

#: ../../flask/CHANGES.rst:1018
msgid "First public preview release."
msgstr ""

