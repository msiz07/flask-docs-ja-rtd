# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010 Pallets
# This file is distributed under the same license as the Flask package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Flask 1.1.x\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-11-21 13:44+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../htmlfaq.rst:2
# b029d788b2084bad94fc7c150aea216a
msgid "HTML/XHTML FAQ"
msgstr ""

#: ../../htmlfaq.rst:4
# d1d6a7047b524266a53651b9cfa33a66
msgid "The Flask documentation and example applications are using HTML5.  You may notice that in many situations, when end tags are optional they are not used, so that the HTML is cleaner and faster to load.  Because there is much confusion about HTML and XHTML among developers, this document tries to answer some of the major questions."
msgstr ""

#: ../../htmlfaq.rst:12
# fe89f07b1cc143558b1279c2ecd566a8
msgid "History of XHTML"
msgstr ""

#: ../../htmlfaq.rst:14
# 9190ec8884884b30a4dcb11fe04e5d7f
msgid "For a while, it appeared that HTML was about to be replaced by XHTML. However, barely any websites on the Internet are actual XHTML (which is HTML processed using XML rules).  There are a couple of major reasons why this is the case.  One of them is Internet Explorer's lack of proper XHTML support. The XHTML spec states that XHTML must be served with the MIME type :mimetype:`application/xhtml+xml`, but Internet Explorer refuses to read files with that MIME type. While it is relatively easy to configure Web servers to serve XHTML properly, few people do.  This is likely because properly using XHTML can be quite painful."
msgstr ""

#: ../../htmlfaq.rst:25
# 7c2b683ceaac4f058b4b5ad3bbe028df
msgid "One of the most important causes of pain is XML's draconian (strict and ruthless) error handling.  When an XML parsing error is encountered, the browser is supposed to show the user an ugly error message, instead of attempting to recover from the error and display what it can.  Most of the (X)HTML generation on the web is based on non-XML template engines (such as Jinja, the one used in Flask) which do not protect you from accidentally creating invalid XHTML.  There are XML based template engines, such as Kid and the popular Genshi, but they often come with a larger runtime overhead and are not as straightforward to use because they have to obey XML rules."
msgstr ""

#: ../../htmlfaq.rst:36
# 676592b4e3674f2084d919c516061fe1
msgid "The majority of users, however, assumed they were properly using XHTML. They wrote an XHTML doctype at the top of the document and self-closed all the necessary tags (``<br>`` becomes ``<br/>`` or ``<br></br>`` in XHTML). However, even if the document properly validates as XHTML, what really determines XHTML/HTML processing in browsers is the MIME type, which as said before is often not set properly. So the valid XHTML was being treated as invalid HTML."
msgstr ""

#: ../../htmlfaq.rst:44
# ec60032ead8c48efa2a66fb601e60c28
msgid "XHTML also changed the way JavaScript is used. To properly work with XHTML, programmers have to use the namespaced DOM interface with the XHTML namespace to query for HTML elements."
msgstr ""

#: ../../htmlfaq.rst:49
# cd984c007303491facf29e5e93a035ff
msgid "History of HTML5"
msgstr ""

#: ../../htmlfaq.rst:51
# 59f7abd7ce4f46198de8a7b895d94e08
msgid "Development of the HTML5 specification was started in 2004 under the name \"Web Applications 1.0\" by the Web Hypertext Application Technology Working Group, or WHATWG (which was formed by the major browser vendors Apple, Mozilla, and Opera) with the goal of writing a new and improved HTML specification, based on existing browser behavior instead of unrealistic and backwards-incompatible specifications."
msgstr ""

#: ../../htmlfaq.rst:58
# 35f09ee8549e4eec8a32b2c611dd94e1
msgid "For example, in HTML4 ``<title/Hello/`` theoretically parses exactly the same as ``<title>Hello</title>``.  However, since people were using XHTML-like tags along the lines of ``<link />``, browser vendors implemented the XHTML syntax over the syntax defined by the specification."
msgstr ""

#: ../../htmlfaq.rst:63
# c696b9d32d8c45ad837643d92f7292f2
msgid "In 2007, the specification was adopted as the basis of a new HTML specification under the umbrella of the W3C, known as HTML5.  Currently, it appears that XHTML is losing traction, as the XHTML 2 working group has been disbanded and HTML5 is being implemented by all major browser vendors."
msgstr ""

#: ../../htmlfaq.rst:69
# ba2ef04057ce4332a3e1c7b9ad3e0a44
msgid "HTML versus XHTML"
msgstr ""

#: ../../htmlfaq.rst:71
# fc4e1f76381f47b2948b69fa80e7a249
msgid "The following table gives you a quick overview of features available in HTML 4.01, XHTML 1.1 and HTML5. (XHTML 1.0 is not included, as it was superseded by XHTML 1.1 and the barely-used XHTML5.)"
msgstr ""

#: ../../htmlfaq.rst:78
# 786c92f6454f491a98fb57227bb3fe88
msgid "HTML4.01"
msgstr ""

#: ../../htmlfaq.rst:78
# 8bbe216b665542a39401e20606f27805
msgid "XHTML1.1"
msgstr ""

#: ../../htmlfaq.rst:78
# f698ecae7fcc4ecca5b45c099c73b07f
msgid "HTML5"
msgstr ""

#: ../../htmlfaq.rst:80
# 3df6da2e35f8481dbe2a7ca76785e66f
msgid "``<tag/value/`` == ``<tag>value</tag>``"
msgstr ""

#: ../../htmlfaq.rst:80
# d8b4e4be1df7488c92984699388f2eb2
msgid "|Y| [1]_"
msgstr ""

#: ../../htmlfaq.rst:80
#: ../../htmlfaq.rst:80
#: ../../htmlfaq.rst:82
#: ../../htmlfaq.rst:84
#: ../../htmlfaq.rst:84
#: ../../htmlfaq.rst:88
#: ../../htmlfaq.rst:88
#: ../../htmlfaq.rst:91
#: ../../htmlfaq.rst:91
#: ../../htmlfaq.rst:93
#: ../../htmlfaq.rst:95
#: ../../htmlfaq.rst:97
#: ../../htmlfaq.rst:97
#: ../../htmlfaq.rst:99
#: ../../htmlfaq.rst:99
#: ../../htmlfaq.rst:101
#: ../../htmlfaq.rst:101
# c62838405059489baa27f5fb0c215e89
# 5adc944393774285b007daecf284fba9
# c8eaa44282dc48ce83166f1b43fcc0aa
# 61a684df6fef48caaafa53ed8d069a44
# 224e584a7c1d4e2b989d904ce082b633
# 51bdff84838a4683861b2b4e565bb436
# 16ca99823c5d4162a7941dae6d7a0725
# d1ec30583a9142988bbdccfd30f826ee
# 4a2d103bb547411aa0998322ca50c525
# c0f572248356490585464086bcf5f1b6
# 062162b967c34872a5cd3a735f767c09
# 3f500e950ff342f5a4eb20c39c1496e8
# c49ff9d6d2c94b0eac65f963c1779a1c
# c30fbb202da94d81bda1d5c0bbf439d5
# 308f508ee51246789c884ee3fdd47a2e
# b958a5e663214a0288c3a8dd702b308d
# b763c1001f774714a8a0983c8b8350ba
msgid "|N|"
msgstr ""

#: ../../htmlfaq.rst:82
# 66ec55a771a441adaae16e47bbad934c
msgid "``<br/>`` supported"
msgstr ""

#: ../../htmlfaq.rst:82
#: ../../htmlfaq.rst:84
#: ../../htmlfaq.rst:86
#: ../../htmlfaq.rst:86
#: ../../htmlfaq.rst:88
#: ../../htmlfaq.rst:91
#: ../../htmlfaq.rst:93
#: ../../htmlfaq.rst:93
#: ../../htmlfaq.rst:95
#: ../../htmlfaq.rst:95
#: ../../htmlfaq.rst:97
#: ../../htmlfaq.rst:99
#: ../../htmlfaq.rst:101
# 42c6a43842044042bd053374e40f6bf4
# 92f1334b05f84e99b8300469f4dcec75
# efea294eff0e40548b9f2417765adcc1
# 5b98c793b9ea4ad8be7007910da4fc9b
# 8093f6b5bf3146da9c3d01f4300bc3e7
# 5dd8c946b31a4708944da20fd72fd04e
# 1b2d22b84444415f84535f595fc1756b
# 9f0bd6bb2ca44551ac58e94eecec00c9
# d2d2db681e8d4dfa875cf389279f6929
# f39f73bec3ae4a798f165f767adb0885
# caa3bafb89fc49bb9c39dfbe074d8359
# 961b1d71f59d4957a82956946a4ab786
# f11868ee43fa499c9c0fc91e36b4e05b
msgid "|Y|"
msgstr ""

#: ../../htmlfaq.rst:82
# daac620421e842ae9d76fc8da597362a
msgid "|Y| [2]_"
msgstr ""

#: ../../htmlfaq.rst:84
# b175d9ea9a0e4730ad11d2d9f6cd4b6d
msgid "``<script/>`` supported"
msgstr ""

#: ../../htmlfaq.rst:86
# 7710f8302fe0481fadafefd309a3c8b4
msgid "should be served as `text/html`"
msgstr ""

#: ../../htmlfaq.rst:86
# d182331703cc486fbf537f275a914800
msgid "|N| [3]_"
msgstr ""

#: ../../htmlfaq.rst:88
# 9ba13ab1c96e4a549b56763f9956c766
msgid "should be served as `application/xhtml+xml`"
msgstr ""

#: ../../htmlfaq.rst:91
# 69d9e2481c974bf9b3d171a6ec7e8632
msgid "strict error handling"
msgstr ""

#: ../../htmlfaq.rst:93
# a508b27fb4c84212bef50f77c2466a73
msgid "inline SVG"
msgstr ""

#: ../../htmlfaq.rst:95
# 24d8797192fc4fd4ae0a9d287e3da2fb
msgid "inline MathML"
msgstr ""

#: ../../htmlfaq.rst:97
# 6d398a35f11641858449a841bd30c4e0
msgid "``<video>`` tag"
msgstr ""

#: ../../htmlfaq.rst:99
# 60e54e898265427a9bbc6319e0ac458b
msgid "``<audio>`` tag"
msgstr ""

#: ../../htmlfaq.rst:101
# 14e702920c5346808ddcf2713e4c1a82
msgid "New semantic tags like ``<article>``"
msgstr ""

#: ../../htmlfaq.rst:104
# 8c5418d6ff4c4cc6b7759e60a235b74a
msgid "This is an obscure feature inherited from SGML. It is usually not supported by browsers, for reasons detailed above."
msgstr ""

#: ../../htmlfaq.rst:106
# fe65da0a16234206a0576297aba355d7
msgid "This is for compatibility with server code that generates XHTML for tags such as ``<br>``.  It should not be used in new code."
msgstr ""

#: ../../htmlfaq.rst:108
# 174a1609efb74a8a8d2da19094f60d8a
msgid "XHTML 1.0 is the last XHTML standard that allows to be served as `text/html` for backwards compatibility reasons."
msgstr ""

#: ../../htmlfaq.rst:117
# cc45b5f0edd84b6097ba7f3e823f5e7b
msgid "What does \"strict\" mean?"
msgstr ""

#: ../../htmlfaq.rst:119
# 8378064dc15c45b8bef34dc943482518
msgid "HTML5 has strictly defined parsing rules, but it also specifies exactly how a browser should react to parsing errors - unlike XHTML, which simply states parsing should abort. Some people are confused by apparently invalid syntax that still generates the expected results (for example, missing end tags or unquoted attribute values)."
msgstr ""

#: ../../htmlfaq.rst:125
# 890229a9d22943aa8e32d77c4205a460
msgid "Some of these work because of the lenient error handling most browsers use when they encounter a markup error, others are actually specified.  The following constructs are optional in HTML5 by standard, but have to be supported by browsers:"
msgstr ""

#: ../../htmlfaq.rst:130
# 66780c49f2fd49b18913aa69abf6009d
msgid "Wrapping the document in an ``<html>`` tag"
msgstr ""

#: ../../htmlfaq.rst:131
# c87586a5efe94afb95df7de29d5e707b
msgid "Wrapping header elements in ``<head>`` or the body elements in ``<body>``"
msgstr ""

#: ../../htmlfaq.rst:133
# 837264077634422ba5e6cb59f1fd8468
msgid "Closing the ``<p>``, ``<li>``, ``<dt>``, ``<dd>``, ``<tr>``, ``<td>``, ``<th>``, ``<tbody>``, ``<thead>``, or ``<tfoot>`` tags."
msgstr ""

#: ../../htmlfaq.rst:135
# 97f443ece8ae47248e6a6d04f3cc8d6d
msgid "Quoting attributes, so long as they contain no whitespace or special characters (like ``<``, ``>``, ``'``, or ``\"``)."
msgstr ""

#: ../../htmlfaq.rst:137
# 7de965163cab4f25a6a753c2071f5bef
msgid "Requiring boolean attributes to have a value."
msgstr ""

#: ../../htmlfaq.rst:139
# 4c551f325fce40e1bec1ebf79dc025a1
msgid "This means the following page in HTML5 is perfectly valid:"
msgstr ""

#: ../../htmlfaq.rst:169
# 5ac6ca6c3479499dadf6063b695ea9bc
msgid "New technologies in HTML5"
msgstr ""

#: ../../htmlfaq.rst:171
# 12b6b7dc82524970b49b4b94274abd8d
msgid "HTML5 adds many new features that make Web applications easier to write and to use."
msgstr ""

#: ../../htmlfaq.rst:174
# a503db2fe5eb4f8cb80d6bc64eb79e7c
msgid "The ``<audio>`` and ``<video>`` tags provide a way to embed audio and video without complicated add-ons like QuickTime or Flash."
msgstr ""

#: ../../htmlfaq.rst:176
# 12a50dce2b5748ffaf8c42514b6ea06c
msgid "Semantic elements like ``<article>``, ``<header>``, ``<nav>``, and ``<time>`` that make content easier to understand."
msgstr ""

#: ../../htmlfaq.rst:178
# 223b09d3716340b3a2d3ac9f41790ad9
msgid "The ``<canvas>`` tag, which supports a powerful drawing API, reducing the need for server-generated images to present data graphically."
msgstr ""

#: ../../htmlfaq.rst:180
# 1270019336934cf0ab6ae9775c1ddbd5
msgid "New form control types like ``<input type=\"date\">`` that allow user agents to make entering and validating values easier."
msgstr ""

#: ../../htmlfaq.rst:182
# dace956b52fa4f559333b37fea14f0cd
msgid "Advanced JavaScript APIs like Web Storage, Web Workers, Web Sockets, geolocation, and offline applications."
msgstr ""

#: ../../htmlfaq.rst:185
# 7684d5d2e1c845a686bd519db53475dc
msgid "Many other features have been added, as well. A good guide to new features in HTML5 is Mark Pilgrim's soon-to-be-published book, `Dive Into HTML5`_. Not all of them are supported in browsers yet, however, so use caution."
msgstr ""

#: ../../htmlfaq.rst:192
# a8087db7ee864e73912a2f1d90cf9f20
msgid "What should be used?"
msgstr ""

#: ../../htmlfaq.rst:194
# 905b3fbf60c5483f9235c6d353821de6
msgid "Currently, the answer is HTML5.  There are very few reasons to use XHTML considering the latest developments in Web browsers.  To summarize the reasons given above:"
msgstr ""

#: ../../htmlfaq.rst:198
# 2931894857bb4b42afbe0c381d54144f
msgid "Internet Explorer (which, sadly, currently leads in market share) has poor support for XHTML."
msgstr ""

#: ../../htmlfaq.rst:200
# d80839f1030446f1adf8fefd5071f2fd
msgid "Many JavaScript libraries also do not support XHTML, due to the more complicated namespacing API it requires."
msgstr ""

#: ../../htmlfaq.rst:202
# dfe8c0a7f27c46939c92a6dbf43ac7c1
msgid "HTML5 adds several new features, including semantic tags and the long-awaited ``<audio>`` and ``<video>`` tags."
msgstr ""

#: ../../htmlfaq.rst:204
# 451e3ad1e92b4e6a9444d25467f36167
msgid "It has the support of most browser vendors behind it."
msgstr ""

#: ../../htmlfaq.rst:205
# e4da7cd0d170461d83e44c500421403d
msgid "It is much easier to write, and more compact."
msgstr ""

#: ../../htmlfaq.rst:207
# f6a2b319a212438fbfdd79b5fcdbc44e
msgid "For most applications, it is undoubtedly better to use HTML5 than XHTML."
msgstr ""

