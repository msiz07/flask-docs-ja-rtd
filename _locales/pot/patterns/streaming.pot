# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010 Pallets
# This file is distributed under the same license as the Flask package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Flask 2.2.x\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-11-26 22:21+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../flask/docs/patterns/streaming.rst:2
msgid "Streaming Contents"
msgstr ""

#: ../../flask/docs/patterns/streaming.rst:4
msgid "Sometimes you want to send an enormous amount of data to the client, much more than you want to keep in memory.  When you are generating the data on the fly though, how do you send that back to the client without the roundtrip to the filesystem?"
msgstr ""

#: ../../flask/docs/patterns/streaming.rst:9
msgid "The answer is by using generators and direct responses."
msgstr ""

#: ../../flask/docs/patterns/streaming.rst:12
msgid "Basic Usage"
msgstr ""

#: ../../flask/docs/patterns/streaming.rst:14
msgid "This is a basic view function that generates a lot of CSV data on the fly. The trick is to have an inner function that uses a generator to generate data and to then invoke that function and pass it to a response object::"
msgstr ""

#: ../../flask/docs/patterns/streaming.rst:25
msgid "Each ``yield`` expression is directly sent to the browser.  Note though that some WSGI middlewares might break streaming, so be careful there in debug environments with profilers and other things you might have enabled."
msgstr ""

#: ../../flask/docs/patterns/streaming.rst:30
msgid "Streaming from Templates"
msgstr ""

#: ../../flask/docs/patterns/streaming.rst:32
msgid "The Jinja2 template engine supports rendering a template piece by piece, returning an iterator of strings. Flask provides the :func:`~flask.stream_template` and :func:`~flask.stream_template_string` functions to make this easier to use."
msgstr ""

#: ../../flask/docs/patterns/streaming.rst:45
msgid "The parts yielded by the render stream tend to match statement blocks in the template."
msgstr ""

#: ../../flask/docs/patterns/streaming.rst:50
msgid "Streaming with Context"
msgstr ""

#: ../../flask/docs/patterns/streaming.rst:52
msgid "The :data:`~flask.request` will not be active while the generator is running, because the view has already returned at that point. If you try to access ``request``, you'll get a ``RuntimeError``."
msgstr ""

#: ../../flask/docs/patterns/streaming.rst:56
msgid "If your generator function relies on data in ``request``, use the :func:`~flask.stream_with_context` wrapper. This will keep the request context active during the generator."
msgstr ""

#: ../../flask/docs/patterns/streaming.rst:73
msgid "It can also be used as a decorator."
msgstr ""

#: ../../flask/docs/patterns/streaming.rst:83
msgid "The :func:`~flask.stream_template` and :func:`~flask.stream_template_string` functions automatically use :func:`~flask.stream_with_context` if a request is active."
msgstr ""
